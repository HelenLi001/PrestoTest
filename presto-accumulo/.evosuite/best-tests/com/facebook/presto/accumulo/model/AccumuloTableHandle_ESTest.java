/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 01:28:45 GMT 2021
 */

package com.facebook.presto.accumulo.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.accumulo.model.AccumuloTableHandle;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AccumuloTableHandle_ESTest extends AccumuloTableHandle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("INDEX_LOADER_TIMEOUT", "INDEX_LOADER_TIMEOUT", "org.apache.hadoop.io.Text", "INDEX_LOADER_TIMEOUT", true, "org.apache.hadoop.io.Text", (Optional<String>) null);
      // Undeclared exception!
      try { 
        accumuloTableHandle0.getSerializerInstance();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Configured serializer class not found
         //
         verifyException("com.facebook.presto.accumulo.model.AccumuloTableHandle", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("INVALID_CAST_ARGUMENT", "a", "", "", true, "", (Optional<String>) null);
      boolean boolean0 = accumuloTableHandle0.isExternal();
      assertEquals("", accumuloTableHandle0.getSerializerClassName());
      assertEquals("INVALID_CAST_ARGUMENT", accumuloTableHandle0.getConnectorId());
      assertEquals("a", accumuloTableHandle0.getSchema());
      assertEquals("", accumuloTableHandle0.getRowId());
      assertTrue(boolean0);
      assertEquals("", accumuloTableHandle0.getTable());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("", "2AgH", "", "", false, "Configured serializer class not found", (Optional<String>) null);
      String string0 = accumuloTableHandle0.getTable();
      assertEquals("2AgH", accumuloTableHandle0.getSchema());
      assertEquals("Configured serializer class not found", accumuloTableHandle0.getSerializerClassName());
      assertEquals("", string0);
      assertEquals("", accumuloTableHandle0.getConnectorId());
      assertEquals("", accumuloTableHandle0.getRowId());
      assertFalse(accumuloTableHandle0.isExternal());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("", "", "", "", true, "", (Optional<String>) null);
      accumuloTableHandle0.getSerializerClassName();
      assertTrue(accumuloTableHandle0.isExternal());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("", "", "", "", true, "", (Optional<String>) null);
      accumuloTableHandle0.getSchema();
      assertTrue(accumuloTableHandle0.isExternal());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle(":,2\"'_o!Zws:cqL;", ":,2\"'_o!Zws:cqL;", "", "", false, "rowId", (Optional<String>) null);
      String string0 = accumuloTableHandle0.getRowId();
      assertFalse(accumuloTableHandle0.isExternal());
      assertEquals("rowId", accumuloTableHandle0.getSerializerClassName());
      assertEquals(":,2\"'_o!Zws:cqL;", accumuloTableHandle0.getSchema());
      assertEquals(":,2\"'_o!Zws:cqL;", accumuloTableHandle0.getConnectorId());
      assertEquals("", accumuloTableHandle0.getTable());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("", "", "", "", false, "H'\"j5,jr.#HFU#", (Optional<String>) null);
      String string0 = accumuloTableHandle0.getConnectorId();
      assertEquals("H'\"j5,jr.#HFU#", accumuloTableHandle0.getSerializerClassName());
      assertEquals("", accumuloTableHandle0.getTable());
      assertEquals("", string0);
      assertEquals("", accumuloTableHandle0.getRowId());
      assertFalse(accumuloTableHandle0.isExternal());
      assertEquals("", accumuloTableHandle0.getSchema());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("QUERY_REJECTED", "g_g[", "", "_", false, "QUERY_REJECTED", (Optional<String>) null);
      // Undeclared exception!
      try { 
        accumuloTableHandle0.toSchemaTableName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // tableName is empty
         //
         verifyException("com.facebook.presto.spi.SchemaUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = null;
      try {
        accumuloTableHandle0 = new AccumuloTableHandle("Vj", "Vj", (String) null, "O%gtVn`o", false, "Vj", (Optional<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // table is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("4-9=[h", "4-9=[h", "4-9=[h", "4-9=[h", false, "4-9=[h", (Optional<String>) null);
      AccumuloTableHandle accumuloTableHandle1 = new AccumuloTableHandle("4-9=[h", "4-9=[h", "4-9=[h", "4-9=[h", false, "CEFge/7-R", (Optional<String>) null);
      boolean boolean0 = accumuloTableHandle0.equals(accumuloTableHandle1);
      assertEquals("4-9=[h", accumuloTableHandle1.getRowId());
      assertEquals("4-9=[h", accumuloTableHandle1.getTable());
      assertEquals("4-9=[h", accumuloTableHandle1.getConnectorId());
      assertFalse(accumuloTableHandle1.isExternal());
      assertFalse(boolean0);
      assertEquals("4-9=[h", accumuloTableHandle1.getSchema());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("aR=[)", "aR=[)", "aR=[)", "aR=[)", false, "aR=[)", (Optional<String>) null);
      AccumuloTableHandle accumuloTableHandle1 = new AccumuloTableHandle("aR=[)", "aR=[)", "aR=[)", "aR=[)", true, "aR=[)", (Optional<String>) null);
      boolean boolean0 = accumuloTableHandle0.equals(accumuloTableHandle1);
      assertTrue(accumuloTableHandle1.isExternal());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("4-N>[h", "4-N>[h", "4-N>[h", "4-N>[h", true, "4-N>[h", (Optional<String>) null);
      AccumuloTableHandle accumuloTableHandle1 = new AccumuloTableHandle("4-N>[h", "4-N>[h", "4-N>[h", "F2}0P", false, "", (Optional<String>) null);
      boolean boolean0 = accumuloTableHandle0.equals(accumuloTableHandle1);
      assertEquals("F2}0P", accumuloTableHandle1.getRowId());
      assertFalse(boolean0);
      assertEquals("4-N>[h", accumuloTableHandle1.getConnectorId());
      assertEquals("4-N>[h", accumuloTableHandle1.getSchema());
      assertEquals("4-N>[h", accumuloTableHandle1.getTable());
      assertEquals("", accumuloTableHandle1.getSerializerClassName());
      assertFalse(accumuloTableHandle1.isExternal());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("4-9=[h", "4-9=[h", "4-9=[h", "4-9=[h", false, "4-9=[h", (Optional<String>) null);
      AccumuloTableHandle accumuloTableHandle1 = new AccumuloTableHandle("4-9=[h", "4-9=[h", "CEFge/7-R", "CEFge/7-R", false, "4-9=[h", (Optional<String>) null);
      boolean boolean0 = accumuloTableHandle0.equals(accumuloTableHandle1);
      assertEquals("CEFge/7-R", accumuloTableHandle1.getRowId());
      assertEquals("4-9=[h", accumuloTableHandle1.getConnectorId());
      assertFalse(accumuloTableHandle1.isExternal());
      assertEquals("CEFge/7-R", accumuloTableHandle1.getTable());
      assertEquals("4-9=[h", accumuloTableHandle1.getSchema());
      assertEquals("4-9=[h", accumuloTableHandle1.getSerializerClassName());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("|BEzvBxz", "}|HL|7wmA", "}|HL|7wmA", "}|HL|7wmA", true, "}|HL|7wmA", (Optional<String>) null);
      AccumuloTableHandle accumuloTableHandle1 = new AccumuloTableHandle("|BEzvBxz", "|BEzvBxz", "|BEzvBxz", "}|HL|7wmA", true, "}|HL|7wmA", (Optional<String>) null);
      boolean boolean0 = accumuloTableHandle0.equals(accumuloTableHandle1);
      assertEquals("}|HL|7wmA", accumuloTableHandle0.getSchema());
      assertEquals("|BEzvBxz", accumuloTableHandle1.getTable());
      assertTrue(accumuloTableHandle1.isExternal());
      assertEquals("|BEzvBxz", accumuloTableHandle0.getConnectorId());
      assertEquals("}|HL|7wmA", accumuloTableHandle1.getRowId());
      assertEquals("}|HL|7wmA", accumuloTableHandle1.getSerializerClassName());
      assertFalse(boolean0);
      assertEquals("|BEzvBxz", accumuloTableHandle1.getSchema());
      assertEquals("}|HL|7wmA", accumuloTableHandle0.getTable());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("}|HL|7wmA", "}|HL|7wmA", "}|HL|7wmA", "}|HL|7wmA", true, "}|HL|7wmA", (Optional<String>) null);
      AccumuloTableHandle accumuloTableHandle1 = new AccumuloTableHandle("|BEzvBxz", "}|HL|7wmA", "}|HL|7wmA", "}|HL|7wmA", true, "}|HL|7wmA", (Optional<String>) null);
      boolean boolean0 = accumuloTableHandle0.equals(accumuloTableHandle1);
      assertEquals("}|HL|7wmA", accumuloTableHandle1.getTable());
      assertEquals("}|HL|7wmA", accumuloTableHandle1.getSerializerClassName());
      assertEquals("}|HL|7wmA", accumuloTableHandle1.getRowId());
      assertFalse(boolean0);
      assertTrue(accumuloTableHandle1.isExternal());
      assertEquals("}|HL|7wmA", accumuloTableHandle1.getSchema());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("4-9=[h", "4-9=[h", "4-9=[h", "4-9=[h", true, "4-9=[h", (Optional<String>) null);
      AccumuloTableHandle accumuloTableHandle1 = new AccumuloTableHandle("4-9=[h", "4-9=[h", "4-9=[h", "4-9=[h", true, "4-9=[h", (Optional<String>) null);
      boolean boolean0 = accumuloTableHandle0.equals(accumuloTableHandle1);
      assertTrue(boolean0);
      assertTrue(accumuloTableHandle1.isExternal());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("4-N>[h", "4-N>[h", "4-N>[h", "4-N>[h", true, "4-N>[h", (Optional<String>) null);
      boolean boolean0 = accumuloTableHandle0.equals((Object) null);
      assertFalse(boolean0);
      assertTrue(accumuloTableHandle0.isExternal());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("7<=~:W_GY|eV", "7<=~:W_GY|eV", "7<=~:W_GY|eV", "7<=~:W_GY|eV", false, "7<=~:W_GY|eV", (Optional<String>) null);
      boolean boolean0 = accumuloTableHandle0.equals(accumuloTableHandle0);
      assertFalse(accumuloTableHandle0.isExternal());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("4-9=[h", "4-9=[h", "4-9=[h", "4-9=[h", true, "4-9=[h", (Optional<String>) null);
      boolean boolean0 = accumuloTableHandle0.equals("4-9=[h");
      assertTrue(accumuloTableHandle0.isExternal());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("4-9=[h", "4-9=[h", "4-9=[h", "4-9=[h", true, "4-9=[h", (Optional<String>) null);
      accumuloTableHandle0.getConnectorId();
      assertTrue(accumuloTableHandle0.isExternal());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("7<=~:W_GY|eV", "7<=~:W_GY|eV", "7<=~:W_GY|eV", "7<=~:W_GY|eV", false, "7<=~:W_GY|eV", (Optional<String>) null);
      accumuloTableHandle0.getSerializerClassName();
      assertFalse(accumuloTableHandle0.isExternal());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("7<=~:W_GY|eV", "7<=~:W_GY|eV", "7<=~:W_GY|eV", "7<=~:W_GY|eV", false, "7<=~:W_GY|eV", (Optional<String>) null);
      accumuloTableHandle0.getScanAuthorizations();
      assertFalse(accumuloTableHandle0.isExternal());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("4-9=[h", "4-9=[h", "4-9=[h", "4-9=[h", true, "4-9=[h", (Optional<String>) null);
      accumuloTableHandle0.getRowId();
      assertTrue(accumuloTableHandle0.isExternal());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("7<=~:W_GY|eV", "7<=~:W_GY|eV", "7<=~:W_GY|eV", "7<=~:W_GY|eV", false, "7<=~:W_GY|eV", (Optional<String>) null);
      String string0 = accumuloTableHandle0.toString();
      assertEquals("AccumuloTableHandle{connectorId=7<=~:W_GY|eV, schema=7<=~:W_GY|eV, table=7<=~:W_GY|eV, rowId=7<=~:W_GY|eV, internal=false, serializerClassName=7<=~:W_GY|eV, scanAuthorizations=null}", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("7<=~:W_GY|eV", "7<=~:W_GY|eV", "7<=~:W_GY|eV", "7<=~:W_GY|eV", false, "7<=~:W_GY|eV", (Optional<String>) null);
      accumuloTableHandle0.getTable();
      assertFalse(accumuloTableHandle0.isExternal());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("7<=~:W_GY|eV", "7<=~:W_GY|eV", "7<=~:W_GY|eV", "7<=~:W_GY|eV", false, "7<=~:W_GY|eV", (Optional<String>) null);
      accumuloTableHandle0.hashCode();
      assertFalse(accumuloTableHandle0.isExternal());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("4-9=[h", "4-9=[h", "4-9=[h", "4-9=[h", true, "4-9=[h", (Optional<String>) null);
      accumuloTableHandle0.toSchemaTableName();
      assertTrue(accumuloTableHandle0.isExternal());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("7<=~:W_GY|eV", "7<=~:W_GY|eV", "7<=~:W_GY|eV", "7<=~:W_GY|eV", false, "7<=~:W_GY|eV", (Optional<String>) null);
      accumuloTableHandle0.getSchema();
      assertFalse(accumuloTableHandle0.isExternal());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AccumuloTableHandle accumuloTableHandle0 = new AccumuloTableHandle("", "", "", "", false, "H'\"j5,jr.#HFU#", (Optional<String>) null);
      boolean boolean0 = accumuloTableHandle0.isExternal();
      assertEquals("", accumuloTableHandle0.getTable());
      assertEquals("", accumuloTableHandle0.getSchema());
      assertEquals("", accumuloTableHandle0.getConnectorId());
      assertFalse(boolean0);
      assertEquals("H'\"j5,jr.#HFU#", accumuloTableHandle0.getSerializerClassName());
      assertEquals("", accumuloTableHandle0.getRowId());
  }
}
