/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 01:25:38 GMT 2021
 */

package com.facebook.presto.accumulo.index;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.accumulo.conf.AccumuloConfig;
import com.facebook.presto.accumulo.index.ColumnCardinalityCache;
import com.facebook.presto.accumulo.model.AccumuloColumnConstraint;
import com.google.common.collect.Multimap;
import io.airlift.units.Duration;
import java.util.Collection;
import java.util.Map;
import org.apache.accumulo.core.client.Connector;
import org.apache.accumulo.core.data.Range;
import org.apache.accumulo.core.security.Authorizations;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ColumnCardinalityCache_ESTest extends ColumnCardinalityCache_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Connector connector0 = mock(Connector.class, new ViolatedAssumptionAnswer());
      Duration duration0 = mock(Duration.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(duration0).toMillis();
      AccumuloConfig accumuloConfig0 = mock(AccumuloConfig.class, new ViolatedAssumptionAnswer());
      doReturn(duration0).when(accumuloConfig0).getCardinalityCacheExpiration();
      doReturn(2948).when(accumuloConfig0).getCardinalityCacheSize();
      ColumnCardinalityCache columnCardinalityCache0 = new ColumnCardinalityCache(connector0, accumuloConfig0);
      Authorizations authorizations0 = mock(Authorizations.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        columnCardinalityCache0.getColumnCardinality("accumulo.password", "m", authorizations0, "accumulo.zookeeper.metadata.root", "no such table", (Collection<Range>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.accumulo.index.ColumnCardinalityCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Connector connector0 = mock(Connector.class, new ViolatedAssumptionAnswer());
      Duration duration0 = mock(Duration.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(duration0).toMillis();
      AccumuloConfig accumuloConfig0 = mock(AccumuloConfig.class, new ViolatedAssumptionAnswer());
      doReturn(duration0).when(accumuloConfig0).getCardinalityCacheExpiration();
      doReturn(1149).when(accumuloConfig0).getCardinalityCacheSize();
      ColumnCardinalityCache columnCardinalityCache0 = new ColumnCardinalityCache(connector0, accumuloConfig0);
      Authorizations authorizations0 = mock(Authorizations.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        columnCardinalityCache0.getCardinalities("accumulo.password", "*ir!t_,z2Tyf=F", authorizations0, (Multimap<AccumuloColumnConstraint, Range>) null, 0L, (Duration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.accumulo.index.ColumnCardinalityCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Connector connector0 = mock(Connector.class, new ViolatedAssumptionAnswer());
      Duration duration0 = mock(Duration.class, new ViolatedAssumptionAnswer());
      AccumuloConfig accumuloConfig0 = mock(AccumuloConfig.class, new ViolatedAssumptionAnswer());
      doReturn(duration0).when(accumuloConfig0).getCardinalityCacheExpiration();
      doReturn((-291)).when(accumuloConfig0).getCardinalityCacheSize();
      ColumnCardinalityCache columnCardinalityCache0 = null;
      try {
        columnCardinalityCache0 = new ColumnCardinalityCache(connector0, accumuloConfig0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maximum size must not be negative
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Connector connector0 = mock(Connector.class, new ViolatedAssumptionAnswer());
      Duration duration0 = mock(Duration.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(duration0).toMillis();
      AccumuloConfig accumuloConfig0 = mock(AccumuloConfig.class, new ViolatedAssumptionAnswer());
      doReturn(duration0).when(accumuloConfig0).getCardinalityCacheExpiration();
      doReturn(2).when(accumuloConfig0).getCardinalityCacheSize();
      ColumnCardinalityCache columnCardinalityCache0 = new ColumnCardinalityCache(connector0, accumuloConfig0);
      columnCardinalityCache0.shutdown();
      columnCardinalityCache0.shutdown();
      columnCardinalityCache0.shutdown();
      columnCardinalityCache0.shutdown();
      Multimap<AccumuloColumnConstraint, Range> multimap0 = (Multimap<AccumuloColumnConstraint, Range>) mock(Multimap.class, new ViolatedAssumptionAnswer());
      doReturn((Map) null).when(multimap0).asMap();
      Duration duration1 = mock(Duration.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        columnCardinalityCache0.getCardinalities("816Z_jgG:/K(OvV#q;+", "accumulo.zookeepers", (Authorizations) null, multimap0, 0L, duration1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.accumulo.index.ColumnCardinalityCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Connector connector0 = mock(Connector.class, new ViolatedAssumptionAnswer());
      AccumuloConfig accumuloConfig0 = mock(AccumuloConfig.class, new ViolatedAssumptionAnswer());
      doReturn((Duration) null).when(accumuloConfig0).getCardinalityCacheExpiration();
      doReturn(0).when(accumuloConfig0).getCardinalityCacheSize();
      ColumnCardinalityCache columnCardinalityCache0 = null;
      try {
        columnCardinalityCache0 = new ColumnCardinalityCache(connector0, accumuloConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.accumulo.index.ColumnCardinalityCache", e);
      }
  }
}
