/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 01:23:59 GMT 2021
 */

package com.facebook.presto.accumulo.index;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.accumulo.index.Indexer;
import com.facebook.presto.accumulo.metadata.AccumuloTable;
import com.facebook.presto.accumulo.serializers.AccumuloRowSerializer;
import com.facebook.presto.spi.SchemaTableName;
import java.nio.ByteBuffer;
import java.util.List;
import org.apache.accumulo.core.client.BatchWriter;
import org.apache.accumulo.core.client.BatchWriterConfig;
import org.apache.accumulo.core.client.Connector;
import org.apache.accumulo.core.security.Authorizations;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Indexer_ESTest extends Indexer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = Indexer.getIndexTableName("com.google.common.collect.SingletonImmutableBiMap", "_Jo8s_~__");
      assertEquals("com.google.common.collect.SingletonImmutableBiMap._Jo8s_~___idx", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = new byte[7];
      ByteBuffer byteBuffer0 = Indexer.getIndexColumnFamily(byteArray0, byteArray1);
      assertEquals(12, byteBuffer0.remaining());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        Indexer.getMetricsTableName((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SchemaTableName schemaTableName0 = mock(SchemaTableName.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(schemaTableName0).getSchemaName();
      doReturn((String) null).when(schemaTableName0).getTableName();
      // Undeclared exception!
      try { 
        Indexer.getMetricsTableName(schemaTableName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        Indexer.getIndexTableName((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = Indexer.getMetricsTableName("default", "default");
      assertEquals("default_idx_metrics", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = Indexer.getIndexTableName("default", "default");
      assertEquals("default_idx", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AccumuloTable accumuloTable0 = mock(AccumuloTable.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(accumuloTable0).getColumns();
      // Undeclared exception!
      try { 
        Indexer.getLocalityGroups(accumuloTable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.accumulo.index.Indexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SchemaTableName schemaTableName0 = mock(SchemaTableName.class, new ViolatedAssumptionAnswer());
      doReturn("default").when(schemaTableName0).getSchemaName();
      doReturn("P^w`").when(schemaTableName0).getTableName();
      String string0 = Indexer.getMetricsTableName(schemaTableName0);
      assertEquals("P^w`_idx_metrics", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AccumuloTable accumuloTable0 = mock(AccumuloTable.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(accumuloTable0).getColumns();
      // Undeclared exception!
      try { 
        Indexer.getMetricIterators(accumuloTable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.accumulo.index.Indexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Connector connector0 = mock(Connector.class, new ViolatedAssumptionAnswer());
      doReturn((BatchWriter) null).when(connector0).createBatchWriter(anyString() , any(org.apache.accumulo.core.client.BatchWriterConfig.class));
      Authorizations authorizations0 = mock(Authorizations.class, new ViolatedAssumptionAnswer());
      AccumuloTable accumuloTable0 = mock(AccumuloTable.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(accumuloTable0).getColumns();
      doReturn((String) null).when(accumuloTable0).getIndexTableName();
      doReturn((AccumuloRowSerializer) null).when(accumuloTable0).getSerializerInstance();
      BatchWriterConfig batchWriterConfig0 = mock(BatchWriterConfig.class, new ViolatedAssumptionAnswer());
      Indexer indexer0 = null;
      try {
        indexer0 = new Indexer(connector0, authorizations0, accumuloTable0, batchWriterConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.accumulo.index.Indexer", e);
      }
  }
}
