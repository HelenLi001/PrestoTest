/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 01:32:39 GMT 2021
 */

package com.facebook.presto.accumulo.metadata;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.accumulo.metadata.AccumuloView;
import com.facebook.presto.spi.SchemaTableName;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AccumuloView_ESTest extends AccumuloView_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AccumuloView accumuloView0 = new AccumuloView("O:a`'m  OS yF", "AccumuloView{schema=O:a`'m  OS yF, table=., data=}", "O:a`'m  OS yF");
      String string0 = accumuloView0.getData();
      assertEquals("O:a`'m  OS yF", string0);
      assertEquals("AccumuloView{schema=O:a`'m  OS yF, table=., data=}", accumuloView0.getTable());
      assertEquals("O:a`'m  OS yF", accumuloView0.getSchema());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AccumuloView accumuloView0 = null;
      try {
        accumuloView0 = new AccumuloView((String) null, "", "L");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // schema is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AccumuloView accumuloView0 = new AccumuloView("R3l", "R3l", "R3l");
      AccumuloView accumuloView1 = new AccumuloView("R3l", "R3l", "R3l");
      boolean boolean0 = accumuloView1.equals(accumuloView0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AccumuloView accumuloView0 = new AccumuloView("Both parameters are null", "Both parameters are null", "Both parameters are null");
      AccumuloView accumuloView1 = new AccumuloView("Both parameters are null", "Both parameters are null", "=");
      boolean boolean0 = accumuloView0.equals(accumuloView1);
      assertEquals("Both parameters are null", accumuloView1.getTable());
      assertFalse(boolean0);
      assertEquals("Both parameters are null", accumuloView1.getSchema());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AccumuloView accumuloView0 = new AccumuloView("O:a`'m  OS yF", ".", "");
      AccumuloView accumuloView1 = new AccumuloView("z=5!K", "z=5!K", "");
      boolean boolean0 = accumuloView0.equals(accumuloView1);
      assertEquals("", accumuloView1.getData());
      assertFalse(boolean0);
      assertEquals(".", accumuloView0.getTable());
      assertEquals("O:a`'m  OS yF", accumuloView0.getSchema());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AccumuloView accumuloView0 = new AccumuloView("O:a`'m  OS yF", ".", "");
      AccumuloView accumuloView1 = new AccumuloView("O:a`'m  OS yF", "AccumuloView{schema=O:a`'m  OS yF, table=., data=}", "O:a`'m  OS yF");
      boolean boolean0 = accumuloView0.equals(accumuloView1);
      assertFalse(boolean0);
      assertEquals("O:a`'m  OS yF", accumuloView0.getSchema());
      assertEquals("", accumuloView0.getData());
      assertEquals("AccumuloView{schema=O:a`'m  OS yF, table=., data=}", accumuloView1.getTable());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AccumuloView accumuloView0 = new AccumuloView("Both parameters are null", "Both parameters are null", "Both parameters are null");
      boolean boolean0 = accumuloView0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AccumuloView accumuloView0 = new AccumuloView("R3l", "R3l", "R3l");
      boolean boolean0 = accumuloView0.equals(accumuloView0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AccumuloView accumuloView0 = new AccumuloView("O:a`'m  OS yF", ".", "");
      boolean boolean0 = accumuloView0.equals(".");
      assertEquals("O:a`'m  OS yF", accumuloView0.getSchema());
      assertEquals("", accumuloView0.getData());
      assertEquals(".", accumuloView0.getTable());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AccumuloView accumuloView0 = new AccumuloView("UV", "UV", "UV");
      SchemaTableName schemaTableName0 = accumuloView0.getSchemaTableName();
      assertEquals("uv", schemaTableName0.getSchemaName());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AccumuloView accumuloView0 = new AccumuloView("O:a`'m  OS yF", ".", "");
      String string0 = accumuloView0.getData();
      assertEquals("", string0);
      assertEquals(".", accumuloView0.getTable());
      assertEquals("O:a`'m  OS yF", accumuloView0.getSchema());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AccumuloView accumuloView0 = new AccumuloView("J}2Dst3", "table is null", "table is null");
      String string0 = accumuloView0.toString();
      assertEquals("AccumuloView{schema=J}2Dst3, table=table is null, data=table is null}", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AccumuloView accumuloView0 = new AccumuloView("Both parameters are null", "Both parameters are null", "Both parameters are null");
      String string0 = accumuloView0.getSchema();
      assertEquals("Both parameters are null", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AccumuloView accumuloView0 = new AccumuloView("Both parameters are null", "Both parameters are null", "Both parameters are null");
      accumuloView0.hashCode();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AccumuloView accumuloView0 = new AccumuloView("Both parameters are null", "Both parameters are null", "Both parameters are null");
      String string0 = accumuloView0.getTable();
      assertEquals("Both parameters are null", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AccumuloView accumuloView0 = null;
      try {
        accumuloView0 = new AccumuloView("", "", "data is null");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // schemaName is empty
         //
         verifyException("com.facebook.presto.spi.SchemaUtil", e);
      }
  }
}
