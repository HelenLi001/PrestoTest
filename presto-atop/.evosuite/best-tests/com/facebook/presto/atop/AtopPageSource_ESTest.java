/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 20 23:38:28 GMT 2021
 */

package com.facebook.presto.atop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.atop.AtopConnectorConfig;
import com.facebook.presto.atop.AtopConnectorId;
import com.facebook.presto.atop.AtopPageSource;
import com.facebook.presto.atop.AtopProcessFactory;
import com.facebook.presto.atop.AtopTable;
import com.facebook.presto.common.type.Type;
import com.facebook.presto.spi.ConnectorSession;
import io.airlift.slice.Slice;
import java.time.ZonedDateTime;
import java.util.List;
import java.util.Vector;
import java.util.concurrent.Semaphore;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockZonedDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AtopPageSource_ESTest extends AtopPageSource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Semaphore semaphore0 = new Semaphore(61);
      AtopTable atopTable0 = AtopTable.DISKS;
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();
      AtopConnectorConfig atopConnectorConfig0 = new AtopConnectorConfig();
      AtopConnectorId atopConnectorId0 = new AtopConnectorId("Percentile accuracy must be strictly between 0 and 1");
      AtopProcessFactory atopProcessFactory0 = new AtopProcessFactory(atopConnectorConfig0, atopConnectorId0);
      Vector<AtopTable.AtopColumn> vector0 = new Vector<AtopTable.AtopColumn>();
      AtopPageSource atopPageSource0 = null;
      try {
        atopPageSource0 = new AtopPageSource(semaphore0, atopProcessFactory0, (ConnectorSession) null, (Slice) null, atopTable0, zonedDateTime0, vector0, (List<Type>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // session is null
         //
         verifyException("java.util.Objects", e);
      }
  }
}
