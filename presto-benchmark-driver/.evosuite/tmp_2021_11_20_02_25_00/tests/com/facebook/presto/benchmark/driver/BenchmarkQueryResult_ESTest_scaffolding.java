/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sat Nov 20 10:32:44 GMT 2021
 */

package com.facebook.presto.benchmark.driver;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class BenchmarkQueryResult_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.facebook.presto.benchmark.driver.BenchmarkQueryResult"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.dir", "/mnt/c/Users/Helen/Documents/DataScience18668/GroupProject/project/presto/presto-benchmark-driver"); 
    java.lang.System.setProperty("user.home", "/home/helen"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "helen"); 
    java.lang.System.setProperty("user.timezone", "America/Los_Angeles"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(BenchmarkQueryResult_ESTest_scaffolding.class.getClassLoader() ,
      "com.google.common.base.CharMatcher$Whitespace",
      "com.google.common.base.CharMatcher$ForPredicate",
      "com.google.common.base.JdkPattern",
      "org.apache.commons.math3.exception.MathArithmeticException",
      "com.google.common.base.CharMatcher$JavaDigit",
      "com.google.common.base.Splitter$MapSplitter",
      "org.apache.commons.math3.exception.MathIllegalArgumentException",
      "com.google.common.base.CharMatcher$IsNot",
      "com.google.common.base.CharMatcher$JavaLetter",
      "com.google.common.base.CharMatcher$InRange",
      "com.google.common.base.CharMatcher$JavaLetterOrDigit",
      "com.google.common.base.CharMatcher$NegatedFastMatcher",
      "org.apache.commons.math3.util.FastMath",
      "com.google.common.base.CommonPattern",
      "com.facebook.presto.benchmark.driver.Suite",
      "com.google.common.base.Predicate",
      "com.google.common.base.CharMatcher$IsEither",
      "com.google.common.base.CharMatcher$Invisible",
      "org.apache.commons.math3.exception.NotFiniteNumberException",
      "com.google.common.base.CharMatcher$None",
      "org.apache.commons.math3.stat.descriptive.WeightedEvaluation",
      "org.apache.commons.math3.exception.util.ExceptionContextProvider",
      "org.apache.commons.math3.exception.NotANumberException",
      "com.google.common.base.CharMatcher$Any",
      "org.apache.commons.math3.util.MathArrays",
      "com.google.common.base.MoreObjects$ToStringHelper$ValueHolder",
      "org.apache.commons.math3.util.MathArrays$1",
      "com.google.common.base.JdkPattern$JdkMatcher",
      "com.google.common.base.MoreObjects$ToStringHelper",
      "org.apache.commons.math3.util.MathArrays$2",
      "org.apache.commons.math3.stat.descriptive.moment.FirstMoment",
      "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic",
      "org.apache.commons.math3.exception.NumberIsTooSmallException",
      "org.apache.commons.math3.exception.MathIllegalStateException",
      "com.google.common.base.Splitter$3$1",
      "org.apache.commons.math3.util.MathUtils",
      "com.google.common.base.CharMatcher",
      "com.google.common.base.MoreObjects",
      "org.apache.commons.math3.exception.DimensionMismatchException",
      "com.google.common.base.CharMatcher$And",
      "org.apache.commons.math3.stat.ranking.NaNStrategy",
      "org.apache.commons.math3.util.MedianOf3PivotingStrategy",
      "org.apache.commons.math3.stat.descriptive.moment.SecondMoment",
      "org.apache.commons.math3.stat.descriptive.rank.Percentile",
      "com.google.common.base.CharMatcher$AnyOf",
      "com.google.common.base.Preconditions",
      "com.google.common.base.CharMatcher$1",
      "com.google.common.base.CharMatcher$FastMatcher",
      "com.google.common.base.CharMatcher$JavaIsoControl",
      "io.airlift.units.Duration",
      "org.apache.commons.math3.exception.OutOfRangeException",
      "org.apache.commons.math3.exception.NotPositiveException",
      "org.apache.commons.math3.exception.MathInternalError",
      "org.apache.commons.math3.stat.descriptive.rank.Median",
      "com.google.common.base.CommonMatcher",
      "com.google.common.base.CharMatcher$BitSetMatcher",
      "com.facebook.presto.benchmark.driver.RegexTemplate",
      "org.apache.commons.math3.exception.NonMonotonicSequenceException",
      "com.google.common.base.CharMatcher$RangesMatcher",
      "com.google.common.base.Splitter",
      "com.google.common.base.CharMatcher$JavaUpperCase",
      "org.apache.commons.math3.exception.MathUnsupportedOperationException",
      "org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$10",
      "org.apache.commons.math3.util.KthSelector",
      "com.google.common.base.CharMatcher$NamedFastMatcher",
      "org.apache.commons.math3.exception.NumberIsTooLargeException",
      "org.apache.commons.math3.exception.NotStrictlyPositiveException",
      "com.facebook.presto.benchmark.driver.BenchmarkQueryResult$Status",
      "org.apache.commons.math3.exception.NoDataException",
      "com.google.common.base.CharMatcher$Is",
      "org.apache.commons.math3.stat.descriptive.UnivariateStatistic",
      "org.apache.commons.math3.stat.descriptive.moment.StandardDeviation",
      "org.apache.commons.math3.stat.descriptive.moment.Variance",
      "com.google.common.base.CharMatcher$SingleWidth",
      "com.google.common.base.CharMatcher$JavaLowerCase",
      "com.facebook.presto.benchmark.driver.Stat",
      "com.google.common.base.Splitter$Strategy",
      "org.apache.commons.math3.util.MathArrays$Function",
      "io.airlift.units.Preconditions",
      "com.facebook.presto.benchmark.driver.BenchmarkQueryResult",
      "org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic",
      "org.apache.commons.math3.stat.descriptive.moment.Mean",
      "com.google.common.base.Splitter$1$1",
      "org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic",
      "org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$2",
      "com.google.common.base.Splitter$3",
      "org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$1",
      "org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$4",
      "com.google.common.base.CharMatcher$Negated",
      "org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$3",
      "org.apache.commons.math3.exception.MathIllegalNumberException",
      "org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$9",
      "com.facebook.presto.benchmark.driver.BenchmarkQuery",
      "com.google.common.base.CharMatcher$Ascii",
      "org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$6",
      "org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$5",
      "org.apache.commons.math3.exception.util.Localizable",
      "org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$8",
      "com.google.common.base.CharMatcher$Or",
      "com.google.common.base.Splitter$1",
      "org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$7",
      "org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType",
      "com.facebook.presto.benchmark.driver.BenchmarkSchema",
      "org.apache.commons.math3.random.RandomGenerator",
      "com.google.common.base.Splitter$SplittingIterator",
      "org.apache.commons.math3.exception.NullArgumentException",
      "com.google.common.base.AbstractIterator",
      "com.google.common.base.CharMatcher$Digit",
      "org.apache.commons.math3.util.PivotingStrategyInterface"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("com.facebook.presto.benchmark.driver.BenchmarkQuery", false, BenchmarkQueryResult_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("com.facebook.presto.benchmark.driver.Suite", false, BenchmarkQueryResult_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(BenchmarkQueryResult_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.facebook.presto.benchmark.driver.Stat",
      "org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic",
      "org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic",
      "org.apache.commons.math3.stat.descriptive.moment.Mean",
      "org.apache.commons.math3.stat.descriptive.moment.FirstMoment",
      "org.apache.commons.math3.util.MathArrays",
      "org.apache.commons.math3.stat.descriptive.moment.StandardDeviation",
      "org.apache.commons.math3.stat.descriptive.moment.Variance",
      "org.apache.commons.math3.stat.descriptive.moment.SecondMoment",
      "org.apache.commons.math3.util.FastMath",
      "org.apache.commons.math3.stat.descriptive.rank.Percentile",
      "org.apache.commons.math3.stat.descriptive.rank.Median",
      "org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType",
      "org.apache.commons.math3.stat.ranking.NaNStrategy",
      "org.apache.commons.math3.util.KthSelector",
      "org.apache.commons.math3.util.MedianOf3PivotingStrategy",
      "org.apache.commons.math3.util.MathUtils",
      "com.facebook.presto.benchmark.driver.BenchmarkQueryResult",
      "com.facebook.presto.benchmark.driver.BenchmarkQueryResult$Status",
      "com.facebook.presto.benchmark.driver.Suite",
      "com.google.common.base.Splitter",
      "com.google.common.base.CommonPattern",
      "com.google.common.base.JdkPattern",
      "com.google.common.base.Preconditions",
      "com.google.common.base.CommonMatcher",
      "com.google.common.base.JdkPattern$JdkMatcher",
      "com.google.common.base.Splitter$3",
      "com.google.common.base.CharMatcher",
      "com.google.common.base.CharMatcher$FastMatcher",
      "com.google.common.base.CharMatcher$NamedFastMatcher",
      "com.google.common.base.CharMatcher$None",
      "com.google.common.base.CharMatcher$Whitespace",
      "com.google.common.base.CharMatcher$Is",
      "com.google.common.base.Splitter$1",
      "com.google.common.base.Splitter$MapSplitter",
      "com.facebook.presto.benchmark.driver.BenchmarkQuery",
      "com.google.common.base.MoreObjects",
      "com.google.common.base.MoreObjects$ToStringHelper",
      "com.google.common.base.MoreObjects$ToStringHelper$ValueHolder",
      "io.airlift.units.Duration",
      "io.airlift.units.Preconditions"
    );
  }
}
