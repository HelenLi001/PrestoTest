/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 02:35:58 GMT 2021
 */

package com.facebook.presto.plugin.bigquery;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.plugin.bigquery.BigQueryClient;
import com.facebook.presto.plugin.bigquery.BigQueryConfig;
import com.google.api.gax.paging.Page;
import com.google.cloud.bigquery.BigQuery;
import com.google.cloud.bigquery.Dataset;
import com.google.cloud.bigquery.DatasetId;
import com.google.cloud.bigquery.Job;
import com.google.cloud.bigquery.JobInfo;
import com.google.cloud.bigquery.Table;
import com.google.cloud.bigquery.TableDefinition;
import com.google.cloud.bigquery.TableId;
import com.google.cloud.bigquery.TableInfo;
import java.util.List;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.testng.xml.XmlSuite;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BigQueryClient_ESTest extends BigQueryClient_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BigQuery bigQuery0 = mock(BigQuery.class, new ViolatedAssumptionAnswer());
      doReturn((Table) null).when(bigQuery0).update(any(com.google.cloud.bigquery.TableInfo.class) , any(com.google.cloud.bigquery.BigQuery.TableOption[].class));
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      BigQueryClient bigQueryClient0 = new BigQueryClient(bigQuery0, bigQueryConfig0);
      Table table0 = bigQueryClient0.update((TableInfo) null);
      assertNull(table0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BigQuery bigQuery0 = mock(BigQuery.class, new ViolatedAssumptionAnswer());
      BigQueryConfig bigQueryConfig0 = mock(BigQueryConfig.class, new ViolatedAssumptionAnswer());
      doReturn((Optional) null).when(bigQueryConfig0).getViewMaterializationProject();
      BigQueryClient bigQueryClient0 = null;
      try {
        bigQueryClient0 = new BigQueryClient(bigQuery0, bigQueryConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // viewMaterializationProject is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BigQuery bigQuery0 = mock(BigQuery.class, new ViolatedAssumptionAnswer());
      BigQueryConfig bigQueryConfig0 = mock(BigQueryConfig.class, new ViolatedAssumptionAnswer());
      doReturn((Optional) null).when(bigQueryConfig0).getViewMaterializationProject();
      BigQueryClient bigQueryClient0 = null;
      try {
        bigQueryClient0 = new BigQueryClient(bigQuery0, bigQueryConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // viewMaterializationProject is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BigQuery bigQuery0 = mock(BigQuery.class, new ViolatedAssumptionAnswer());
      BigQueryConfig bigQueryConfig0 = mock(BigQueryConfig.class, new ViolatedAssumptionAnswer());
      doReturn((Optional) null).when(bigQueryConfig0).getViewMaterializationProject();
      BigQueryClient bigQueryClient0 = null;
      try {
        bigQueryClient0 = new BigQueryClient(bigQuery0, bigQueryConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // viewMaterializationProject is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BigQuery bigQuery0 = mock(BigQuery.class, new ViolatedAssumptionAnswer());
      BigQueryConfig bigQueryConfig0 = mock(BigQueryConfig.class, new ViolatedAssumptionAnswer());
      doReturn((Optional) null).when(bigQueryConfig0).getViewMaterializationProject();
      BigQueryClient bigQueryClient0 = null;
      try {
        bigQueryClient0 = new BigQueryClient(bigQuery0, bigQueryConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // viewMaterializationProject is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BigQuery bigQuery0 = mock(BigQuery.class, new ViolatedAssumptionAnswer());
      BigQueryConfig bigQueryConfig0 = mock(BigQueryConfig.class, new ViolatedAssumptionAnswer());
      doReturn((Optional) null).when(bigQueryConfig0).getViewMaterializationProject();
      BigQueryClient bigQueryClient0 = null;
      try {
        bigQueryClient0 = new BigQueryClient(bigQuery0, bigQueryConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // viewMaterializationProject is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BigQuery bigQuery0 = mock(BigQuery.class, new ViolatedAssumptionAnswer());
      BigQueryConfig bigQueryConfig0 = mock(BigQueryConfig.class, new ViolatedAssumptionAnswer());
      doReturn((Optional) null).when(bigQueryConfig0).getViewMaterializationProject();
      BigQueryClient bigQueryClient0 = null;
      try {
        bigQueryClient0 = new BigQueryClient(bigQuery0, bigQueryConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // viewMaterializationProject is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BigQuery bigQuery0 = mock(BigQuery.class, new ViolatedAssumptionAnswer());
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      BigQueryClient bigQueryClient0 = new BigQueryClient(bigQuery0, bigQueryConfig0);
      TableId tableId0 = TableId.of("^", "^");
      // Undeclared exception!
      try { 
        bigQueryClient0.createDestinationTable(tableId0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BigQuery bigQuery0 = mock(BigQuery.class, new ViolatedAssumptionAnswer());
      BigQueryConfig bigQueryConfig0 = mock(BigQueryConfig.class, new ViolatedAssumptionAnswer());
      doReturn((Optional) null).when(bigQueryConfig0).getViewMaterializationProject();
      BigQueryClient bigQueryClient0 = null;
      try {
        bigQueryClient0 = new BigQueryClient(bigQuery0, bigQueryConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // viewMaterializationProject is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BigQuery bigQuery0 = mock(BigQuery.class, new ViolatedAssumptionAnswer());
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      BigQueryClient bigQueryClient0 = new BigQueryClient(bigQuery0, bigQueryConfig0);
      TableId tableId0 = mock(TableId.class, new ViolatedAssumptionAnswer());
      doReturn("k").when(tableId0).getDataset();
      doReturn("Possible bracketless IPv6 literal: %s").when(tableId0).getProject();
      TableId tableId1 = bigQueryClient0.createDestinationTable(tableId0);
      String[] stringArray0 = new String[6];
      String string0 = bigQueryClient0.createFormatSql(tableId1, "Possible bracketless IPv6 literal: %s", stringArray0);
      assertEquals("SELECT Possible bracketless IPv6 literal: %s FROM `Possible bracketless IPv6 literal: %s.k._pbc_00000000010040008200000003000000` WHERE nullnullnullnullnullnull", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BigQuery bigQuery0 = mock(BigQuery.class, new ViolatedAssumptionAnswer());
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      BigQueryClient bigQueryClient0 = new BigQueryClient(bigQuery0, bigQueryConfig0);
      XmlSuite xmlSuite0 = new XmlSuite();
      List<String> list0 = xmlSuite0.getExcludedGroups();
      // Undeclared exception!
      try { 
        bigQueryClient0.createSql((TableId) null, list0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BigQuery bigQuery0 = mock(BigQuery.class, new ViolatedAssumptionAnswer());
      doReturn((Table) null).when(bigQuery0).getTable(any(com.google.cloud.bigquery.TableId.class) , any(com.google.cloud.bigquery.BigQuery.TableOption[].class));
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      BigQueryClient bigQueryClient0 = new BigQueryClient(bigQuery0, bigQueryConfig0);
      TableId tableId0 = mock(TableId.class, new ViolatedAssumptionAnswer());
      doReturn("k").when(tableId0).getDataset();
      doReturn("Possible bracketless IPv6 literal: %s").when(tableId0).getProject();
      TableId tableId1 = bigQueryClient0.createDestinationTable(tableId0);
      bigQueryClient0.getTable(tableId1);
      assertEquals("k", tableId1.getDataset());
      assertEquals("_pbc_00000000010040008200000003000000", tableId1.getTable());
      assertEquals("Possible bracketless IPv6 literal: %s", tableId1.getProject());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Page<Dataset> page0 = (Page<Dataset>) mock(Page.class, new ViolatedAssumptionAnswer());
      BigQuery bigQuery0 = mock(BigQuery.class, new ViolatedAssumptionAnswer());
      BigQueryConfig bigQueryConfig0 = mock(BigQueryConfig.class, new ViolatedAssumptionAnswer());
      doReturn((Optional) null).when(bigQueryConfig0).getViewMaterializationProject();
      BigQueryClient bigQueryClient0 = null;
      try {
        bigQueryClient0 = new BigQueryClient(bigQuery0, bigQueryConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // viewMaterializationProject is null
         //
         verifyException("java.util.Objects", e);
      }
  }
}
