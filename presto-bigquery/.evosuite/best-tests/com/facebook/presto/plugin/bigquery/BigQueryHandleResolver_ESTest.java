/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 02:45:10 GMT 2021
 */

package com.facebook.presto.plugin.bigquery;

import org.junit.Test;
import static org.junit.Assert.*;
import com.facebook.presto.plugin.bigquery.BigQueryHandleResolver;
import com.facebook.presto.spi.ColumnHandle;
import com.facebook.presto.spi.ConnectorSplit;
import com.facebook.presto.spi.ConnectorTableHandle;
import com.facebook.presto.spi.ConnectorTableLayoutHandle;
import com.facebook.presto.spi.connector.ConnectorTransactionHandle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BigQueryHandleResolver_ESTest extends BigQueryHandleResolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BigQueryHandleResolver bigQueryHandleResolver0 = new BigQueryHandleResolver();
      Class<? extends ConnectorTransactionHandle> class0 = bigQueryHandleResolver0.getTransactionHandleClass();
      assertEquals(16385, class0.getModifiers());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BigQueryHandleResolver bigQueryHandleResolver0 = new BigQueryHandleResolver();
      Class<? extends ColumnHandle> class0 = bigQueryHandleResolver0.getColumnHandleClass();
      assertEquals("class com.facebook.presto.plugin.bigquery.BigQueryColumnHandle", class0.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BigQueryHandleResolver bigQueryHandleResolver0 = new BigQueryHandleResolver();
      Class<? extends ConnectorTableLayoutHandle> class0 = bigQueryHandleResolver0.getTableLayoutHandleClass();
      assertFalse(class0.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BigQueryHandleResolver bigQueryHandleResolver0 = new BigQueryHandleResolver();
      Class<? extends ConnectorTableHandle> class0 = bigQueryHandleResolver0.getTableHandleClass();
      assertEquals(1, class0.getModifiers());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BigQueryHandleResolver bigQueryHandleResolver0 = new BigQueryHandleResolver();
      Class<? extends ConnectorSplit> class0 = bigQueryHandleResolver0.getSplitClass();
      assertFalse(class0.isAnnotation());
  }
}
