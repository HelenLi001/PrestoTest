/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 02:39:29 GMT 2021
 */

package com.facebook.presto.plugin.bigquery;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.common.predicate.TupleDomain;
import com.facebook.presto.plugin.bigquery.BigQueryTableHandle;
import com.facebook.presto.plugin.bigquery.BigQueryTableLayoutHandle;
import com.facebook.presto.spi.ColumnHandle;
import com.google.cloud.bigquery.ExternalTableDefinition;
import com.google.cloud.bigquery.FormatOptions;
import com.google.cloud.bigquery.TableId;
import com.google.cloud.bigquery.TableInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BigQueryTableLayoutHandle_ESTest extends BigQueryTableLayoutHandle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BigQueryTableLayoutHandle bigQueryTableLayoutHandle0 = new BigQueryTableLayoutHandle((BigQueryTableHandle) null);
      boolean boolean0 = bigQueryTableLayoutHandle0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BigQueryTableLayoutHandle bigQueryTableLayoutHandle0 = new BigQueryTableLayoutHandle((BigQueryTableHandle) null);
      Object object0 = new Object();
      boolean boolean0 = bigQueryTableLayoutHandle0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TableId tableId0 = TableId.of("com.facebook.presto.plugin.bigquery.BigQueryTableLayoutHandle", "com.facebook.presto.plugin.bigquery.BigQueryTableLayoutHandle", "com.facebook.presto.plugin.bigquery.BigQueryTableLayoutHandle");
      FormatOptions formatOptions0 = FormatOptions.datastoreBackup();
      ExternalTableDefinition externalTableDefinition0 = ExternalTableDefinition.of("I~!Bv6]", formatOptions0);
      TableInfo tableInfo0 = TableInfo.of(tableId0, externalTableDefinition0);
      BigQueryTableHandle bigQueryTableHandle0 = BigQueryTableHandle.from(tableInfo0);
      BigQueryTableLayoutHandle bigQueryTableLayoutHandle0 = new BigQueryTableLayoutHandle(bigQueryTableHandle0);
      TupleDomain<ColumnHandle> tupleDomain0 = bigQueryTableLayoutHandle0.getTupleDomain();
      BigQueryTableLayoutHandle bigQueryTableLayoutHandle1 = new BigQueryTableLayoutHandle(bigQueryTableHandle0, tupleDomain0);
      assertTrue(bigQueryTableLayoutHandle1.equals((Object)bigQueryTableLayoutHandle0));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BigQueryTableLayoutHandle bigQueryTableLayoutHandle0 = new BigQueryTableLayoutHandle((BigQueryTableHandle) null);
      // Undeclared exception!
      try { 
        bigQueryTableLayoutHandle0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.plugin.bigquery.BigQueryTableLayoutHandle", e);
      }
  }
}
