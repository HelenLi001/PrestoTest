/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 02:41:16 GMT 2021
 */

package com.facebook.presto.plugin.bigquery;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.plugin.bigquery.BigQueryConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BigQueryConfig_ESTest extends BigQueryConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      bigQueryConfig0.setMaxReadRowsRetries(0);
      bigQueryConfig0.setViewsEnabled(true);
      assertTrue(bigQueryConfig0.isViewsEnabled());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      bigQueryConfig0.setMaxReadRowsRetries((-686));
      bigQueryConfig0.setViewsEnabled(false);
      assertEquals((-686), bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      BigQueryConfig bigQueryConfig1 = bigQueryConfig0.setViewsEnabled(true);
      bigQueryConfig1.setViewMaterializationProject("9@zJQ~{[Ab]pq");
      assertTrue(bigQueryConfig0.isViewsEnabled());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
      
      BigQueryConfig bigQueryConfig1 = bigQueryConfig0.setMaxReadRowsRetries(0);
      bigQueryConfig1.setViewMaterializationProject("");
      assertEquals(0, bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      bigQueryConfig0.setMaxReadRowsRetries((-2384));
      bigQueryConfig0.setViewMaterializationProject("");
      assertEquals((-2384), bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      bigQueryConfig0.setViewsEnabled(true);
      bigQueryConfig0.setViewMaterializationDataset("");
      assertTrue(bigQueryConfig0.isViewsEnabled());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
      
      BigQueryConfig bigQueryConfig1 = bigQueryConfig0.setMaxReadRowsRetries(0);
      bigQueryConfig1.setViewMaterializationDataset("com.facebook.presto.plugin.bigquery.BigQueryConfig");
      assertEquals(0, bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      BigQueryConfig bigQueryConfig1 = bigQueryConfig0.setMaxReadRowsRetries((-686));
      bigQueryConfig1.setViewMaterializationDataset("*)e~^p1fdF#!'[");
      assertEquals((-686), bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      bigQueryConfig0.setViewsEnabled(true);
      bigQueryConfig0.setProjectId("");
      assertTrue(bigQueryConfig0.isViewsEnabled());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
      
      bigQueryConfig0.setMaxReadRowsRetries(0);
      bigQueryConfig0.setProjectId("yD|1n4>yhx4-W)y");
      assertEquals(0, bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      BigQueryConfig bigQueryConfig1 = bigQueryConfig0.setMaxReadRowsRetries((-141));
      bigQueryConfig1.setProjectId("}:H5y_^/lKTm");
      assertEquals((-141), bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      BigQueryConfig bigQueryConfig1 = bigQueryConfig0.setViewsEnabled(true);
      bigQueryConfig1.setParentProjectId("com.fasterxml.jackson.core.PrettyPrinter");
      assertTrue(bigQueryConfig0.isViewsEnabled());
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
      
      BigQueryConfig bigQueryConfig1 = bigQueryConfig0.setMaxReadRowsRetries(0);
      bigQueryConfig1.setParentProjectId("");
      assertEquals(0, bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      BigQueryConfig bigQueryConfig1 = bigQueryConfig0.setMaxReadRowsRetries((-686));
      bigQueryConfig1.setParentProjectId("kJepcBW|48t<Z");
      assertEquals((-686), bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      bigQueryConfig0.setViewsEnabled(true);
      bigQueryConfig0.setParallelism(3);
      assertTrue(bigQueryConfig0.isViewsEnabled());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
      
      bigQueryConfig0.setMaxReadRowsRetries(0);
      bigQueryConfig0.setParallelism(2037);
      assertEquals(0, bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      bigQueryConfig0.setMaxReadRowsRetries((-686));
      bigQueryConfig0.setParallelism(3);
      assertEquals((-686), bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      BigQueryConfig bigQueryConfig1 = bigQueryConfig0.setViewsEnabled(true);
      bigQueryConfig1.setMaxReadRowsRetries(3);
      assertTrue(bigQueryConfig0.isViewsEnabled());
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      BigQueryConfig bigQueryConfig1 = bigQueryConfig0.setViewsEnabled(true);
      bigQueryConfig1.setCredentialsKey(".2m:B)@LS4P^>lM|w4");
      assertTrue(bigQueryConfig0.isViewsEnabled());
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
      
      bigQueryConfig0.setMaxReadRowsRetries(0);
      bigQueryConfig0.setCredentialsKey("S..(la");
      assertEquals(0, bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      BigQueryConfig bigQueryConfig1 = bigQueryConfig0.setMaxReadRowsRetries((-2384));
      bigQueryConfig1.setCredentialsKey("&BVWVq");
      assertEquals((-2384), bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      BigQueryConfig bigQueryConfig1 = bigQueryConfig0.setViewsEnabled(true);
      bigQueryConfig1.setCredentialsFile("9@zJQ~{[Ab]pq");
      assertTrue(bigQueryConfig0.isViewsEnabled());
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
      
      BigQueryConfig bigQueryConfig1 = bigQueryConfig0.setMaxReadRowsRetries(0);
      bigQueryConfig1.setCredentialsFile("com.facebook.presto.plugin.bigquery.BigQueryConfig");
      assertEquals(0, bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      bigQueryConfig0.setMaxReadRowsRetries((-141));
      bigQueryConfig0.setCredentialsFile("");
      assertEquals((-141), bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
      
      BigQueryConfig bigQueryConfig1 = bigQueryConfig0.setMaxReadRowsRetries(0);
      int int0 = bigQueryConfig1.getMaxReadRowsRetries();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      BigQueryConfig bigQueryConfig1 = bigQueryConfig0.setMaxReadRowsRetries((-141));
      int int0 = bigQueryConfig1.getMaxReadRowsRetries();
      assertEquals((-141), int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      // Undeclared exception!
      try { 
        bigQueryConfig0.setViewMaterializationDataset((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      // Undeclared exception!
      try { 
        bigQueryConfig0.setProjectId((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      // Undeclared exception!
      try { 
        bigQueryConfig0.setParentProjectId((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      // Undeclared exception!
      try { 
        bigQueryConfig0.setCredentialsKey((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      // Undeclared exception!
      try { 
        bigQueryConfig0.setCredentialsFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/helen/.config/gcloud/application_default_credentials.json");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      // Undeclared exception!
      try { 
        bigQueryConfig0.isCredentialsConfigurationValid();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no JSON input found
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      bigQueryConfig0.getViewMaterializationProject();
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      bigQueryConfig0.isViewsEnabled();
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      int int0 = bigQueryConfig0.getMaxReadRowsRetries();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      int int0 = bigQueryConfig0.getViewExpirationTimeInHours();
      assertEquals(24, int0);
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      bigQueryConfig0.getParentProjectId();
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      BigQueryConfig bigQueryConfig1 = bigQueryConfig0.setCredentialsFile("co.faxe,ook.presto.plugi.biguery.$igQueryConfig");
      bigQueryConfig1.setCredentialsKey("co.faxe,ook.presto.plugi.biguery.$igQueryConfig");
      boolean boolean0 = bigQueryConfig1.isCredentialsConfigurationValid();
      assertFalse(boolean0);
      assertEquals(3, bigQueryConfig1.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      bigQueryConfig0.setCredentialsKey("co.faxe,ook.presto.plugi.biguery.$igQueryConfig");
      boolean boolean0 = bigQueryConfig0.isCredentialsConfigurationValid();
      assertTrue(boolean0);
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      boolean boolean0 = bigQueryConfig0.isCredentialsConfigurationValid();
      assertFalse(boolean0);
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      BigQueryConfig bigQueryConfig1 = bigQueryConfig0.setCredentialsFile("");
      boolean boolean0 = bigQueryConfig1.isCredentialsConfigurationValid();
      assertTrue(boolean0);
      assertEquals(3, bigQueryConfig1.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      bigQueryConfig0.getParallelism();
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      bigQueryConfig0.getCredentialsKey();
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      bigQueryConfig0.setViewsEnabled(true);
      boolean boolean0 = bigQueryConfig0.isViewsEnabled();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      bigQueryConfig0.getProjectId();
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      bigQueryConfig0.createReadSessionCreatorConfig();
      assertEquals(24, bigQueryConfig0.getViewExpirationTimeInHours());
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      // Undeclared exception!
      try { 
        bigQueryConfig0.setViewMaterializationProject((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      bigQueryConfig0.getCredentialsFile();
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      BigQueryConfig bigQueryConfig0 = new BigQueryConfig();
      bigQueryConfig0.getViewMaterializationDataset();
      assertEquals(3, bigQueryConfig0.getMaxReadRowsRetries());
  }
}
