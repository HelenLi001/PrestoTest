/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 02:54:39 GMT 2021
 */

package com.facebook.presto.plugin.blackhole;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.plugin.blackhole.BlackHoleColumnHandle;
import com.facebook.presto.plugin.blackhole.BlackHoleMetadata;
import com.facebook.presto.plugin.blackhole.BlackHoleTableHandle;
import com.facebook.presto.spi.ColumnHandle;
import com.facebook.presto.spi.ColumnMetadata;
import com.facebook.presto.spi.ConnectorNewTableLayout;
import com.facebook.presto.spi.ConnectorOutputTableHandle;
import com.facebook.presto.spi.ConnectorSession;
import com.facebook.presto.spi.ConnectorTableHandle;
import com.facebook.presto.spi.ConnectorTableLayout;
import com.facebook.presto.spi.ConnectorTableLayoutHandle;
import com.facebook.presto.spi.ConnectorTableMetadata;
import com.facebook.presto.spi.Constraint;
import com.facebook.presto.spi.SchemaTableName;
import com.facebook.presto.spi.SchemaTablePrefix;
import com.facebook.presto.spi.connector.ConnectorOutputMetadata;
import com.facebook.presto.spi.statistics.ComputedStatistics;
import com.facebook.presto.testing.TestingHandle;
import com.facebook.presto.testing.TestingMetadata;
import com.facebook.presto.tpch.TpchTableHandle;
import io.airlift.slice.Slice;
import io.airlift.units.Duration;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import java.util.Set;
import java.util.concurrent.LinkedBlockingDeque;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BlackHoleMetadata_ESTest extends BlackHoleMetadata_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      TestingHandle testingHandle0 = TestingHandle.INSTANCE;
      ConnectorTableLayout connectorTableLayout0 = blackHoleMetadata0.getTableLayout((ConnectorSession) null, testingHandle0);
      assertNotNull(connectorTableLayout0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      SchemaTableName schemaTableName0 = new SchemaTableName("default", "default");
      TestingMetadata.TestingTableHandle testingMetadata_TestingTableHandle0 = new TestingMetadata.TestingTableHandle(schemaTableName0);
      // Undeclared exception!
      try { 
        blackHoleMetadata0.renameTable((ConnectorSession) null, testingMetadata_TestingTableHandle0, schemaTableName0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.facebook.presto.testing.TestingMetadata$TestingTableHandle cannot be cast to com.facebook.presto.plugin.blackhole.BlackHoleTableHandle
         //
         verifyException("com.facebook.presto.plugin.blackhole.BlackHoleMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      // Undeclared exception!
      try { 
        blackHoleMetadata0.getTableMetadata((ConnectorSession) null, (ConnectorTableHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.plugin.blackhole.BlackHoleMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      SchemaTableName schemaTableName0 = new SchemaTableName("default", "ConnectorMetadata beginInsert() is implemented without finishInsert()");
      TestingMetadata.TestingTableHandle testingMetadata_TestingTableHandle0 = new TestingMetadata.TestingTableHandle(schemaTableName0);
      // Undeclared exception!
      try { 
        blackHoleMetadata0.getTableMetadata((ConnectorSession) null, testingMetadata_TestingTableHandle0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.facebook.presto.testing.TestingMetadata$TestingTableHandle cannot be cast to com.facebook.presto.plugin.blackhole.BlackHoleTableHandle
         //
         verifyException("com.facebook.presto.plugin.blackhole.BlackHoleMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      // Undeclared exception!
      try { 
        blackHoleMetadata0.getTableHandle((ConnectorSession) null, (SchemaTableName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      // Undeclared exception!
      try { 
        blackHoleMetadata0.getNewTableLayout((ConnectorSession) null, (ConnectorTableMetadata) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.plugin.blackhole.BlackHoleMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      LinkedHashSet<Slice> linkedHashSet0 = new LinkedHashSet<Slice>();
      LinkedHashSet<ComputedStatistics> linkedHashSet1 = new LinkedHashSet<ComputedStatistics>();
      // Undeclared exception!
      try { 
        blackHoleMetadata0.finishCreateTable((ConnectorSession) null, (ConnectorOutputTableHandle) null, linkedHashSet0, linkedHashSet1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.plugin.blackhole.BlackHoleMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      TpchTableHandle tpchTableHandle0 = new TpchTableHandle("default", 1728.5189372682);
      // Undeclared exception!
      try { 
        blackHoleMetadata0.dropTable((ConnectorSession) null, tpchTableHandle0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.facebook.presto.tpch.TpchTableHandle cannot be cast to com.facebook.presto.plugin.blackhole.BlackHoleTableHandle
         //
         verifyException("com.facebook.presto.plugin.blackhole.BlackHoleMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      SchemaTableName schemaTableName0 = new SchemaTableName("org.glassfish.jersey.server.internal.scanning.JarFileScanner", "+hO");
      LinkedBlockingDeque<ColumnMetadata> linkedBlockingDeque0 = new LinkedBlockingDeque<ColumnMetadata>();
      LinkedList<ColumnMetadata> linkedList0 = new LinkedList<ColumnMetadata>(linkedBlockingDeque0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Optional<String> optional0 = Optional.of("org.glassfish.jersey.server.internal.scanning.JarFileScanner");
      ConnectorTableMetadata connectorTableMetadata0 = new ConnectorTableMetadata(schemaTableName0, linkedList0, hashMap0, optional0);
      // Undeclared exception!
      try { 
        blackHoleMetadata0.beginCreateTable((ConnectorSession) null, connectorTableMetadata0, (Optional<ConnectorNewTableLayout>) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Schema org.glassfish.jersey.server.internal.scanning.jarfilescanner not found
         //
         verifyException("com.facebook.presto.plugin.blackhole.BlackHoleMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      blackHoleMetadata0.createSchema((ConnectorSession) null, "", hashMap0);
      assertEquals(0, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      SchemaTableName schemaTableName0 = new SchemaTableName("\"7?r", "\"7?r");
      // Undeclared exception!
      try { 
        blackHoleMetadata0.renameTable((ConnectorSession) null, (ConnectorTableHandle) null, schemaTableName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.plugin.blackhole.BlackHoleMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      Optional<Set<ColumnHandle>> optional0 = Optional.empty();
      // Undeclared exception!
      try { 
        blackHoleMetadata0.getTableLayouts((ConnectorSession) null, (ConnectorTableHandle) null, (Constraint<ColumnHandle>) null, optional0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.plugin.blackhole.BlackHoleMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      TestingHandle testingHandle0 = TestingHandle.INSTANCE;
      LinkedList<Slice> linkedList0 = new LinkedList<Slice>();
      LinkedHashSet<ComputedStatistics> linkedHashSet0 = new LinkedHashSet<ComputedStatistics>();
      // Undeclared exception!
      try { 
        blackHoleMetadata0.finishCreateTable((ConnectorSession) null, testingHandle0, linkedList0, linkedHashSet0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.facebook.presto.testing.TestingHandle cannot be cast to com.facebook.presto.plugin.blackhole.BlackHoleOutputTableHandle
         //
         verifyException("com.facebook.presto.plugin.blackhole.BlackHoleMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      SchemaTablePrefix schemaTablePrefix0 = new SchemaTablePrefix("default");
      Map<SchemaTableName, List<ColumnMetadata>> map0 = blackHoleMetadata0.listTableColumns((ConnectorSession) null, schemaTablePrefix0);
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      // Undeclared exception!
      try { 
        blackHoleMetadata0.createTable((ConnectorSession) null, (ConnectorTableMetadata) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.plugin.blackhole.BlackHoleMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      // Undeclared exception!
      try { 
        blackHoleMetadata0.dropTable((ConnectorSession) null, (ConnectorTableHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.plugin.blackhole.BlackHoleMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      List<SchemaTableName> list0 = blackHoleMetadata0.listTables((ConnectorSession) null, "default.default");
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      LinkedList<BlackHoleColumnHandle> linkedList0 = new LinkedList<BlackHoleColumnHandle>();
      Duration duration0 = Duration.succinctNanos(0);
      BlackHoleTableHandle blackHoleTableHandle0 = new BlackHoleTableHandle("kwd/yl *N(NJ\"cUOp@1", "", linkedList0, 0, 4622, 2702, 0, duration0);
      // Undeclared exception!
      try { 
        blackHoleMetadata0.getTableMetadata((ConnectorSession) null, blackHoleTableHandle0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // tableName is empty
         //
         verifyException("com.facebook.presto.spi.SchemaUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      TestingMetadata.TestingTableHandle testingMetadata_TestingTableHandle0 = new TestingMetadata.TestingTableHandle();
      // Undeclared exception!
      try { 
        blackHoleMetadata0.getColumnHandles((ConnectorSession) null, testingMetadata_TestingTableHandle0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.facebook.presto.testing.TestingMetadata$TestingTableHandle cannot be cast to com.facebook.presto.plugin.blackhole.BlackHoleTableHandle
         //
         verifyException("com.facebook.presto.plugin.blackhole.BlackHoleMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      SchemaTableName schemaTableName0 = new SchemaTableName("rows_per_page property is negative", "default");
      ConnectorTableHandle connectorTableHandle0 = blackHoleMetadata0.getTableHandle((ConnectorSession) null, schemaTableName0);
      assertNull(connectorTableHandle0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      // Undeclared exception!
      try { 
        blackHoleMetadata0.getTableLayout((ConnectorSession) null, (ConnectorTableLayoutHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // handle is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      List<String> list0 = blackHoleMetadata0.listSchemaNames((ConnectorSession) null);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      TestingHandle testingHandle0 = TestingHandle.INSTANCE;
      LinkedHashSet<Slice> linkedHashSet0 = new LinkedHashSet<Slice>(311);
      Optional<ConnectorOutputMetadata> optional0 = blackHoleMetadata0.finishInsert((ConnectorSession) null, testingHandle0, linkedHashSet0, (Collection<ComputedStatistics>) null);
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BlackHoleMetadata blackHoleMetadata0 = new BlackHoleMetadata();
      TestingMetadata.TestingTableHandle testingMetadata_TestingTableHandle0 = new TestingMetadata.TestingTableHandle();
      // Undeclared exception!
      try { 
        blackHoleMetadata0.beginInsert((ConnectorSession) null, testingMetadata_TestingTableHandle0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.facebook.presto.testing.TestingMetadata$TestingTableHandle cannot be cast to com.facebook.presto.plugin.blackhole.BlackHoleTableHandle
         //
         verifyException("com.facebook.presto.plugin.blackhole.BlackHoleMetadata", e);
      }
  }
}
