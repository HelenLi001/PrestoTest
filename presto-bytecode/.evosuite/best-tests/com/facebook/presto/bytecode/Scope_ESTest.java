/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 19 03:37:36 GMT 2021
 */

package com.facebook.presto.bytecode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.bytecode.Access;
import com.facebook.presto.bytecode.BytecodeBlock;
import com.facebook.presto.bytecode.ClassDefinition;
import com.facebook.presto.bytecode.MethodDefinition;
import com.facebook.presto.bytecode.Parameter;
import com.facebook.presto.bytecode.ParameterizedType;
import com.facebook.presto.bytecode.Scope;
import com.facebook.presto.bytecode.Variable;
import com.facebook.presto.bytecode.control.ForLoop;
import com.facebook.presto.bytecode.expression.BytecodeExpression;
import java.lang.reflect.Array;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.EnumSet;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Optional;
import java.util.PriorityQueue;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Scope_ESTest extends Scope_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Type type0 = Type.CHAR_TYPE;
      ParameterizedType parameterizedType0 = ParameterizedType.type(type0);
      Optional<ParameterizedType> optional0 = Optional.of(parameterizedType0);
      PriorityQueue<Parameter> priorityQueue0 = new PriorityQueue<Parameter>();
      ArrayList<Parameter> arrayList0 = new ArrayList<Parameter>(priorityQueue0);
      Scope scope0 = new Scope(optional0, arrayList0);
      // Undeclared exception!
      try { 
        scope0.getVariable((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Optional<ParameterizedType> optional0 = Optional.empty();
      TreeSet<Parameter> treeSet0 = new TreeSet<Parameter>();
      LinkedList<Parameter> linkedList0 = new LinkedList<Parameter>(treeSet0);
      Scope scope0 = new Scope(optional0, linkedList0);
      Class<Optional> class0 = Class.class;
      Variable variable0 = scope0.createTempVariable(class0);
      Class<Throwable> class1 = Class.class;
      scope0.declareVariable(class1, ")r");
      BytecodeBlock bytecodeBlock0 = new BytecodeBlock();
      // Undeclared exception!
      try { 
        scope0.declareVariable(")r", bytecodeBlock0, (BytecodeExpression) variable0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // There is already a variable named )r
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Access access0 = Access.SYNCHRONIZED;
      Access[] accessArray0 = new Access[9];
      accessArray0[0] = access0;
      accessArray0[1] = access0;
      accessArray0[2] = access0;
      accessArray0[3] = accessArray0[1];
      accessArray0[4] = access0;
      accessArray0[5] = access0;
      accessArray0[6] = accessArray0[4];
      accessArray0[7] = access0;
      accessArray0[8] = access0;
      EnumSet<Access> enumSet0 = EnumSet.of(access0, accessArray0);
      Class<String> class0 = Class.class;
      ParameterizedType parameterizedType0 = ParameterizedType.type(class0);
      ParameterizedType[] parameterizedTypeArray0 = new ParameterizedType[6];
      parameterizedTypeArray0[0] = parameterizedType0;
      parameterizedTypeArray0[1] = parameterizedType0;
      parameterizedTypeArray0[2] = parameterizedType0;
      parameterizedTypeArray0[3] = parameterizedType0;
      parameterizedTypeArray0[4] = parameterizedType0;
      parameterizedTypeArray0[5] = parameterizedType0;
      ClassDefinition classDefinition0 = new ClassDefinition(enumSet0, "", parameterizedType0, parameterizedTypeArray0);
      LinkedHashSet<Parameter> linkedHashSet0 = new LinkedHashSet<Parameter>(218, 923.14453F);
      MethodDefinition methodDefinition0 = new MethodDefinition(classDefinition0, enumSet0, "", parameterizedType0, linkedHashSet0);
      Scope scope0 = methodDefinition0.getScope();
      // Undeclared exception!
      try { 
        scope0.declareVariable(class0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // variableName is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Optional<ParameterizedType> optional0 = Optional.empty();
      HashMap<Parameter, Object> hashMap0 = new HashMap<Parameter, Object>();
      Set<Parameter> set0 = hashMap0.keySet();
      Scope scope0 = new Scope(optional0, set0);
      // Undeclared exception!
      try { 
        scope0.declareVariable((ParameterizedType) null, "{!if");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // type is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Optional<ParameterizedType> optional0 = Optional.empty();
      TreeSet<Parameter> treeSet0 = new TreeSet<Parameter>();
      LinkedList<Parameter> linkedList0 = new LinkedList<Parameter>(treeSet0);
      Scope scope0 = new Scope(optional0, linkedList0);
      // Undeclared exception!
      try { 
        scope0.createTempVariable((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // type is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArrayList<Parameter> arrayList0 = new ArrayList<Parameter>();
      Scope scope0 = null;
      try {
        scope0 = new Scope((Optional<ParameterizedType>) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.bytecode.Scope", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Stack<Parameter> stack0 = new Stack<Parameter>();
      Optional<ParameterizedType> optional0 = Optional.empty();
      Scope scope0 = new Scope(optional0, stack0);
      Class<Parameter> class0 = Parameter.class;
      Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 4);
      Class<Integer> class1 = Integer.class;
      classArray0[0] = class1;
      classArray0[1] = classArray0[0];
      classArray0[2] = class1;
      classArray0[3] = classArray0[1];
      ParameterizedType parameterizedType0 = ParameterizedType.type(class0, classArray0);
      // Undeclared exception!
      try { 
        scope0.declareVariable(parameterizedType0, "this");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'this' variable can not be declared
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ParameterizedType parameterizedType0 = ParameterizedType.typeFromPathName("");
      Optional<ParameterizedType> optional0 = Optional.ofNullable(parameterizedType0);
      TreeSet<Parameter> treeSet0 = new TreeSet<Parameter>();
      ArrayDeque<Parameter> arrayDeque0 = new ArrayDeque<Parameter>(treeSet0);
      Scope scope0 = new Scope(optional0, arrayDeque0);
      scope0.declareVariable(parameterizedType0, "");
      // Undeclared exception!
      try { 
        scope0.declareVariable(parameterizedType0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // There is already a variable named 
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PriorityQueue<Parameter> priorityQueue0 = new PriorityQueue<Parameter>();
      Optional<ParameterizedType> optional0 = Optional.empty();
      Class<String> class0 = Class.class;
      Scope scope0 = new Scope(optional0, priorityQueue0);
      // Undeclared exception!
      try { 
        scope0.declareVariable(class0, "this");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'this' variable can not be declared
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Access access0 = Access.FINAL;
      EnumSet<Access> enumSet0 = EnumSet.of(access0, access0);
      ParameterizedType parameterizedType0 = ParameterizedType.typeFromJavaClassName("J/SV");
      ParameterizedType[] parameterizedTypeArray0 = new ParameterizedType[4];
      parameterizedTypeArray0[0] = parameterizedType0;
      parameterizedTypeArray0[1] = parameterizedType0;
      parameterizedTypeArray0[2] = parameterizedType0;
      parameterizedTypeArray0[3] = parameterizedType0;
      ClassDefinition classDefinition0 = new ClassDefinition(enumSet0, "J/SV", parameterizedType0, parameterizedTypeArray0);
      PriorityQueue<Parameter> priorityQueue0 = new PriorityQueue<Parameter>();
      MethodDefinition methodDefinition0 = new MethodDefinition(classDefinition0, enumSet0, "J/SV", parameterizedType0, priorityQueue0);
      Class<Throwable> class0 = Class.class;
      Scope scope0 = methodDefinition0.getScope();
      ForLoop forLoop0 = new ForLoop();
      BytecodeBlock bytecodeBlock0 = forLoop0.initialize();
      Parameter parameter0 = new Parameter("J/SV", parameterizedType0);
      scope0.declareVariable("J/SV", bytecodeBlock0, (BytecodeExpression) parameter0);
      // Undeclared exception!
      try { 
        scope0.declareVariable(class0, "J/SV");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // There is already a variable named J/SV
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PriorityQueue<Parameter> priorityQueue0 = new PriorityQueue<Parameter>();
      Optional<ParameterizedType> optional0 = Optional.empty();
      Scope scope0 = new Scope(optional0, priorityQueue0);
      // Undeclared exception!
      try { 
        scope0.getVariable("valueOf");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Variable valueOf not defined
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Access access0 = Access.FINAL;
      EnumSet<Access> enumSet0 = EnumSet.of(access0, access0);
      ParameterizedType parameterizedType0 = ParameterizedType.typeFromJavaClassName("J/SV");
      ParameterizedType[] parameterizedTypeArray0 = new ParameterizedType[4];
      parameterizedTypeArray0[0] = parameterizedType0;
      parameterizedTypeArray0[1] = parameterizedType0;
      parameterizedTypeArray0[2] = parameterizedType0;
      parameterizedTypeArray0[3] = parameterizedType0;
      ClassDefinition classDefinition0 = new ClassDefinition(enumSet0, "J/SV", parameterizedType0, parameterizedTypeArray0);
      PriorityQueue<Parameter> priorityQueue0 = new PriorityQueue<Parameter>();
      MethodDefinition methodDefinition0 = new MethodDefinition(classDefinition0, enumSet0, "J/SV", parameterizedType0, priorityQueue0);
      Scope scope0 = methodDefinition0.getScope();
      Variable variable0 = scope0.getThis();
      assertEquals("this", variable0.getName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Optional<ParameterizedType> optional0 = Optional.empty();
      ArrayList<Parameter> arrayList0 = new ArrayList<Parameter>();
      Scope scope0 = new Scope(optional0, arrayList0);
      // Undeclared exception!
      try { 
        scope0.getThis();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Static methods do not have a 'this' variable
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PriorityQueue<Parameter> priorityQueue0 = new PriorityQueue<Parameter>();
      Optional<ParameterizedType> optional0 = Optional.empty();
      Class<String> class0 = Class.class;
      Parameter parameter0 = Parameter.arg("8pFG", class0);
      priorityQueue0.add(parameter0);
      Scope scope0 = new Scope(optional0, priorityQueue0);
      Variable variable0 = scope0.getVariable("8pFG");
      assertEquals("8pFG", variable0.getName());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Optional<ParameterizedType> optional0 = Optional.empty();
      ArrayList<Parameter> arrayList0 = new ArrayList<Parameter>(3538);
      Scope scope0 = new Scope(optional0, arrayList0);
      // Undeclared exception!
      try { 
        scope0.declareVariable("temp_", (BytecodeBlock) null, (BytecodeExpression) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.bytecode.Scope", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Optional<ParameterizedType> optional0 = Optional.empty();
      ArrayList<Parameter> arrayList0 = new ArrayList<Parameter>();
      Scope scope0 = new Scope(optional0, arrayList0);
      List<Variable> list0 = scope0.getVariables();
      assertEquals(0, list0.size());
  }
}
