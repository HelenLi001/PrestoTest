/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 18 22:09:32 GMT 2021
 */

package com.facebook.presto.bytecode.control;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.bytecode.BytecodeBlock;
import com.facebook.presto.bytecode.BytecodeNode;
import com.facebook.presto.bytecode.BytecodeVisitor;
import com.facebook.presto.bytecode.Comment;
import com.facebook.presto.bytecode.MethodGenerationContext;
import com.facebook.presto.bytecode.Variable;
import com.facebook.presto.bytecode.control.WhileLoop;
import com.facebook.presto.bytecode.instruction.LabelNode;
import java.util.IllegalFormatConversionException;
import java.util.UnknownFormatConversionException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.objectweb.asm.MethodVisitor;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WhileLoop_ESTest extends WhileLoop_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WhileLoop whileLoop0 = new WhileLoop();
      BytecodeBlock bytecodeBlock0 = whileLoop0.body();
      WhileLoop whileLoop1 = whileLoop0.condition((BytecodeNode) bytecodeBlock0);
      MethodVisitor methodVisitor0 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
      MethodGenerationContext methodGenerationContext0 = mock(MethodGenerationContext.class, new ViolatedAssumptionAnswer());
      whileLoop1.accept(methodVisitor0, methodGenerationContext0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WhileLoop whileLoop0 = new WhileLoop();
      whileLoop0.condition((BytecodeNode) whileLoop0);
      whileLoop0.condition();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      WhileLoop whileLoop0 = new WhileLoop();
      whileLoop0.body((BytecodeNode) whileLoop0);
      // Undeclared exception!
      try { 
        whileLoop0.body((BytecodeNode) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // body already set
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WhileLoop whileLoop0 = new WhileLoop();
      BytecodeBlock bytecodeBlock0 = whileLoop0.body();
      WhileLoop whileLoop1 = whileLoop0.condition((BytecodeNode) bytecodeBlock0);
      whileLoop1.body((BytecodeNode) bytecodeBlock0);
      MethodVisitor methodVisitor0 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
      MethodGenerationContext methodGenerationContext0 = mock(MethodGenerationContext.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      whileLoop0.accept(methodVisitor0, methodGenerationContext0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      WhileLoop whileLoop0 = null;
      try {
        whileLoop0 = new WhileLoop("G9[<$+:%J", objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = 'J'
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) ",f./L%dhvcU";
      WhileLoop whileLoop0 = null;
      try {
        whileLoop0 = new WhileLoop(",f./L%dhvcU", objectArray0);
        fail("Expecting exception: IllegalFormatConversionException");
      
      } catch(IllegalFormatConversionException e) {
         //
         // d != java.lang.String
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WhileLoop whileLoop0 = null;
      try {
        whileLoop0 = new WhileLoop((String) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WhileLoop whileLoop0 = new WhileLoop();
      WhileLoop whileLoop1 = whileLoop0.condition((BytecodeNode) whileLoop0);
      MethodGenerationContext methodGenerationContext0 = mock(MethodGenerationContext.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        whileLoop1.accept((MethodVisitor) null, methodGenerationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WhileLoop whileLoop0 = new WhileLoop();
      MethodVisitor methodVisitor0 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
      MethodGenerationContext methodGenerationContext0 = mock(MethodGenerationContext.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        whileLoop0.accept(methodVisitor0, methodGenerationContext0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // WhileLoop does not have a condition set
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WhileLoop whileLoop0 = new WhileLoop();
      whileLoop0.condition();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WhileLoop whileLoop0 = new WhileLoop();
      whileLoop0.getChildNodes();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      WhileLoop whileLoop0 = new WhileLoop();
      LabelNode labelNode0 = whileLoop0.getContinueLabel();
      whileLoop0.condition((BytecodeNode) whileLoop0);
      // Undeclared exception!
      try { 
        whileLoop0.condition((BytecodeNode) labelNode0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // condition already set
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      WhileLoop whileLoop0 = new WhileLoop();
      whileLoop0.getComment();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      WhileLoop whileLoop0 = new WhileLoop();
      BytecodeBlock bytecodeBlock0 = whileLoop0.body();
      // Undeclared exception!
      try { 
        whileLoop0.accept((BytecodeNode) bytecodeBlock0, (BytecodeVisitor<Comment>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.bytecode.control.WhileLoop", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      WhileLoop whileLoop0 = new WhileLoop();
      LabelNode labelNode0 = whileLoop0.getEndLabel();
      WhileLoop whileLoop1 = whileLoop0.body((BytecodeNode) labelNode0);
      whileLoop1.body();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      WhileLoop whileLoop0 = new WhileLoop("j#,Um,.V~1WM", objectArray0);
      BytecodeVisitor<Variable> bytecodeVisitor0 = (BytecodeVisitor<Variable>) mock(BytecodeVisitor.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(bytecodeVisitor0).visitWhile(any(com.facebook.presto.bytecode.BytecodeNode.class) , any(com.facebook.presto.bytecode.control.WhileLoop.class));
      whileLoop0.accept((BytecodeNode) whileLoop0, bytecodeVisitor0);
  }
}
