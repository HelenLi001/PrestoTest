/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 19 03:51:22 GMT 2021
 */

package com.facebook.presto.bytecode.expression;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.bytecode.MethodGenerationContext;
import com.facebook.presto.bytecode.Parameter;
import com.facebook.presto.bytecode.ParameterizedType;
import com.facebook.presto.bytecode.expression.AndBytecodeExpression;
import com.facebook.presto.bytecode.expression.BytecodeExpression;
import com.facebook.presto.bytecode.expression.ComparisonBytecodeExpression;
import com.facebook.presto.bytecode.expression.NewInstanceBytecodeExpression;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.asm.tree.MethodNode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AndBytecodeExpression_ESTest extends AndBytecodeExpression_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AndBytecodeExpression andBytecodeExpression0 = null;
      try {
        andBytecodeExpression0 = new AndBytecodeExpression((BytecodeExpression) null, (BytecodeExpression) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // left is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<AndBytecodeExpression> class0 = AndBytecodeExpression.class;
      ParameterizedType parameterizedType0 = ParameterizedType.typeFromJavaClassName("\"");
      Parameter parameter0 = Parameter.arg("\"", parameterizedType0);
      BytecodeExpression bytecodeExpression0 = parameter0.instanceOf(class0);
      AndBytecodeExpression andBytecodeExpression0 = null;
      try {
        andBytecodeExpression0 = new AndBytecodeExpression(bytecodeExpression0, parameter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected right to be type boolean but is L\";
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<NewInstanceBytecodeExpression> class0 = NewInstanceBytecodeExpression.class;
      Parameter parameter0 = Parameter.arg("Z`WdV-8aCWb.kTlGx", class0);
      AndBytecodeExpression andBytecodeExpression0 = null;
      try {
        andBytecodeExpression0 = new AndBytecodeExpression(parameter0, parameter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected left to be type boolean but is Lcom/facebook/presto/bytecode/expression/NewInstanceBytecodeExpression;
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<ComparisonBytecodeExpression> class0 = ComparisonBytecodeExpression.class;
      Parameter parameter0 = Parameter.arg("9PYnO(Smx", class0);
      BytecodeExpression bytecodeExpression0 = parameter0.instanceOf(class0);
      AndBytecodeExpression andBytecodeExpression0 = new AndBytecodeExpression(bytecodeExpression0, bytecodeExpression0);
      andBytecodeExpression0.getChildNodes();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<ComparisonBytecodeExpression> class0 = ComparisonBytecodeExpression.class;
      Parameter parameter0 = Parameter.arg("9PYnO(Smx", class0);
      BytecodeExpression bytecodeExpression0 = parameter0.instanceOf(class0);
      AndBytecodeExpression andBytecodeExpression0 = new AndBytecodeExpression(bytecodeExpression0, bytecodeExpression0);
      MethodNode methodNode0 = new MethodNode();
      MethodGenerationContext methodGenerationContext0 = new MethodGenerationContext(methodNode0);
      andBytecodeExpression0.getBytecode(methodGenerationContext0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Class<ComparisonBytecodeExpression> class0 = ComparisonBytecodeExpression.class;
      Parameter parameter0 = Parameter.arg("9PYnO(Smx", class0);
      BytecodeExpression bytecodeExpression0 = parameter0.instanceOf(class0);
      AndBytecodeExpression andBytecodeExpression0 = new AndBytecodeExpression(bytecodeExpression0, bytecodeExpression0);
      andBytecodeExpression0.formatOneLine();
  }
}
