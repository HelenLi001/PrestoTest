/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 18 22:13:31 GMT 2021
 */

package com.facebook.presto.bytecode.instruction;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.bytecode.BytecodeBlock;
import com.facebook.presto.bytecode.BytecodeNode;
import com.facebook.presto.bytecode.BytecodeVisitor;
import com.facebook.presto.bytecode.Comment;
import com.facebook.presto.bytecode.MethodGenerationContext;
import com.facebook.presto.bytecode.OpCode;
import com.facebook.presto.bytecode.Parameter;
import com.facebook.presto.bytecode.ParameterizedType;
import com.facebook.presto.bytecode.StaticTypeBytecodeExpression;
import com.facebook.presto.bytecode.instruction.FieldInstruction;
import java.io.InputStream;
import java.lang.reflect.Array;
import java.lang.reflect.Field;
import java.sql.SQLFeatureNotSupportedException;
import java.util.HashMap;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.tree.MethodNode;
import org.objectweb.asm.util.CheckMethodAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldInstruction_ESTest extends FieldInstruction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class<Parameter> class0 = Parameter.class;
      Class<StaticTypeBytecodeExpression>[] classArray0 = (Class<StaticTypeBytecodeExpression>[]) Array.newInstance(Class.class, 2);
      Class<StaticTypeBytecodeExpression> class1 = StaticTypeBytecodeExpression.class;
      classArray0[0] = class1;
      classArray0[1] = classArray0[0];
      ParameterizedType parameterizedType0 = ParameterizedType.type(class0, classArray0);
      ParameterizedType[] parameterizedTypeArray0 = new ParameterizedType[6];
      parameterizedTypeArray0[0] = parameterizedType0;
      parameterizedTypeArray0[1] = parameterizedType0;
      parameterizedTypeArray0[2] = parameterizedType0;
      parameterizedTypeArray0[3] = parameterizedTypeArray0[2];
      parameterizedTypeArray0[4] = parameterizedType0;
      parameterizedTypeArray0[5] = parameterizedType0;
      ParameterizedType parameterizedType1 = ParameterizedType.type(class1, parameterizedTypeArray0);
      FieldInstruction fieldInstruction0 = FieldInstruction.putStaticInstruction(parameterizedType0, "", parameterizedType1);
      assertNotNull(fieldInstruction0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Class<InputStream> class0 = InputStream.class;
      ParameterizedType parameterizedType0 = ParameterizedType.type(class0);
      FieldInstruction fieldInstruction0 = FieldInstruction.getStaticInstruction((ParameterizedType) null, "GetFieldInstruction{isStatic=true, classType=Ljava/lang/Integer;, fieldName=null, fieldType=Lcom/facebook/presto/bytecode/StaticTypeBytecodeExpression;}", parameterizedType0);
      assertNotNull(fieldInstruction0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ParameterizedType parameterizedType0 = ParameterizedType.typeFromJavaClassName("}k3R{:>~2Ln$");
      ParameterizedType parameterizedType1 = ParameterizedType.typeFromJavaClassName("}k3R{:>~2Ln$");
      FieldInstruction fieldInstruction0 = FieldInstruction.putFieldInstruction(parameterizedType0, "}k3R{:>~2Ln$", parameterizedType1);
      assertNotNull(fieldInstruction0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class<Throwable> class0 = Throwable.class;
      ParameterizedType parameterizedType0 = ParameterizedType.type(class0);
      FieldInstruction fieldInstruction0 = FieldInstruction.getFieldInstruction((ParameterizedType) null, "@E+-Q%vsw&`C-We8", parameterizedType0);
      assertNotNull(fieldInstruction0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Class<ParameterizedType> class0 = ParameterizedType.class;
      FieldInstruction.GetFieldInstruction fieldInstruction_GetFieldInstruction0 = new FieldInstruction.GetFieldInstruction(true, class0, "}k3R{:>~2Ln$", class0);
      ParameterizedType parameterizedType0 = ParameterizedType.typeFromJavaClassName("}k3R{:>~2Ln$");
      FieldInstruction fieldInstruction0 = FieldInstruction.putStaticInstruction(parameterizedType0, "}k3R{:>~2Ln$", parameterizedType0);
      BytecodeVisitor<String> bytecodeVisitor0 = new BytecodeVisitor<String>();
      String string0 = fieldInstruction0.accept((BytecodeNode) fieldInstruction_GetFieldInstruction0, bytecodeVisitor0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Class<BytecodeBlock> class0 = BytecodeBlock.class;
      FieldInstruction fieldInstruction0 = FieldInstruction.putStaticInstruction(class0, (String) null, class0);
      assertNotNull(fieldInstruction0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Class<Parameter> class0 = Parameter.class;
      Class<StaticTypeBytecodeExpression>[] classArray0 = (Class<StaticTypeBytecodeExpression>[]) Array.newInstance(Class.class, 2);
      Class<StaticTypeBytecodeExpression> class1 = StaticTypeBytecodeExpression.class;
      classArray0[0] = class1;
      classArray0[1] = classArray0[0];
      ParameterizedType parameterizedType0 = ParameterizedType.type(class0, classArray0);
      FieldInstruction fieldInstruction0 = FieldInstruction.putFieldInstruction(parameterizedType0, "Zg).uaz]Cm~d", parameterizedType0);
      Class<String> class2 = String.class;
      Class<SQLFeatureNotSupportedException> class3 = SQLFeatureNotSupportedException.class;
      FieldInstruction fieldInstruction1 = FieldInstruction.getStaticInstruction(class2, "java/lang/Throwable", class3);
      Comment comment0 = new Comment((String) null);
      BytecodeVisitor<Comment> bytecodeVisitor0 = (BytecodeVisitor<Comment>) mock(BytecodeVisitor.class, new ViolatedAssumptionAnswer());
      doReturn(comment0).when(bytecodeVisitor0).visitGetField(any(com.facebook.presto.bytecode.BytecodeNode.class) , any(com.facebook.presto.bytecode.instruction.FieldInstruction.GetFieldInstruction.class));
      Comment comment1 = fieldInstruction1.accept((BytecodeNode) fieldInstruction0, bytecodeVisitor0);
      assertSame(comment0, comment1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        FieldInstruction.putFieldInstruction((Class<?>) null, (String) null, (Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // type is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<BytecodeBlock> class0 = BytecodeBlock.class;
      // Undeclared exception!
      try { 
        FieldInstruction.getFieldInstruction((Class<?>) null, "]xpFEMo.8", class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // type is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldInstruction.GetFieldInstruction fieldInstruction_GetFieldInstruction0 = new FieldInstruction.GetFieldInstruction(true, (ParameterizedType) null, "rT J03v|U", (ParameterizedType) null);
      MethodNode methodNode0 = new MethodNode((-32), "PM4I[yA", "isStatic", "Vjq4R'Qef[9", (String[]) null);
      // Undeclared exception!
      try { 
        fieldInstruction_GetFieldInstruction0.accept((MethodVisitor) methodNode0, (MethodGenerationContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.bytecode.instruction.FieldInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class<Comment> class0 = Comment.class;
      FieldInstruction.PutFieldInstruction fieldInstruction_PutFieldInstruction0 = new FieldInstruction.PutFieldInstruction(true, class0, "", class0);
      MethodNode methodNode0 = new MethodNode();
      HashMap<Label, Integer> hashMap0 = new HashMap<Label, Integer>();
      CheckMethodAdapter checkMethodAdapter0 = new CheckMethodAdapter(methodNode0, hashMap0);
      checkMethodAdapter0.visitCode();
      MethodGenerationContext methodGenerationContext0 = new MethodGenerationContext(methodNode0);
      // Undeclared exception!
      try { 
        fieldInstruction_PutFieldInstruction0.accept((MethodVisitor) checkMethodAdapter0, methodGenerationContext0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid name (must not be null or empty)
         //
         verifyException("org.objectweb.asm.util.CheckMethodAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<StaticTypeBytecodeExpression> class0 = StaticTypeBytecodeExpression.class;
      FieldInstruction fieldInstruction0 = FieldInstruction.getFieldInstruction(class0, "", class0);
      // Undeclared exception!
      try { 
        fieldInstruction0.accept((BytecodeNode) null, (BytecodeVisitor<Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.bytecode.instruction.FieldInstruction$GetFieldInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      FieldInstruction.PutFieldInstruction fieldInstruction_PutFieldInstruction0 = new FieldInstruction.PutFieldInstruction(false, class0, "com.facebook.presto.bytecode.instruction.FieldInstruction", class0);
      MethodNode methodNode0 = new MethodNode(248, "com.facebook.presto.bytecode.instruction.FieldInstruction", " %}z4CgDvIHW@", " %}z4CgDvIHW@", (String[]) null);
      CheckMethodAdapter checkMethodAdapter0 = new CheckMethodAdapter(methodNode0);
      MethodGenerationContext methodGenerationContext0 = new MethodGenerationContext(checkMethodAdapter0);
      fieldInstruction_PutFieldInstruction0.accept((MethodVisitor) methodNode0, methodGenerationContext0);
      assertEquals(0, methodNode0.maxLocals);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldInstruction.PutFieldInstruction fieldInstruction_PutFieldInstruction0 = new FieldInstruction.PutFieldInstruction(false, (ParameterizedType) null, (String) null, (ParameterizedType) null);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ParameterizedType parameterizedType0 = new ParameterizedType("");
      FieldInstruction.PutFieldInstruction fieldInstruction_PutFieldInstruction0 = new FieldInstruction.PutFieldInstruction(true, parameterizedType0, "", parameterizedType0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ParameterizedType parameterizedType0 = new ParameterizedType("handler label");
      FieldInstruction.GetFieldInstruction fieldInstruction_GetFieldInstruction0 = new FieldInstruction.GetFieldInstruction(false, parameterizedType0, "slK?kv_0zZ", parameterizedType0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Class<Comment> class0 = Comment.class;
      FieldInstruction.PutFieldInstruction fieldInstruction_PutFieldInstruction0 = new FieldInstruction.PutFieldInstruction(true, class0, "", class0);
      List<BytecodeNode> list0 = fieldInstruction_PutFieldInstruction0.getChildNodes();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Class<BytecodeBlock> class0 = BytecodeBlock.class;
      // Undeclared exception!
      try { 
        FieldInstruction.putStaticInstruction((Class<?>) null, (String) null, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // type is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        FieldInstruction.getFieldInstruction((Field) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.bytecode.instruction.FieldInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        FieldInstruction.putFieldInstruction((Field) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.bytecode.instruction.FieldInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldInstruction fieldInstruction0 = FieldInstruction.getFieldInstruction((ParameterizedType) null, "`6#D", (ParameterizedType) null);
      String string0 = fieldInstruction0.toString();
      assertEquals("GetFieldInstruction{isStatic=false, classType=null, fieldName=`6#D, fieldType=null}", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Class<BytecodeBlock> class0 = BytecodeBlock.class;
      Class<String> class1 = String.class;
      FieldInstruction.GetFieldInstruction fieldInstruction_GetFieldInstruction0 = new FieldInstruction.GetFieldInstruction(false, class0, "L\by<ZL,mP<U", class1);
      CheckMethodAdapter checkMethodAdapter0 = new CheckMethodAdapter((MethodVisitor) null);
      MethodGenerationContext methodGenerationContext0 = new MethodGenerationContext(checkMethodAdapter0);
      // Undeclared exception!
      try { 
        fieldInstruction_GetFieldInstruction0.accept((MethodVisitor) checkMethodAdapter0, methodGenerationContext0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot visit instructions before visitCode has been called.
         //
         verifyException("org.objectweb.asm.util.CheckMethodAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Class<BytecodeBlock> class0 = BytecodeBlock.class;
      Class<String> class1 = String.class;
      FieldInstruction.GetFieldInstruction fieldInstruction_GetFieldInstruction0 = new FieldInstruction.GetFieldInstruction(false, class0, "L\by<ZL,mP<U", class1);
      OpCode opCode0 = OpCode.RET;
      BytecodeVisitor<Object> bytecodeVisitor0 = new BytecodeVisitor<Object>();
      Object object0 = fieldInstruction_GetFieldInstruction0.accept((BytecodeNode) opCode0, bytecodeVisitor0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Class<Parameter> class0 = Parameter.class;
      Class<BytecodeBlock> class1 = BytecodeBlock.class;
      FieldInstruction fieldInstruction0 = FieldInstruction.putFieldInstruction(class1, "`F", class0);
      BytecodeVisitor<Parameter> bytecodeVisitor0 = new BytecodeVisitor<Parameter>();
      Parameter parameter0 = fieldInstruction0.accept((BytecodeNode) fieldInstruction0, bytecodeVisitor0);
      assertNull(parameter0);
  }
}
