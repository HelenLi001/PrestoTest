/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 20 10:21:53 GMT 2021
 */

package com.facebook.presto.cache.filemerge;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.facebook.presto.cache.filemerge.FileMergeCacheConfig;
import io.airlift.units.DataSize;
import io.airlift.units.Duration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FileMergeCacheConfig_ESTest extends FileMergeCacheConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      assertEquals(1000, fileMergeCacheConfig0.getMaxCachedEntries());
      
      fileMergeCacheConfig0.setMaxCachedEntries(0);
      fileMergeCacheConfig0.setMaxInMemoryCacheSize((DataSize) null);
      assertEquals(0, fileMergeCacheConfig0.getMaxCachedEntries());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      FileMergeCacheConfig fileMergeCacheConfig1 = fileMergeCacheConfig0.setMaxCachedEntries((-824));
      DataSize dataSize0 = mock(DataSize.class, new ViolatedAssumptionAnswer());
      fileMergeCacheConfig1.setMaxInMemoryCacheSize(dataSize0);
      assertEquals((-824), fileMergeCacheConfig0.getMaxCachedEntries());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      assertEquals(1000, fileMergeCacheConfig0.getMaxCachedEntries());
      
      fileMergeCacheConfig0.setMaxCachedEntries(0);
      Duration duration0 = mock(Duration.class, new ViolatedAssumptionAnswer());
      fileMergeCacheConfig0.setCacheTtl(duration0);
      assertEquals(0, fileMergeCacheConfig0.getMaxCachedEntries());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      FileMergeCacheConfig fileMergeCacheConfig1 = fileMergeCacheConfig0.setMaxCachedEntries((-824));
      Duration duration0 = mock(Duration.class, new ViolatedAssumptionAnswer());
      fileMergeCacheConfig1.setCacheTtl(duration0);
      assertEquals((-824), fileMergeCacheConfig0.getMaxCachedEntries());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      FileMergeCacheConfig fileMergeCacheConfig1 = fileMergeCacheConfig0.setMaxInMemoryCacheSize((DataSize) null);
      fileMergeCacheConfig1.getMaxInMemoryCacheSize();
      assertEquals(1000, fileMergeCacheConfig1.getMaxCachedEntries());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      assertEquals(1000, fileMergeCacheConfig0.getMaxCachedEntries());
      
      fileMergeCacheConfig0.setMaxCachedEntries(0);
      int int0 = fileMergeCacheConfig0.getMaxCachedEntries();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      assertEquals(1000, fileMergeCacheConfig0.getMaxCachedEntries());
      
      FileMergeCacheConfig fileMergeCacheConfig1 = fileMergeCacheConfig0.setMaxCachedEntries((-1));
      int int0 = fileMergeCacheConfig1.getMaxCachedEntries();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      FileMergeCacheConfig fileMergeCacheConfig1 = fileMergeCacheConfig0.setCacheTtl((Duration) null);
      fileMergeCacheConfig1.getCacheTtl();
      assertEquals(1000, fileMergeCacheConfig1.getMaxCachedEntries());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      fileMergeCacheConfig0.setMaxCachedEntries(15);
      assertEquals(15, fileMergeCacheConfig0.getMaxCachedEntries());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      int int0 = fileMergeCacheConfig0.getMaxCachedEntries();
      assertEquals(1000, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      Duration duration0 = fileMergeCacheConfig0.getCacheTtl();
      FileMergeCacheConfig fileMergeCacheConfig1 = fileMergeCacheConfig0.setCacheTtl(duration0);
      assertEquals(2.0, duration0.getValue(), 0.01);
      assertEquals(1000, fileMergeCacheConfig1.getMaxCachedEntries());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      DataSize dataSize0 = fileMergeCacheConfig0.getMaxInMemoryCacheSize();
      FileMergeCacheConfig fileMergeCacheConfig1 = fileMergeCacheConfig0.setMaxInMemoryCacheSize(dataSize0);
      assertEquals(2.0, dataSize0.getValue(), 0.01);
      assertEquals(1000, fileMergeCacheConfig1.getMaxCachedEntries());
  }
}
