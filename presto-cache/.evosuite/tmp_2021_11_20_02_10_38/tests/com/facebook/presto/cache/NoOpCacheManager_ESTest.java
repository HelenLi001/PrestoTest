/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 20 10:22:19 GMT 2021
 */

package com.facebook.presto.cache;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.facebook.presto.cache.CacheResult;
import com.facebook.presto.cache.FileReadRequest;
import com.facebook.presto.cache.NoOpCacheManager;
import com.facebook.presto.hive.CacheQuota;
import io.airlift.slice.Slice;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NoOpCacheManager_ESTest extends NoOpCacheManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NoOpCacheManager noOpCacheManager0 = new NoOpCacheManager();
      FileReadRequest fileReadRequest0 = mock(FileReadRequest.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[1];
      CacheQuota cacheQuota0 = mock(CacheQuota.class, new ViolatedAssumptionAnswer());
      CacheResult cacheResult0 = noOpCacheManager0.get(fileReadRequest0, byteArray0, (byte)1, cacheQuota0);
      assertEquals(CacheResult.MISS, cacheResult0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NoOpCacheManager noOpCacheManager0 = new NoOpCacheManager();
      FileReadRequest fileReadRequest0 = mock(FileReadRequest.class, new ViolatedAssumptionAnswer());
      CacheQuota cacheQuota0 = mock(CacheQuota.class, new ViolatedAssumptionAnswer());
      noOpCacheManager0.put(fileReadRequest0, (Slice) null, cacheQuota0);
  }
}
