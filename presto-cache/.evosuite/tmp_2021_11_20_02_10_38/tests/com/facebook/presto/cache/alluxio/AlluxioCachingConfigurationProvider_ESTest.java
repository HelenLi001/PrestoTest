/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 20 10:17:47 GMT 2021
 */

package com.facebook.presto.cache.alluxio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.cache.CacheConfig;
import com.facebook.presto.cache.CacheType;
import com.facebook.presto.cache.alluxio.AlluxioCacheConfig;
import com.facebook.presto.cache.alluxio.AlluxioCachingConfigurationProvider;
import com.facebook.presto.hive.HdfsContext;
import java.net.URI;
import org.apache.hadoop.conf.Configuration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AlluxioCachingConfigurationProvider_ESTest extends AlluxioCachingConfigurationProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CacheConfig cacheConfig0 = new CacheConfig();
      CacheConfig cacheConfig1 = cacheConfig0.setCachingEnabled(true);
      CacheType cacheType0 = CacheType.ALLUXIO;
      CacheConfig cacheConfig2 = cacheConfig1.setCacheType(cacheType0);
      AlluxioCacheConfig alluxioCacheConfig0 = new AlluxioCacheConfig();
      AlluxioCachingConfigurationProvider alluxioCachingConfigurationProvider0 = new AlluxioCachingConfigurationProvider(cacheConfig2, alluxioCacheConfig0);
      MockFile mockFile0 = new MockFile("", "<?WJRe|W");
      URI uRI0 = mockFile0.toURI();
      // Undeclared exception!
      try { 
        alluxioCachingConfigurationProvider0.updateConfiguration((Configuration) null, (HdfsContext) null, uRI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.cache.alluxio.AlluxioCachingConfigurationProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CacheConfig cacheConfig0 = new CacheConfig();
      CacheType cacheType0 = CacheType.ALLUXIO;
      cacheConfig0.setCacheType(cacheType0);
      AlluxioCacheConfig alluxioCacheConfig0 = new AlluxioCacheConfig();
      AlluxioCachingConfigurationProvider alluxioCachingConfigurationProvider0 = new AlluxioCachingConfigurationProvider(cacheConfig0, alluxioCacheConfig0);
      alluxioCacheConfig0.setTimeoutEnabled(false);
      Configuration configuration0 = new Configuration(false);
      cacheConfig0.setCachingEnabled(true);
      URI uRI0 = MockURI.aFileURI;
      alluxioCachingConfigurationProvider0.updateConfiguration(configuration0, (HdfsContext) null, uRI0);
      assertEquals((-1), uRI0.getPort());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CacheConfig cacheConfig0 = new CacheConfig();
      CacheType cacheType0 = CacheType.ALLUXIO;
      CacheConfig cacheConfig1 = cacheConfig0.setCacheType(cacheType0);
      AlluxioCacheConfig alluxioCacheConfig0 = new AlluxioCacheConfig();
      AlluxioCachingConfigurationProvider alluxioCachingConfigurationProvider0 = new AlluxioCachingConfigurationProvider(cacheConfig0, alluxioCacheConfig0);
      Configuration configuration0 = new Configuration(false);
      cacheConfig1.setCachingEnabled(true);
      URI uRI0 = MockURI.aFileURI;
      cacheConfig0.setBaseDirectory(uRI0);
      alluxioCachingConfigurationProvider0.updateConfiguration(configuration0, (HdfsContext) null, uRI0);
      assertNull(uRI0.getRawUserInfo());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CacheConfig cacheConfig0 = new CacheConfig();
      cacheConfig0.setCachingEnabled(true);
      URI uRI0 = MockURI.URI((String) null, (String) null, (String) null, (String) null);
      AlluxioCachingConfigurationProvider alluxioCachingConfigurationProvider0 = new AlluxioCachingConfigurationProvider(cacheConfig0, (AlluxioCacheConfig) null);
      alluxioCachingConfigurationProvider0.updateConfiguration((Configuration) null, (HdfsContext) null, uRI0);
      assertNull(uRI0.getRawQuery());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CacheConfig cacheConfig0 = new CacheConfig();
      URI uRI0 = MockURI.URI((String) null, (String) null, (String) null, (String) null);
      AlluxioCachingConfigurationProvider alluxioCachingConfigurationProvider0 = new AlluxioCachingConfigurationProvider(cacheConfig0, (AlluxioCacheConfig) null);
      alluxioCachingConfigurationProvider0.updateConfiguration((Configuration) null, (HdfsContext) null, uRI0);
      assertEquals("", uRI0.getRawPath());
  }
}
