/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 20 10:19:26 GMT 2021
 */

package com.facebook.presto.cache.filemerge;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.cache.CacheConfig;
import com.facebook.presto.cache.CacheResult;
import com.facebook.presto.cache.CacheStats;
import com.facebook.presto.cache.CacheType;
import com.facebook.presto.cache.FileReadRequest;
import com.facebook.presto.cache.filemerge.FileMergeCacheConfig;
import com.facebook.presto.cache.filemerge.FileMergeCacheManager;
import com.facebook.presto.hive.CacheQuota;
import com.facebook.presto.hive.CacheQuotaScope;
import io.airlift.slice.Slice;
import io.airlift.units.DataSize;
import io.airlift.units.Duration;
import java.net.URI;
import java.util.Optional;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.ForkJoinTask;
import java.util.concurrent.Future;
import java.util.concurrent.RejectedExecutionException;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.util.Daemon;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FileMergeCacheManager_ESTest extends FileMergeCacheManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CacheConfig cacheConfig0 = new CacheConfig();
      CacheConfig cacheConfig1 = cacheConfig0.setValidationEnabled(false);
      CacheConfig cacheConfig2 = cacheConfig1.setCachingEnabled(false);
      URI uRI0 = MockURI.aFileURI;
      CacheConfig cacheConfig3 = cacheConfig2.setBaseDirectory(uRI0);
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/foo.bar");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Duration duration0 = Duration.succinctNanos(0L);
      FileMergeCacheConfig fileMergeCacheConfig1 = fileMergeCacheConfig0.setCacheTtl(duration0);
      CacheStats cacheStats0 = new CacheStats();
      ForkJoinPool.ForkJoinWorkerThreadFactory forkJoinPool_ForkJoinWorkerThreadFactory0 = ForkJoinPool.defaultForkJoinWorkerThreadFactory;
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = MockThread.getDefaultUncaughtExceptionHandler();
      ForkJoinPool forkJoinPool0 = new ForkJoinPool(1, forkJoinPool_ForkJoinWorkerThreadFactory0, thread_UncaughtExceptionHandler0, false);
      forkJoinPool0.shutdown();
      ThreadPoolExecutor.DiscardPolicy threadPoolExecutor_DiscardPolicy0 = new ThreadPoolExecutor.DiscardPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(1, threadPoolExecutor_DiscardPolicy0);
      FileMergeCacheManager fileMergeCacheManager0 = null;
      try {
        fileMergeCacheManager0 = new FileMergeCacheManager(cacheConfig3, fileMergeCacheConfig1, cacheStats0, forkJoinPool0, forkJoinPool0, scheduledThreadPoolExecutor0);
        fail("Expecting exception: RejectedExecutionException");
      
      } catch(RejectedExecutionException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ForkJoinPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CacheConfig cacheConfig0 = new CacheConfig();
      CacheConfig cacheConfig1 = cacheConfig0.setCachingEnabled(false);
      URI uRI0 = MockURI.aFileURI;
      CacheConfig cacheConfig2 = cacheConfig1.setBaseDirectory(uRI0);
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/foo.bar");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Duration duration0 = Duration.succinctNanos(0L);
      FileMergeCacheConfig fileMergeCacheConfig1 = fileMergeCacheConfig0.setCacheTtl(duration0);
      CacheStats cacheStats0 = new CacheStats();
      int int0 = 1;
      ForkJoinPool.ForkJoinWorkerThreadFactory forkJoinPool_ForkJoinWorkerThreadFactory0 = ForkJoinPool.defaultForkJoinWorkerThreadFactory;
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = MockThread.getDefaultUncaughtExceptionHandler();
      ForkJoinPool forkJoinPool0 = new ForkJoinPool(1, forkJoinPool_ForkJoinWorkerThreadFactory0, thread_UncaughtExceptionHandler0, false);
      ThreadPoolExecutor.DiscardPolicy threadPoolExecutor_DiscardPolicy0 = new ThreadPoolExecutor.DiscardPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(1, threadPoolExecutor_DiscardPolicy0);
      Thread thread0 = MockThread.currentThread();
      threadPoolExecutor_DiscardPolicy0.rejectedExecution(thread0, scheduledThreadPoolExecutor0);
      FileMergeCacheManager fileMergeCacheManager0 = new FileMergeCacheManager(cacheConfig2, fileMergeCacheConfig1, cacheStats0, forkJoinPool0, forkJoinPool0, scheduledThreadPoolExecutor0);
      CacheQuota cacheQuota0 = CacheQuota.NO_CACHE_CONSTRAINTS;
      // Undeclared exception!
      try { 
        fileMergeCacheManager0.get((FileReadRequest) null, (byte[]) null, 1, cacheQuota0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.cache.filemerge.FileMergeCacheManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CacheConfig cacheConfig0 = new CacheConfig();
      URI uRI0 = MockURI.aFileURI;
      CacheConfig cacheConfig1 = cacheConfig0.setBaseDirectory(uRI0);
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      int int0 = 606;
      FileMergeCacheConfig fileMergeCacheConfig1 = fileMergeCacheConfig0.setMaxCachedEntries(606);
      CacheStats cacheStats0 = new CacheStats();
      ForkJoinTask.getPool();
      Daemon.DaemonFactory daemon_DaemonFactory0 = new Daemon.DaemonFactory();
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(606, daemon_DaemonFactory0, threadPoolExecutor_DiscardOldestPolicy0);
      Callable<Integer> callable0 = (Callable<Integer>) mock(Callable.class, new ViolatedAssumptionAnswer());
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/foo.bar");
      FileSystemHandling.createFolder(evoSuiteFile0);
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      scheduledThreadPoolExecutor0.schedule(callable0, (long) 606, timeUnit0);
      FileMergeCacheManager fileMergeCacheManager0 = null;
      try {
        fileMergeCacheManager0 = new FileMergeCacheManager(cacheConfig1, fileMergeCacheConfig1, cacheStats0, (ExecutorService) null, (ExecutorService) null, scheduledThreadPoolExecutor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.cache.filemerge.FileMergeCacheManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CacheConfig cacheConfig0 = new CacheConfig();
      URI uRI0 = MockURI.aFileURI;
      CacheConfig cacheConfig1 = cacheConfig0.setBaseDirectory(uRI0);
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      CacheStats cacheStats0 = new CacheStats();
      ForkJoinPool forkJoinPool0 = new ForkJoinPool();
      Daemon.DaemonFactory daemon_DaemonFactory0 = new Daemon.DaemonFactory();
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(606);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/foo.bar");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      Callable<Integer> callable0 = (Callable<Integer>) mock(Callable.class, new ViolatedAssumptionAnswer());
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/foo.bar");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "");
      FileMergeCacheManager fileMergeCacheManager0 = new FileMergeCacheManager(cacheConfig1, fileMergeCacheConfig0, cacheStats0, forkJoinPool0, forkJoinPool0, scheduledThreadPoolExecutor0);
      fileMergeCacheManager0.destroy();
      System.setCurrentTimeMillis(606);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CacheConfig cacheConfig0 = new CacheConfig();
      URI uRI0 = MockURI.aFileURI;
      CacheConfig cacheConfig1 = cacheConfig0.setBaseDirectory(uRI0);
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      int int0 = 606;
      CacheStats cacheStats0 = new CacheStats();
      ForkJoinTask.getPool();
      Daemon.DaemonFactory daemon_DaemonFactory0 = new Daemon.DaemonFactory();
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(606, daemon_DaemonFactory0, threadPoolExecutor_DiscardOldestPolicy0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/foo.bar");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      Callable<Integer> callable0 = (Callable<Integer>) mock(Callable.class, new ViolatedAssumptionAnswer());
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/foo.bar");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "");
      FileMergeCacheManager fileMergeCacheManager0 = new FileMergeCacheManager(cacheConfig1, fileMergeCacheConfig0, cacheStats0, (ExecutorService) null, (ExecutorService) null, scheduledThreadPoolExecutor0);
      // Undeclared exception!
      try { 
        fileMergeCacheManager0.destroy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.cache.filemerge.FileMergeCacheManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CacheConfig cacheConfig0 = new CacheConfig();
      CacheType cacheType0 = CacheType.ALLUXIO;
      CacheConfig cacheConfig1 = cacheConfig0.setCacheType(cacheType0);
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      Duration duration0 = new Duration(1.0, timeUnit0);
      FileMergeCacheConfig fileMergeCacheConfig1 = fileMergeCacheConfig0.setCacheTtl(duration0);
      int int0 = (-2214);
      FileMergeCacheConfig fileMergeCacheConfig2 = fileMergeCacheConfig1.setMaxCachedEntries((-2214));
      CacheStats cacheStats0 = new CacheStats();
      ForkJoinPool forkJoinPool0 = new ForkJoinPool();
      fileMergeCacheConfig2.setMaxInMemoryCacheSize((DataSize) null);
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(3);
      FileMergeCacheManager fileMergeCacheManager0 = null;
      try {
        fileMergeCacheManager0 = new FileMergeCacheManager(cacheConfig1, fileMergeCacheConfig2, cacheStats0, forkJoinPool0, scheduledThreadPoolExecutor0, scheduledThreadPoolExecutor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maximum size must not be negative
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CacheConfig cacheConfig0 = new CacheConfig();
      String string0 = "";
      URI uRI0 = MockURI.create("");
      CacheConfig cacheConfig1 = cacheConfig0.setBaseDirectory(uRI0);
      CacheQuotaScope cacheQuotaScope0 = CacheQuotaScope.GLOBAL;
      CacheConfig cacheConfig2 = cacheConfig1.setCacheQuotaScope(cacheQuotaScope0);
      CacheType cacheType0 = CacheType.ALLUXIO;
      CacheConfig cacheConfig3 = cacheConfig2.setCacheType(cacheType0);
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      CacheStats cacheStats0 = new CacheStats();
      ForkJoinTask.getPool();
      Daemon.DaemonFactory daemon_DaemonFactory0 = new Daemon.DaemonFactory();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(0, daemon_DaemonFactory0);
      FileMergeCacheManager fileMergeCacheManager0 = null;
      try {
        fileMergeCacheManager0 = new FileMergeCacheManager(cacheConfig3, fileMergeCacheConfig0, cacheStats0, (ExecutorService) null, (ExecutorService) null, scheduledThreadPoolExecutor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI is not absolute
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      FileMergeCacheConfig fileMergeCacheConfig1 = fileMergeCacheConfig0.setMaxCachedEntries(1724);
      DataSize.Unit dataSize_Unit0 = DataSize.Unit.KILOBYTE;
      DataSize dataSize0 = DataSize.succinctDataSize(1724, dataSize_Unit0);
      DataSize dataSize1 = dataSize0.convertToMostSuccinctDataSize();
      FileMergeCacheConfig fileMergeCacheConfig2 = fileMergeCacheConfig1.setMaxInMemoryCacheSize(dataSize1);
      CacheStats cacheStats0 = new CacheStats();
      ForkJoinTask.getPool();
      int int0 = 2;
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(2);
      FileMergeCacheManager fileMergeCacheManager0 = null;
      try {
        fileMergeCacheManager0 = new FileMergeCacheManager((CacheConfig) null, fileMergeCacheConfig2, cacheStats0, (ExecutorService) null, (ExecutorService) null, scheduledThreadPoolExecutor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // directory is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          CacheConfig cacheConfig0 = new CacheConfig();
          CacheConfig cacheConfig1 = cacheConfig0.setValidationEnabled(true);
          CacheConfig cacheConfig2 = cacheConfig1.setCachingEnabled(true);
          URI uRI0 = MockURI.aFileURI;
          CacheConfig cacheConfig3 = cacheConfig2.setBaseDirectory(uRI0);
          FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
          Duration duration0 = Duration.succinctNanos(0L);
          FileMergeCacheConfig fileMergeCacheConfig1 = fileMergeCacheConfig0.setCacheTtl(duration0);
          CacheStats cacheStats0 = new CacheStats();
          ForkJoinPool.ForkJoinWorkerThreadFactory forkJoinPool_ForkJoinWorkerThreadFactory0 = ForkJoinPool.defaultForkJoinWorkerThreadFactory;
          Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = MockThread.getDefaultUncaughtExceptionHandler();
          ForkJoinPool forkJoinPool0 = new ForkJoinPool(1, forkJoinPool_ForkJoinWorkerThreadFactory0, thread_UncaughtExceptionHandler0, false);
          ThreadPoolExecutor.DiscardPolicy threadPoolExecutor_DiscardPolicy0 = new ThreadPoolExecutor.DiscardPolicy();
          ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(1, threadPoolExecutor_DiscardPolicy0);
          FileMergeCacheManager fileMergeCacheManager0 = null;
          try {
            fileMergeCacheManager0 = new FileMergeCacheManager(cacheConfig3, fileMergeCacheConfig1, cacheStats0, forkJoinPool0, forkJoinPool0, scheduledThreadPoolExecutor0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.io.FilePermission\" \"/tmp/foo.bar\" \"write\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
             // sun.nio.fs.UnixPath.checkWrite(UnixPath.java:801)
             // sun.nio.fs.UnixFileSystemProvider.createDirectory(UnixFileSystemProvider.java:376)
             // java.nio.file.Files.createDirectory(Files.java:674)
             // java.nio.file.Files.createAndCheckIsDirectory(Files.java:781)
             // java.nio.file.Files.createDirectories(Files.java:727)
             // com.facebook.presto.cache.filemerge.FileMergeCacheManager.<init>(FileMergeCacheManager.java:133)
             // sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
             // sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
             // java.lang.reflect.Constructor.newInstance(Constructor.java:423)
             // org.evosuite.testcase.statements.ConstructorStatement$1.execute(ConstructorStatement.java:233)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.ConstructorStatement.execute(ConstructorStatement.java:188)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CacheConfig cacheConfig0 = new CacheConfig();
      CacheConfig cacheConfig1 = cacheConfig0.setValidationEnabled(false);
      CacheConfig cacheConfig2 = cacheConfig1.setCachingEnabled(false);
      URI uRI0 = MockURI.aFileURI;
      CacheConfig cacheConfig3 = cacheConfig2.setBaseDirectory(uRI0);
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/foo.bar");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Duration duration0 = Duration.succinctNanos(0L);
      FileMergeCacheConfig fileMergeCacheConfig1 = fileMergeCacheConfig0.setCacheTtl(duration0);
      CacheStats cacheStats0 = new CacheStats();
      ForkJoinPool.ForkJoinWorkerThreadFactory forkJoinPool_ForkJoinWorkerThreadFactory0 = ForkJoinPool.defaultForkJoinWorkerThreadFactory;
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = MockThread.getDefaultUncaughtExceptionHandler();
      ForkJoinPool forkJoinPool0 = new ForkJoinPool(1, forkJoinPool_ForkJoinWorkerThreadFactory0, thread_UncaughtExceptionHandler0, false);
      ThreadPoolExecutor.DiscardPolicy threadPoolExecutor_DiscardPolicy0 = new ThreadPoolExecutor.DiscardPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(1, threadPoolExecutor_DiscardPolicy0);
      FileMergeCacheManager fileMergeCacheManager0 = new FileMergeCacheManager(cacheConfig3, fileMergeCacheConfig1, cacheStats0, forkJoinPool0, forkJoinPool0, scheduledThreadPoolExecutor0);
      Path path0 = new Path("com.facebook.presto.cache.filemerge.FileMergeCacheManager");
      Path path1 = Path.getPathWithoutSchemeAndAuthority(path0);
      FileReadRequest fileReadRequest0 = new FileReadRequest(path1, 1L, 1);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-45);
      byteArray0[1] = (byte)0;
      CacheQuota cacheQuota0 = CacheQuota.NO_CACHE_CONSTRAINTS;
      cacheStats0.addInMemoryRetainedBytes(134217728L);
      Optional<DataSize> optional0 = cacheQuota0.getQuota();
      CacheQuota cacheQuota1 = new CacheQuota(".", optional0);
      CacheResult cacheResult0 = fileMergeCacheManager0.get(fileReadRequest0, byteArray0, Integer.MAX_VALUE, cacheQuota1);
      assertEquals(1L, cacheStats0.getCacheMiss());
      assertEquals(CacheResult.MISS, cacheResult0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CacheConfig cacheConfig0 = new CacheConfig();
      URI uRI0 = MockURI.aFileURI;
      cacheConfig0.setBaseDirectory(uRI0);
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      int int0 = 606;
      CacheStats cacheStats0 = new CacheStats();
      ForkJoinTask.getPool();
      Daemon.DaemonFactory daemon_DaemonFactory0 = new Daemon.DaemonFactory();
      CacheType cacheType0 = CacheType.FILE_MERGE;
      CacheConfig cacheConfig1 = cacheConfig0.setCacheType(cacheType0);
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(606, daemon_DaemonFactory0, threadPoolExecutor_DiscardOldestPolicy0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/foo.bar");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      Callable<Integer> callable0 = (Callable<Integer>) mock(Callable.class, new ViolatedAssumptionAnswer());
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/foo.bar");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "");
      FileMergeCacheManager fileMergeCacheManager0 = new FileMergeCacheManager(cacheConfig1, fileMergeCacheConfig0, cacheStats0, scheduledThreadPoolExecutor0, scheduledThreadPoolExecutor0, scheduledThreadPoolExecutor0);
      Slice slice0 = mock(Slice.class, new ViolatedAssumptionAnswer());
      CacheQuota cacheQuota0 = CacheQuota.NO_CACHE_CONSTRAINTS;
      // Undeclared exception!
      try { 
        fileMergeCacheManager0.put((FileReadRequest) null, (Slice) null, cacheQuota0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.cache.filemerge.FileMergeCacheManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CacheConfig cacheConfig0 = new CacheConfig();
      URI uRI0 = MockURI.aFileURI;
      CacheConfig cacheConfig1 = cacheConfig0.setBaseDirectory(uRI0);
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      CacheStats cacheStats0 = new CacheStats();
      ForkJoinPool forkJoinPool0 = new ForkJoinPool();
      Daemon.DaemonFactory daemon_DaemonFactory0 = new Daemon.DaemonFactory();
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      ForkJoinPool.commonPool();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(606);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/foo.bar");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      Callable<Integer> callable0 = (Callable<Integer>) mock(Callable.class, new ViolatedAssumptionAnswer());
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/foo.bar");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "");
      FileMergeCacheManager fileMergeCacheManager0 = new FileMergeCacheManager(cacheConfig1, fileMergeCacheConfig0, cacheStats0, forkJoinPool0, forkJoinPool0, scheduledThreadPoolExecutor0);
      fileMergeCacheManager0.destroy();
      System.setCurrentTimeMillis(606);
      Path path0 = new Path(uRI0);
      Path path1 = new Path(path0, ".");
      FileReadRequest fileReadRequest0 = new FileReadRequest(path1, 606, 2143945783);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)18;
      DataSize.Unit dataSize_Unit0 = DataSize.Unit.TERABYTE;
      DataSize dataSize0 = DataSize.succinctDataSize(2146269007, dataSize_Unit0);
      Optional<DataSize> optional0 = Optional.of(dataSize0);
      CacheQuota cacheQuota0 = new CacheQuota("/", optional0);
      CacheResult cacheResult0 = fileMergeCacheManager0.get(fileReadRequest0, byteArray0, 2146269007, cacheQuota0);
      assertEquals(1L, cacheStats0.getCacheMiss());
      assertEquals(CacheResult.MISS, cacheResult0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          CacheConfig cacheConfig0 = new CacheConfig();
          URI uRI0 = MockURI.aFileURI;
          CacheConfig cacheConfig1 = cacheConfig0.setBaseDirectory(uRI0);
          FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
          int int0 = 606;
          FileMergeCacheConfig fileMergeCacheConfig1 = new FileMergeCacheConfig();
          CacheStats cacheStats0 = new CacheStats();
          ForkJoinTask.getPool();
          Daemon.DaemonFactory daemon_DaemonFactory0 = new Daemon.DaemonFactory();
          ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
          ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(606, daemon_DaemonFactory0, threadPoolExecutor_DiscardOldestPolicy0);
          Callable<Integer> callable0 = (Callable<Integer>) mock(Callable.class, new ViolatedAssumptionAnswer());
          TimeUnit timeUnit0 = TimeUnit.HOURS;
          scheduledThreadPoolExecutor0.schedule(callable0, (long) 606, timeUnit0);
          FileMergeCacheManager fileMergeCacheManager0 = null;
          try {
            fileMergeCacheManager0 = new FileMergeCacheManager(cacheConfig1, fileMergeCacheConfig1, cacheStats0, (ExecutorService) null, (ExecutorService) null, scheduledThreadPoolExecutor0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.io.FilePermission\" \"/tmp/foo.bar\" \"write\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
             // sun.nio.fs.UnixPath.checkWrite(UnixPath.java:801)
             // sun.nio.fs.UnixFileSystemProvider.createDirectory(UnixFileSystemProvider.java:376)
             // java.nio.file.Files.createDirectory(Files.java:674)
             // java.nio.file.Files.createAndCheckIsDirectory(Files.java:781)
             // java.nio.file.Files.createDirectories(Files.java:727)
             // com.facebook.presto.cache.filemerge.FileMergeCacheManager.<init>(FileMergeCacheManager.java:133)
             // sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
             // sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
             // java.lang.reflect.Constructor.newInstance(Constructor.java:423)
             // org.evosuite.testcase.statements.ConstructorStatement$1.execute(ConstructorStatement.java:233)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.ConstructorStatement.execute(ConstructorStatement.java:188)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CacheConfig cacheConfig0 = new CacheConfig();
      URI uRI0 = MockURI.aFTPURI;
      CacheConfig cacheConfig1 = cacheConfig0.setBaseDirectory(uRI0);
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      FileMergeCacheConfig fileMergeCacheConfig1 = fileMergeCacheConfig0.setMaxCachedEntries(0);
      DataSize.Unit dataSize_Unit0 = DataSize.Unit.GIGABYTE;
      DataSize dataSize0 = new DataSize(0, dataSize_Unit0);
      DataSize dataSize1 = dataSize0.convertToMostSuccinctDataSize();
      FileMergeCacheConfig fileMergeCacheConfig2 = fileMergeCacheConfig1.setMaxInMemoryCacheSize(dataSize1);
      CacheStats cacheStats0 = new CacheStats();
      ForkJoinPool forkJoinPool0 = ForkJoinPool.commonPool();
      ThreadPoolExecutor.CallerRunsPolicy threadPoolExecutor_CallerRunsPolicy0 = new ThreadPoolExecutor.CallerRunsPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(65546, threadPoolExecutor_CallerRunsPolicy0);
      FileMergeCacheManager fileMergeCacheManager0 = null;
      try {
        fileMergeCacheManager0 = new FileMergeCacheManager(cacheConfig1, fileMergeCacheConfig2, cacheStats0, forkJoinPool0, forkJoinPool0, scheduledThreadPoolExecutor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileMergeCacheConfig fileMergeCacheConfig0 = new FileMergeCacheConfig();
      // Undeclared exception!
      try { 
        DataSize.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // size is null
         //
         verifyException("java.util.Objects", e);
      }
  }
}
