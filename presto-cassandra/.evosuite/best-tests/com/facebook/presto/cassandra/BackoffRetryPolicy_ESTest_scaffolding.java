/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sun Nov 21 02:16:45 GMT 2021
 */

package com.facebook.presto.cassandra;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class BackoffRetryPolicy_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.facebook.presto.cassandra.BackoffRetryPolicy"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.dir", "/mnt/c/Users/Helen/Documents/DataScience18668/GroupProject/project/presto/presto-cassandra"); 
    java.lang.System.setProperty("user.home", "/home/helen"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "helen"); 
    java.lang.System.setProperty("user.timezone", "America/Los_Angeles"); 
    java.lang.System.setProperty("sun.arch.data.model", "64"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(BackoffRetryPolicy_ESTest_scaffolding.class.getClassLoader() ,
      "com.datastax.driver.core.SimpleStatement",
      "com.datastax.driver.core.GettableByIndexData",
      "com.datastax.driver.core.GettableData",
      "com.datastax.driver.core.RegularStatement",
      "com.datastax.driver.core.policies.RetryPolicy",
      "com.datastax.driver.core.CodecRegistry",
      "com.datastax.driver.core.ConsistencyLevel",
      "com.datastax.driver.core.BatchStatement$Type",
      "com.facebook.presto.cassandra.BackoffRetryPolicy",
      "com.datastax.driver.core.GettableByNameData",
      "com.datastax.driver.core.BoundStatement",
      "com.datastax.driver.core.SettableByIndexData",
      "com.datastax.driver.core.exceptions.PagingStateException",
      "com.datastax.driver.core.exceptions.DriverException",
      "com.datastax.driver.core.policies.DefaultRetryPolicy",
      "com.datastax.driver.core.BatchStatement",
      "com.datastax.driver.core.WriteType",
      "com.datastax.driver.core.SettableData",
      "com.datastax.driver.core.PagingState",
      "com.datastax.driver.core.policies.RetryPolicy$RetryDecision$Type",
      "com.datastax.driver.core.exceptions.InvalidTypeException",
      "com.datastax.driver.core.policies.RetryPolicy$RetryDecision",
      "com.datastax.driver.core.SettableByNameData",
      "com.datastax.driver.core.ProtocolVersion",
      "com.datastax.driver.core.exceptions.DriverInternalError",
      "com.datastax.driver.core.Cluster",
      "com.datastax.driver.core.Host",
      "com.datastax.driver.core.Statement$1",
      "com.datastax.driver.core.policies.RetryPolicy$1",
      "com.datastax.driver.core.Statement"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(BackoffRetryPolicy_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.facebook.presto.cassandra.BackoffRetryPolicy",
      "com.datastax.driver.core.policies.RetryPolicy$RetryDecision$Type",
      "com.datastax.driver.core.policies.RetryPolicy$RetryDecision",
      "com.datastax.driver.core.policies.DefaultRetryPolicy",
      "com.datastax.driver.core.Statement$1",
      "com.datastax.driver.core.Statement",
      "com.datastax.driver.core.BatchStatement",
      "com.datastax.driver.core.policies.RetryPolicy$1",
      "com.datastax.driver.core.exceptions.DriverException",
      "com.datastax.driver.core.Cluster$Builder",
      "com.datastax.driver.core.AuthProvider$1",
      "com.datastax.driver.core.AuthProvider",
      "com.datastax.driver.core.policies.ExponentialReconnectionPolicy",
      "com.datastax.driver.core.policies.IdentityTranslator",
      "com.datastax.driver.core.policies.NoSpeculativeExecutionPolicy$1",
      "com.datastax.driver.core.policies.NoSpeculativeExecutionPolicy",
      "com.datastax.driver.core.policies.Policies",
      "com.datastax.driver.core.policies.Policies$Builder",
      "com.datastax.driver.core.Configuration",
      "com.datastax.driver.core.Configuration$Builder",
      "com.datastax.driver.core.QueryOptions",
      "com.datastax.driver.core.GuavaCompatibility$Version19OrHigher",
      "com.datastax.driver.core.GuavaCompatibility",
      "com.datastax.driver.core.SystemProperties",
      "com.datastax.driver.core.Cluster",
      "com.mysql.jdbc.AbandonedConnectionCleanupThread$1",
      "com.mysql.jdbc.AbandonedConnectionCleanupThread",
      "com.mysql.jdbc.NonRegisteringDriver",
      "com.mysql.jdbc.Driver",
      "com.mysql.fabric.jdbc.FabricMySQLDriver",
      "org.h2.Driver",
      "org.hsqldb.jdbc.JDBCDriver",
      "com.datastax.driver.core.PlainTextAuthProvider",
      "com.datastax.driver.core.RegularStatement",
      "com.datastax.driver.core.SimpleStatement",
      "com.datastax.driver.core.BoundStatement",
      "com.datastax.driver.core.AbstractGettableByIndexData",
      "com.datastax.driver.core.AbstractGettableData",
      "com.datastax.driver.core.AbstractData",
      "com.datastax.driver.core.BoundStatement$DataWrapper",
      "com.facebook.presto.common.type.AbstractType",
      "com.facebook.presto.common.type.DecimalType",
      "com.facebook.presto.common.type.ShortDecimalType",
      "com.facebook.presto.common.type.TypeSignature",
      "com.facebook.presto.common.type.TypeSignatureParameter",
      "com.facebook.presto.common.type.ParameterKind",
      "com.facebook.presto.common.type.TypeSignatureBase",
      "com.facebook.presto.common.type.TypeSignatureParameter$1",
      "com.facebook.presto.common.InvalidFunctionArgumentException",
      "com.datastax.driver.core.policies.EC2MultiRegionAddressTranslator",
      "com.datastax.driver.core.PagingState",
      "com.datastax.driver.core.utils.Bytes",
      "com.datastax.driver.core.exceptions.PagingStateException",
      "org.apache.bval.util.ObjectWrapper",
      "com.datastax.driver.core.DataType$Name",
      "com.datastax.driver.core.TypeCodec",
      "com.datastax.driver.core.TypeCodec$StringCodec",
      "com.datastax.driver.core.DataType$NativeType",
      "com.datastax.driver.$internal.com.google.common.collect.ImmutableCollection",
      "com.datastax.driver.$internal.com.google.common.collect.ImmutableSet",
      "com.datastax.driver.$internal.com.google.common.collect.ImmutableSet$SetBuilderImpl",
      "com.datastax.driver.$internal.com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
      "com.datastax.driver.$internal.com.google.common.math.IntMath",
      "com.datastax.driver.$internal.com.google.common.math.MathPreconditions",
      "com.datastax.driver.$internal.com.google.common.math.IntMath$1",
      "com.datastax.driver.$internal.com.google.common.collect.RegularImmutableSet",
      "com.datastax.driver.core.DataType",
      "com.datastax.driver.$internal.com.google.common.reflect.TypeCapture",
      "com.datastax.driver.$internal.com.google.common.reflect.TypeToken",
      "com.datastax.driver.$internal.com.google.common.reflect.TypeToken$SimpleTypeToken",
      "com.datastax.driver.core.TypeCodec$AsciiCodec",
      "com.datastax.driver.core.TypeCodec$PrimitiveLongCodec",
      "com.datastax.driver.core.TypeCodec$LongCodec",
      "com.datastax.driver.core.TypeCodec$BigintCodec",
      "com.datastax.driver.core.TypeCodec$BlobCodec",
      "com.datastax.driver.core.TypeCodec$PrimitiveBooleanCodec",
      "com.datastax.driver.core.TypeCodec$BooleanCodec",
      "com.datastax.driver.core.TypeCodec$CounterCodec",
      "com.datastax.driver.core.TypeCodec$DecimalCodec",
      "com.datastax.driver.core.TypeCodec$PrimitiveDoubleCodec",
      "com.datastax.driver.core.TypeCodec$DoubleCodec",
      "com.datastax.driver.core.TypeCodec$PrimitiveFloatCodec",
      "com.datastax.driver.core.TypeCodec$FloatCodec",
      "com.datastax.driver.core.TypeCodec$InetCodec",
      "com.datastax.driver.core.TypeCodec$PrimitiveIntCodec",
      "com.datastax.driver.core.TypeCodec$IntCodec",
      "com.datastax.driver.core.TypeCodec$VarcharCodec",
      "com.datastax.driver.core.TypeCodec$TimestampCodec",
      "com.datastax.driver.core.TypeCodec$AbstractUUIDCodec",
      "com.datastax.driver.core.TypeCodec$UUIDCodec",
      "com.datastax.driver.core.TypeCodec$VarintCodec",
      "com.datastax.driver.core.TypeCodec$TimeUUIDCodec",
      "com.datastax.driver.core.TypeCodec$PrimitiveShortCodec",
      "com.datastax.driver.core.TypeCodec$SmallIntCodec",
      "com.datastax.driver.core.TypeCodec$PrimitiveByteCodec",
      "com.datastax.driver.core.TypeCodec$TinyIntCodec",
      "com.datastax.driver.core.TypeCodec$DateCodec",
      "com.datastax.driver.core.TypeCodec$TimeCodec",
      "com.datastax.driver.core.TypeCodec$DurationCodec",
      "com.datastax.driver.$internal.com.google.common.cache.CacheBuilder$1",
      "com.datastax.driver.$internal.com.google.common.base.Suppliers",
      "com.datastax.driver.$internal.com.google.common.base.Suppliers$SupplierOfInstance",
      "com.datastax.driver.$internal.com.google.common.cache.CacheStats",
      "com.datastax.driver.$internal.com.google.common.cache.CacheBuilder$2",
      "com.datastax.driver.$internal.com.google.common.base.Ticker$1",
      "com.datastax.driver.$internal.com.google.common.base.Ticker",
      "com.datastax.driver.$internal.com.google.common.cache.CacheBuilder$3",
      "com.datastax.driver.$internal.com.google.common.cache.CacheBuilder",
      "com.datastax.driver.core.CodecRegistry$TypeCodecWeigher",
      "com.datastax.driver.$internal.com.google.common.cache.CacheLoader",
      "com.datastax.driver.core.CodecRegistry$TypeCodecCacheLoader",
      "com.datastax.driver.$internal.com.google.common.cache.LocalCache$LocalManualCache",
      "com.datastax.driver.$internal.com.google.common.cache.LocalCache$LocalLoadingCache",
      "com.datastax.driver.$internal.com.google.common.cache.LocalCache$1",
      "com.datastax.driver.$internal.com.google.common.cache.LocalCache$2",
      "com.datastax.driver.$internal.com.google.common.cache.LocalCache",
      "com.datastax.driver.$internal.com.google.common.cache.LocalCache$Strength",
      "com.datastax.driver.$internal.com.google.common.base.MoreObjects",
      "com.datastax.driver.$internal.com.google.common.base.Equivalence",
      "com.datastax.driver.$internal.com.google.common.base.Equivalence$Equals",
      "com.datastax.driver.$internal.com.google.common.cache.CacheBuilder$OneWeigher",
      "com.datastax.driver.$internal.com.google.common.cache.CacheBuilder$NullListener",
      "com.datastax.driver.$internal.com.google.common.cache.LocalCache$EntryFactory",
      "com.datastax.driver.$internal.com.google.common.cache.LocalCache$Segment",
      "com.datastax.driver.$internal.com.google.common.cache.LocalCache$AccessQueue",
      "com.datastax.driver.$internal.com.google.common.cache.LocalCache$AbstractReferenceEntry",
      "com.datastax.driver.$internal.com.google.common.cache.LocalCache$AccessQueue$1",
      "com.datastax.driver.core.CodecRegistry",
      "com.facebook.presto.common.type.AbstractIntType",
      "com.facebook.presto.common.type.IntegerType",
      "com.facebook.presto.spi.ColumnMetadata",
      "com.facebook.presto.spi.SchemaUtil",
      "io.netty.util.internal.logging.InternalLoggerFactory",
      "io.netty.util.internal.logging.Slf4JLoggerFactory",
      "io.netty.util.internal.logging.AbstractInternalLogger",
      "io.netty.util.internal.logging.Slf4JLogger",
      "io.netty.util.internal.UnpaddedInternalThreadLocalMap",
      "io.netty.util.internal.SystemPropertyUtil",
      "io.netty.util.internal.SystemPropertyUtil$1",
      "io.netty.util.internal.InternalThreadLocalMap",
      "io.netty.util.concurrent.FastThreadLocal",
      "io.netty.buffer.ByteBufUtil$1",
      "io.netty.util.CharsetUtil",
      "io.netty.util.internal.ObjectUtil",
      "io.netty.util.internal.PlatformDependent0$1",
      "io.netty.util.internal.ReflectionUtil",
      "io.netty.util.internal.PlatformDependent0$2",
      "io.netty.util.internal.PlatformDependent0$3",
      "io.netty.util.internal.PlatformDependent0$4",
      "io.netty.util.internal.PlatformDependent0$5",
      "io.netty.util.internal.PlatformDependent0$10",
      "io.netty.util.internal.PlatformDependent0",
      "io.netty.util.internal.PlatformDependent$1",
      "io.netty.util.internal.PlatformDependent$2",
      "io.netty.util.internal.CleanerJava6",
      "io.netty.util.internal.PlatformDependent",
      "io.netty.util.ResourceLeakDetector$Level",
      "io.netty.util.internal.EmptyArrays",
      "io.netty.util.ResourceLeakDetector",
      "io.netty.buffer.AbstractByteBufAllocator",
      "io.netty.util.NettyRuntime$AvailableProcessorsHolder",
      "io.netty.util.NettyRuntime",
      "io.netty.buffer.ByteBuf",
      "io.netty.buffer.EmptyByteBuf",
      "io.netty.util.internal.StringUtil",
      "io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache",
      "io.netty.buffer.PoolArena",
      "io.netty.buffer.PoolArena$DirectArena",
      "io.netty.util.internal.LongAdderCounter",
      "io.netty.buffer.PoolSubpage",
      "io.netty.buffer.PoolChunkList",
      "io.netty.buffer.PooledByteBufAllocatorMetric",
      "io.netty.buffer.PooledByteBufAllocator",
      "io.netty.buffer.ByteBufUtil$2",
      "io.netty.buffer.ByteBufUtil",
      "io.netty.buffer.ByteBufAllocator",
      "io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory",
      "io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory$1",
      "io.netty.util.ResourceLeakDetectorFactory",
      "io.netty.buffer.AbstractByteBuf",
      "io.netty.buffer.AbstractReferenceCountedByteBuf",
      "io.netty.buffer.UnpooledUnsafeDirectByteBuf",
      "io.netty.util.internal.MathUtil",
      "com.datastax.driver.core.ProtocolOptions",
      "com.datastax.driver.core.MetricsOptions",
      "com.datastax.driver.core.policies.TokenAwarePolicy",
      "com.datastax.driver.core.policies.DCAwareRoundRobinPolicy",
      "com.datastax.driver.core.policies.DCAwareRoundRobinPolicy$Builder",
      "com.datastax.driver.core.policies.TokenAwarePolicy$ReplicaOrdering",
      "com.datastax.driver.core.AbstractMonotonicTimestampGenerator",
      "com.datastax.driver.core.LoggingMonotonicTimestampGenerator",
      "com.datastax.driver.core.AtomicMonotonicTimestampGenerator",
      "com.datastax.driver.core.ClockFactory",
      "com.datastax.driver.core.Native",
      "jnr.ffi.LibraryLoader",
      "jnr.ffi.provider.FFIProvider",
      "jnr.ffi.provider.jffi.Provider",
      "jnr.ffi.Runtime",
      "jnr.ffi.provider.AbstractRuntime",
      "jnr.ffi.provider.jffi.NativeRuntime",
      "jnr.ffi.NativeType",
      "jnr.ffi.provider.jffi.NativeRuntime$1",
      "jnr.ffi.Type",
      "jnr.ffi.provider.jffi.NativeRuntime$TypeDelegate",
      "com.kenai.jffi.NativeType",
      "com.kenai.jffi.Type$Builtin",
      "com.kenai.jffi.Type",
      "jnr.ffi.provider.BadType",
      "com.kenai.jffi.Version",
      "com.kenai.jffi.Foreign",
      "com.kenai.jffi.Init",
      "com.kenai.jffi.Foreign$InValidInstanceHolder",
      "com.kenai.jffi.Foreign$InstanceHolder",
      "jnr.ffi.provider.jffi.NativeRuntime$SingletonHolder",
      "jnr.ffi.provider.InvalidProvider",
      "jnr.ffi.provider.InvalidRuntime",
      "jnr.ffi.provider.FFIProvider$SystemProviderSingletonHolder",
      "jnr.ffi.provider.InvalidProvider$1",
      "jnr.ffi.LibraryOption",
      "jnr.ffi.mapper.TypeMapper$Builder",
      "jnr.ffi.mapper.FunctionMapper$Builder",
      "jnr.ffi.mapper.SignatureTypeMapperAdapter",
      "jnr.ffi.mapper.SimpleTypeMapper",
      "jnr.ffi.mapper.SimpleFunctionMapper",
      "jnr.ffi.Platform$OS",
      "jnr.ffi.LibraryLoader$2",
      "jnr.ffi.Platform",
      "jnr.ffi.Platform$CPU",
      "jnr.ffi.Platform$1",
      "jnr.ffi.Platform$Supported",
      "jnr.ffi.Platform$Linux",
      "jnr.ffi.Platform$SingletonHolder",
      "jnr.ffi.LibraryLoader$StaticDataHolder",
      "jnr.ffi.LibraryLoader$1",
      "jnr.ffi.Struct",
      "com.datastax.driver.core.Native$LibCLoader$Timeval",
      "jnr.ffi.Pointer",
      "com.datastax.driver.core.Native$LibCLoader",
      "com.datastax.driver.core.SystemClock",
      "com.datastax.driver.$internal.com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry",
      "com.datastax.driver.$internal.com.google.common.util.concurrent.MoreExecutors",
      "com.datastax.driver.$internal.com.google.common.util.concurrent.MoreExecutors$DirectExecutor",
      "com.datastax.driver.core.PoolingOptions",
      "com.datastax.driver.core.SocketOptions",
      "com.datastax.driver.core.ThreadingOptions",
      "com.datastax.driver.core.NettyOptions",
      "com.datastax.driver.core.Cluster$Manager",
      "com.datastax.driver.core.ConvictionPolicy$DefaultConvictionPolicy$Factory",
      "com.fasterxml.jackson.databind.deser.DeserializerFactory",
      "com.fasterxml.jackson.databind.util.ClassUtil",
      "com.fasterxml.jackson.databind.PropertyName",
      "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
      "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers",
      "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
      "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
      "com.fasterxml.jackson.databind.DatabindContext",
      "com.fasterxml.jackson.databind.DeserializationContext",
      "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
      "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl",
      "com.fasterxml.jackson.databind.deser.DeserializerCache",
      "com.fasterxml.jackson.databind.util.LRUMap",
      "com.fasterxml.jackson.core.JsonProcessingException",
      "com.fasterxml.jackson.databind.JsonMappingException",
      "com.fasterxml.jackson.databind.exc.MismatchedInputException",
      "com.fasterxml.jackson.databind.exc.InvalidFormatException",
      "com.fasterxml.jackson.databind.util.ArrayBuilders",
      "com.datastax.driver.core.PoolingOptions$1",
      "com.datastax.driver.$internal.com.google.common.collect.ImmutableList",
      "com.datastax.driver.$internal.com.google.common.collect.ObjectArrays",
      "com.datastax.driver.$internal.com.google.common.collect.RegularImmutableList",
      "com.datastax.driver.core.policies.ConstantReconnectionPolicy",
      "com.datastax.driver.$internal.io.netty.util.DefaultAttributeMap",
      "com.datastax.driver.$internal.io.netty.util.internal.logging.InternalLoggerFactory",
      "com.datastax.driver.$internal.io.netty.util.internal.logging.Slf4JLoggerFactory",
      "com.datastax.driver.$internal.io.netty.util.internal.logging.AbstractInternalLogger",
      "com.datastax.driver.$internal.io.netty.util.internal.logging.Slf4JLogger",
      "com.datastax.driver.$internal.io.netty.util.internal.ThrowableUtil",
      "com.datastax.driver.$internal.io.netty.channel.AbstractChannel",
      "com.datastax.driver.$internal.io.netty.channel.nio.AbstractNioChannel",
      "com.datastax.driver.$internal.io.netty.util.internal.SystemPropertyUtil",
      "com.datastax.driver.$internal.io.netty.util.internal.SystemPropertyUtil$1",
      "com.datastax.driver.$internal.io.netty.util.internal.StringUtil",
      "com.datastax.driver.$internal.io.netty.util.internal.ObjectUtil",
      "com.datastax.driver.$internal.io.netty.channel.nio.AbstractNioByteChannel",
      "com.datastax.driver.$internal.io.netty.channel.ChannelMetadata",
      "com.datastax.driver.$internal.io.netty.channel.socket.nio.NioSocketChannel",
      "com.datastax.driver.$internal.io.netty.util.internal.PlatformDependent0$10",
      "com.datastax.driver.$internal.io.netty.util.internal.PlatformDependent0$1",
      "com.datastax.driver.$internal.io.netty.util.internal.ReflectionUtil",
      "com.datastax.driver.$internal.io.netty.util.internal.PlatformDependent0$2",
      "com.datastax.driver.$internal.io.netty.util.internal.PlatformDependent0$3",
      "com.datastax.driver.$internal.io.netty.util.internal.PlatformDependent0$4",
      "com.datastax.driver.$internal.io.netty.util.internal.PlatformDependent0$5",
      "com.datastax.driver.$internal.io.netty.util.internal.PlatformDependent0",
      "com.datastax.driver.$internal.io.netty.util.internal.PlatformDependent$1",
      "com.datastax.driver.$internal.io.netty.util.internal.PlatformDependent$2",
      "com.datastax.driver.$internal.io.netty.util.internal.CleanerJava6",
      "com.datastax.driver.$internal.io.netty.util.internal.PlatformDependent",
      "com.datastax.driver.$internal.io.netty.util.concurrent.AbstractFuture",
      "com.datastax.driver.$internal.io.netty.util.concurrent.CompleteFuture",
      "com.datastax.driver.$internal.io.netty.channel.CompleteChannelFuture",
      "com.datastax.driver.$internal.io.netty.channel.SucceededChannelFuture",
      "com.datastax.driver.$internal.io.netty.channel.VoidChannelPromise",
      "com.datastax.driver.$internal.io.netty.util.Signal",
      "com.datastax.driver.$internal.io.netty.util.concurrent.DefaultPromise",
      "com.datastax.driver.core.BatchStatement$Type"
    );
  }
}
