/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 02:07:10 GMT 2021
 */

package com.facebook.presto.cassandra;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.datastax.driver.core.ProtocolVersion;
import com.facebook.airlift.json.JsonCodec;
import com.facebook.presto.cassandra.CassandraClientConfig;
import com.facebook.presto.cassandra.CassandraClientModule;
import com.facebook.presto.cassandra.CassandraConnectorId;
import com.facebook.presto.cassandra.ExtraColumnMetadata;
import com.google.inject.Binder;
import com.google.inject.binder.AnnotatedBindingBuilder;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CassandraClientModule_ESTest extends CassandraClientModule_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CassandraClientModule cassandraClientModule0 = new CassandraClientModule("*H~S>y");
      AnnotatedBindingBuilder<String> annotatedBindingBuilder0 = (AnnotatedBindingBuilder<String>) mock(AnnotatedBindingBuilder.class, new ViolatedAssumptionAnswer());
      Binder binder0 = mock(Binder.class, new ViolatedAssumptionAnswer());
      doReturn(annotatedBindingBuilder0, (AnnotatedBindingBuilder) null).when(binder0).bind(nullable(java.lang.Class.class));
      // Undeclared exception!
      try { 
        cassandraClientModule0.configure(binder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.cassandra.CassandraClientModule", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CassandraConnectorId cassandraConnectorId0 = mock(CassandraConnectorId.class, new ViolatedAssumptionAnswer());
      CassandraClientConfig cassandraClientConfig0 = mock(CassandraClientConfig.class, new ViolatedAssumptionAnswer());
      doReturn((ProtocolVersion) null).when(cassandraClientConfig0).getProtocolVersion();
      JsonCodec<List<ExtraColumnMetadata>> jsonCodec0 = (JsonCodec<List<ExtraColumnMetadata>>) mock(JsonCodec.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        CassandraClientModule.createCassandraSession(cassandraConnectorId0, cassandraClientConfig0, jsonCodec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.datastax.driver.core.Cluster$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CassandraConnectorId cassandraConnectorId0 = mock(CassandraConnectorId.class, new ViolatedAssumptionAnswer());
      ProtocolVersion protocolVersion0 = ProtocolVersion.V1;
      CassandraClientConfig cassandraClientConfig0 = mock(CassandraClientConfig.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(cassandraClientConfig0).getContactPoints();
      doReturn(protocolVersion0).when(cassandraClientConfig0).getProtocolVersion();
      JsonCodec<List<ExtraColumnMetadata>> jsonCodec0 = (JsonCodec<List<ExtraColumnMetadata>>) mock(JsonCodec.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        CassandraClientModule.createCassandraSession(cassandraConnectorId0, cassandraClientConfig0, jsonCodec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // contactPoints is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CassandraClientModule cassandraClientModule0 = new CassandraClientModule("");
      Binder binder0 = mock(Binder.class, new ViolatedAssumptionAnswer());
      doReturn((AnnotatedBindingBuilder) null).when(binder0).bind(nullable(java.lang.Class.class));
      // Undeclared exception!
      try { 
        cassandraClientModule0.configure(binder0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // connectorId is empty
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }
}
