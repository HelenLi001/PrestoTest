/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 02:21:48 GMT 2021
 */

package com.facebook.presto.cassandra;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.cassandra.CassandraPartition;
import com.facebook.presto.common.predicate.TupleDomain;
import com.facebook.presto.spi.ColumnHandle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CassandraPartition_ESTest extends CassandraPartition_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      CassandraPartition cassandraPartition0 = CassandraPartition.UNPARTITIONED;
      TupleDomain<ColumnHandle> tupleDomain0 = cassandraPartition0.getTupleDomain();
      CassandraPartition cassandraPartition1 = new CassandraPartition(byteArray0, "`tSLqBNr\"&JM`N'E(", tupleDomain0, false);
      cassandraPartition1.getKeyAsByteBuffer();
      assertFalse(cassandraPartition1.isIndexedColumnPredicatePushdown());
      assertFalse(cassandraPartition1.isUnpartitioned());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      CassandraPartition cassandraPartition0 = CassandraPartition.UNPARTITIONED;
      TupleDomain<ColumnHandle> tupleDomain0 = cassandraPartition0.getTupleDomain();
      CassandraPartition cassandraPartition1 = new CassandraPartition(byteArray0, (String) null, tupleDomain0, false);
      String string0 = cassandraPartition1.toString();
      assertFalse(cassandraPartition1.isIndexedColumnPredicatePushdown());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      CassandraPartition cassandraPartition0 = CassandraPartition.UNPARTITIONED;
      TupleDomain<ColumnHandle> tupleDomain0 = cassandraPartition0.getTupleDomain();
      CassandraPartition cassandraPartition1 = new CassandraPartition(byteArray0, "", tupleDomain0, true);
      String string0 = cassandraPartition1.toString();
      assertEquals("", string0);
      assertTrue(cassandraPartition1.isIndexedColumnPredicatePushdown());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      CassandraPartition cassandraPartition0 = CassandraPartition.UNPARTITIONED;
      TupleDomain<ColumnHandle> tupleDomain0 = cassandraPartition0.getTupleDomain();
      CassandraPartition cassandraPartition1 = new CassandraPartition(byteArray0, "`tSLqBNr\"&JM`N'E(", tupleDomain0, false);
      boolean boolean0 = cassandraPartition1.isUnpartitioned();
      assertFalse(boolean0);
      assertFalse(cassandraPartition1.isIndexedColumnPredicatePushdown());
      assertTrue(cassandraPartition0.isUnpartitioned());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      CassandraPartition cassandraPartition0 = new CassandraPartition(byteArray0, "z<^;8W;]jp^W\"FtxV", (TupleDomain<ColumnHandle>) null, true);
      boolean boolean0 = cassandraPartition0.isIndexedColumnPredicatePushdown();
      assertEquals("z<^;8W;]jp^W\"FtxV", cassandraPartition0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      CassandraPartition cassandraPartition0 = new CassandraPartition(byteArray0, "$~7621\"I[zYGVmzO!|]", (TupleDomain<ColumnHandle>) null, true);
      cassandraPartition0.getTupleDomain();
      assertTrue(cassandraPartition0.isIndexedColumnPredicatePushdown());
      assertEquals("$~7621\"I[zYGVmzO!|]", cassandraPartition0.getPartitionId());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      CassandraPartition cassandraPartition0 = CassandraPartition.UNPARTITIONED;
      TupleDomain<ColumnHandle> tupleDomain0 = cassandraPartition0.getTupleDomain();
      CassandraPartition cassandraPartition1 = new CassandraPartition(byteArray0, (String) null, tupleDomain0, true);
      String string0 = cassandraPartition1.getPartitionId();
      assertTrue(cassandraPartition1.isIndexedColumnPredicatePushdown());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      CassandraPartition cassandraPartition0 = CassandraPartition.UNPARTITIONED;
      TupleDomain<ColumnHandle> tupleDomain0 = cassandraPartition0.getTupleDomain();
      CassandraPartition cassandraPartition1 = new CassandraPartition(byteArray0, "", tupleDomain0, false);
      String string0 = cassandraPartition1.getPartitionId();
      assertEquals("", string0);
      assertFalse(cassandraPartition1.isIndexedColumnPredicatePushdown());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      CassandraPartition cassandraPartition0 = CassandraPartition.UNPARTITIONED;
      TupleDomain<ColumnHandle> tupleDomain0 = cassandraPartition0.getTupleDomain();
      CassandraPartition cassandraPartition1 = new CassandraPartition(byteArray0, "e[laPWM+`mJuTYH86c%", tupleDomain0, true);
      cassandraPartition1.getKey();
      assertTrue(cassandraPartition1.isIndexedColumnPredicatePushdown());
      assertEquals("e[laPWM+`mJuTYH86c%", cassandraPartition1.getPartitionId());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      CassandraPartition cassandraPartition0 = CassandraPartition.UNPARTITIONED;
      TupleDomain<ColumnHandle> tupleDomain0 = cassandraPartition0.getTupleDomain();
      CassandraPartition cassandraPartition1 = new CassandraPartition(byteArray0, (String) null, tupleDomain0, false);
      // Undeclared exception!
      try { 
        cassandraPartition1.isUnpartitioned();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CassandraPartition cassandraPartition0 = CassandraPartition.UNPARTITIONED;
      byte[] byteArray0 = cassandraPartition0.getKey();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CassandraPartition cassandraPartition0 = CassandraPartition.UNPARTITIONED;
      String string0 = cassandraPartition0.getPartitionId();
      assertEquals("<UNPARTITIONED>", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CassandraPartition cassandraPartition0 = CassandraPartition.UNPARTITIONED;
      String string0 = cassandraPartition0.toString();
      assertEquals("<UNPARTITIONED>", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CassandraPartition cassandraPartition0 = CassandraPartition.UNPARTITIONED;
      boolean boolean0 = cassandraPartition0.isIndexedColumnPredicatePushdown();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      CassandraPartition cassandraPartition0 = CassandraPartition.UNPARTITIONED;
      TupleDomain<ColumnHandle> tupleDomain0 = cassandraPartition0.getTupleDomain();
      CassandraPartition cassandraPartition1 = new CassandraPartition(byteArray0, "`tSLqBNr\"&JM`N'E(", tupleDomain0, false);
      cassandraPartition1.getKey();
      assertFalse(cassandraPartition1.isIndexedColumnPredicatePushdown());
      assertFalse(cassandraPartition1.isUnpartitioned());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CassandraPartition cassandraPartition0 = CassandraPartition.UNPARTITIONED;
      boolean boolean0 = cassandraPartition0.isUnpartitioned();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CassandraPartition cassandraPartition0 = CassandraPartition.UNPARTITIONED;
      // Undeclared exception!
      try { 
        cassandraPartition0.UNPARTITIONED.getKeyAsByteBuffer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }
}
