/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 02:17:59 GMT 2021
 */

package com.facebook.presto.cassandra;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.cassandra.CassandraConnectorId;
import com.facebook.presto.cassandra.CassandraRecordSetProvider;
import com.facebook.presto.cassandra.CassandraSession;
import com.facebook.presto.spi.ColumnHandle;
import com.facebook.presto.spi.ConnectorSession;
import com.facebook.presto.spi.ConnectorSplit;
import com.facebook.presto.spi.connector.ConnectorTransactionHandle;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CassandraRecordSetProvider_ESTest extends CassandraRecordSetProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CassandraConnectorId cassandraConnectorId0 = mock(CassandraConnectorId.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(cassandraConnectorId0).toString();
      CassandraSession cassandraSession0 = mock(CassandraSession.class, new ViolatedAssumptionAnswer());
      CassandraRecordSetProvider cassandraRecordSetProvider0 = new CassandraRecordSetProvider(cassandraConnectorId0, cassandraSession0);
      ConnectorTransactionHandle connectorTransactionHandle0 = mock(ConnectorTransactionHandle.class, new ViolatedAssumptionAnswer());
      ConnectorSession connectorSession0 = mock(ConnectorSession.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        cassandraRecordSetProvider0.getRecordSet(connectorTransactionHandle0, connectorSession0, (ConnectorSplit) null, (List<? extends ColumnHandle>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.cassandra.CassandraRecordSetProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CassandraConnectorId cassandraConnectorId0 = mock(CassandraConnectorId.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(cassandraConnectorId0).toString();
      CassandraSession cassandraSession0 = mock(CassandraSession.class, new ViolatedAssumptionAnswer());
      CassandraRecordSetProvider cassandraRecordSetProvider0 = new CassandraRecordSetProvider(cassandraConnectorId0, cassandraSession0);
      ConnectorTransactionHandle connectorTransactionHandle0 = mock(ConnectorTransactionHandle.class, new ViolatedAssumptionAnswer());
      ConnectorSession connectorSession0 = mock(ConnectorSession.class, new ViolatedAssumptionAnswer());
      ConnectorSplit connectorSplit0 = mock(ConnectorSplit.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        cassandraRecordSetProvider0.getRecordSet(connectorTransactionHandle0, connectorSession0, connectorSplit0, (List<? extends ColumnHandle>) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.facebook.presto.spi.ConnectorSplit$MockitoMock$1560898664 cannot be cast to com.facebook.presto.cassandra.CassandraSplit
         //
         verifyException("com.facebook.presto.cassandra.CassandraRecordSetProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CassandraConnectorId cassandraConnectorId0 = mock(CassandraConnectorId.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(cassandraConnectorId0).toString();
      CassandraSession cassandraSession0 = mock(CassandraSession.class, new ViolatedAssumptionAnswer());
      CassandraRecordSetProvider cassandraRecordSetProvider0 = new CassandraRecordSetProvider(cassandraConnectorId0, cassandraSession0);
      String string0 = cassandraRecordSetProvider0.toString();
      assertEquals("CassandraRecordSetProvider{connectorId=null}", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CassandraConnectorId cassandraConnectorId0 = mock(CassandraConnectorId.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(cassandraConnectorId0).toString();
      CassandraRecordSetProvider cassandraRecordSetProvider0 = null;
      try {
        cassandraRecordSetProvider0 = new CassandraRecordSetProvider(cassandraConnectorId0, (CassandraSession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // cassandraSession is null
         //
         verifyException("java.util.Objects", e);
      }
  }
}
