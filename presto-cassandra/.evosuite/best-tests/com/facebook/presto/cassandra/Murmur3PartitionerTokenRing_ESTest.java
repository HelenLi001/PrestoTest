/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 02:13:33 GMT 2021
 */

package com.facebook.presto.cassandra;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.cassandra.Murmur3PartitionerTokenRing;
import java.math.BigInteger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Murmur3PartitionerTokenRing_ESTest extends Murmur3PartitionerTokenRing_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Murmur3PartitionerTokenRing murmur3PartitionerTokenRing0 = Murmur3PartitionerTokenRing.INSTANCE;
      double double0 = murmur3PartitionerTokenRing0.getRingFraction("9", "9");
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Murmur3PartitionerTokenRing murmur3PartitionerTokenRing0 = Murmur3PartitionerTokenRing.INSTANCE;
      // Undeclared exception!
      try { 
        murmur3PartitionerTokenRing0.getTokenCountInRange("partitioner is null", "");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"partitioner is null\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Murmur3PartitionerTokenRing murmur3PartitionerTokenRing0 = Murmur3PartitionerTokenRing.INSTANCE;
      // Undeclared exception!
      try { 
        murmur3PartitionerTokenRing0.getRingFraction("", "");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Murmur3PartitionerTokenRing murmur3PartitionerTokenRing0 = Murmur3PartitionerTokenRing.INSTANCE;
      BigInteger bigInteger0 = murmur3PartitionerTokenRing0.getTokenCountInRange("2", "9");
      assertEquals((byte)7, bigInteger0.byteValue());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Murmur3PartitionerTokenRing murmur3PartitionerTokenRing0 = Murmur3PartitionerTokenRing.INSTANCE;
      BigInteger bigInteger0 = murmur3PartitionerTokenRing0.getTokenCountInRange("9", "2");
      assertEquals((short) (-8), bigInteger0.shortValue());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Murmur3PartitionerTokenRing murmur3PartitionerTokenRing0 = Murmur3PartitionerTokenRing.INSTANCE;
      double double0 = murmur3PartitionerTokenRing0.getRingFraction("1", "0");
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Murmur3PartitionerTokenRing murmur3PartitionerTokenRing0 = Murmur3PartitionerTokenRing.INSTANCE;
      BigInteger bigInteger0 = murmur3PartitionerTokenRing0.getTokenCountInRange("0", "0");
      assertEquals((byte)0, bigInteger0.byteValue());
  }
}
