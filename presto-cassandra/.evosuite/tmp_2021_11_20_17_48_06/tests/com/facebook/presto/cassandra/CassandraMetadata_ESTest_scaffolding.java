/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sun Nov 21 02:08:36 GMT 2021
 */

package com.facebook.presto.cassandra;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class CassandraMetadata_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.facebook.presto.cassandra.CassandraMetadata"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    /*No java.lang.System property to set*/
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CassandraMetadata_ESTest_scaffolding.class.getClassLoader() ,
      "com.facebook.presto.spi.ConnectorInsertTableHandle",
      "com.facebook.presto.spi.connector.ConnectorMetadata",
      "com.facebook.presto.spi.TableNotFoundException",
      "com.facebook.presto.spi.NotFoundException",
      "com.facebook.presto.cassandra.CassandraMetadata",
      "com.facebook.presto.spi.SchemaNotFoundException",
      "com.facebook.presto.spi.ConnectorTableLayoutHandle",
      "com.facebook.presto.spi.ErrorCodeSupplier",
      "com.facebook.presto.spi.ConnectorTableHandle",
      "com.facebook.presto.spi.PrestoException",
      "com.facebook.presto.spi.ConnectorOutputTableHandle"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CassandraMetadata_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.facebook.presto.cassandra.CassandraMetadata",
      "com.google.common.collect.CollectCollectors",
      "com.facebook.presto.cassandra.util.CassandraCqlUtils",
      "com.facebook.presto.spi.ErrorType",
      "com.facebook.presto.spi.ErrorCode",
      "com.facebook.presto.spi.StandardErrorCode",
      "com.facebook.presto.common.type.AbstractType",
      "com.facebook.presto.common.type.AbstractVariableWidthType",
      "com.facebook.presto.common.type.AbstractVarcharType",
      "com.facebook.presto.common.type.TypeSignature",
      "com.facebook.presto.common.type.TypeSignatureParameter",
      "com.facebook.presto.common.type.ParameterKind",
      "com.facebook.presto.common.type.TypeSignatureBase",
      "com.facebook.presto.common.type.TypeSignatureParameter$1",
      "com.facebook.presto.common.type.VarcharType",
      "com.facebook.presto.common.type.AbstractLongType",
      "com.facebook.presto.common.type.BigintType",
      "com.facebook.presto.common.type.VarbinaryType",
      "com.facebook.presto.common.type.BooleanType",
      "com.facebook.presto.common.type.DoubleType",
      "com.facebook.presto.common.type.AbstractIntType",
      "com.facebook.presto.common.type.RealType",
      "com.facebook.presto.common.type.IntegerType",
      "com.facebook.presto.common.type.SmallintType",
      "com.facebook.presto.common.type.TinyintType",
      "com.facebook.presto.common.type.DateType",
      "com.facebook.presto.common.type.TimestampType",
      "com.facebook.presto.cassandra.CassandraType",
      "com.datastax.driver.core.VersionNumber",
      "com.datastax.driver.$internal.com.google.common.collect.ImmutableMap",
      "com.datastax.driver.$internal.com.google.common.collect.ImmutableMap$Builder",
      "com.datastax.driver.$internal.com.google.common.collect.CollectPreconditions",
      "com.datastax.driver.$internal.com.google.common.collect.ImmutableCollection$Builder",
      "com.datastax.driver.$internal.com.google.common.collect.RegularImmutableMap",
      "com.datastax.driver.$internal.com.google.common.base.Preconditions",
      "com.datastax.driver.$internal.com.google.common.collect.AbstractMapEntry",
      "com.datastax.driver.$internal.com.google.common.collect.ImmutableEntry",
      "com.datastax.driver.$internal.com.google.common.collect.ImmutableMapEntry",
      "com.datastax.driver.$internal.com.google.common.collect.Hashing",
      "com.datastax.driver.core.ProtocolVersion",
      "com.google.common.base.Suppliers",
      "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
      "com.facebook.airlift.json.JsonCodec",
      "com.facebook.presto.cassandra.CassandraConnectorId",
      "io.airlift.units.Duration",
      "io.airlift.units.Preconditions",
      "com.datastax.driver.core.Cluster$Builder",
      "com.datastax.driver.core.AuthProvider$1",
      "com.datastax.driver.core.AuthProvider",
      "com.datastax.driver.core.policies.ExponentialReconnectionPolicy",
      "com.datastax.driver.core.policies.IdentityTranslator",
      "com.datastax.driver.core.policies.NoSpeculativeExecutionPolicy$1",
      "com.datastax.driver.core.policies.NoSpeculativeExecutionPolicy",
      "com.datastax.driver.core.policies.Policies",
      "com.datastax.driver.core.policies.Policies$Builder",
      "com.datastax.driver.core.Configuration",
      "com.datastax.driver.core.Configuration$Builder",
      "com.datastax.driver.core.GuavaCompatibility$Version19OrHigher",
      "com.datastax.driver.core.GuavaCompatibility",
      "com.datastax.driver.core.SystemProperties",
      "com.datastax.driver.core.Cluster"
    );
  }
}
