/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 02:18:58 GMT 2021
 */

package com.facebook.presto.cassandra;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.cassandra.CassandraClientConfig;
import com.facebook.presto.cassandra.CassandraSessionProperties;
import com.facebook.presto.spi.ConnectorSession;
import com.facebook.presto.spi.session.PropertyMetadata;
import java.util.List;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CassandraSessionProperties_ESTest extends CassandraSessionProperties_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        CassandraSessionProperties.getSplitsPerNode((ConnectorSession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.cassandra.CassandraSessionProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CassandraSessionProperties cassandraSessionProperties0 = null;
      try {
        cassandraSessionProperties0 = new CassandraSessionProperties((CassandraClientConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.cassandra.CassandraSessionProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PropertyMetadata<Integer> propertyMetadata0 = (PropertyMetadata<Integer>) mock(PropertyMetadata.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(propertyMetadata0).toString();
      ConnectorSession connectorSession0 = mock(ConnectorSession.class, new ViolatedAssumptionAnswer());
      doReturn(propertyMetadata0).when(connectorSession0).getProperty(anyString() , nullable(java.lang.Class.class));
      Optional<Long> optional0 = CassandraSessionProperties.getSplitsPerNode(connectorSession0);
      CassandraClientConfig cassandraClientConfig0 = mock(CassandraClientConfig.class, new ViolatedAssumptionAnswer());
      doReturn(optional0).when(cassandraClientConfig0).getSplitsPerNode();
      CassandraSessionProperties cassandraSessionProperties0 = null;
      try {
        cassandraSessionProperties0 = new CassandraSessionProperties(cassandraClientConfig0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.facebook.presto.spi.session.PropertyMetadata$MockitoMock$1319879036 cannot be cast to java.lang.Long
         //
         verifyException("com.facebook.presto.cassandra.CassandraSessionProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ConnectorSession connectorSession0 = mock(ConnectorSession.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(connectorSession0).getProperty(anyString() , nullable(java.lang.Class.class));
      Optional<Long> optional0 = CassandraSessionProperties.getSplitsPerNode(connectorSession0);
      CassandraClientConfig cassandraClientConfig0 = mock(CassandraClientConfig.class, new ViolatedAssumptionAnswer());
      doReturn(optional0).when(cassandraClientConfig0).getSplitsPerNode();
      CassandraSessionProperties cassandraSessionProperties0 = new CassandraSessionProperties(cassandraClientConfig0);
      List<PropertyMetadata<?>> list0 = cassandraSessionProperties0.getSessionProperties();
      assertEquals(1, list0.size());
  }
}
