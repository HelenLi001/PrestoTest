/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 01:56:11 GMT 2021
 */

package com.facebook.presto.cassandra.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.cassandra.util.SslContextProvider;
import com.facebook.presto.server.InternalCommunicationConfig;
import java.io.EOFException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URI;
import java.security.KeyStore;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SslContextProvider_ESTest extends SslContextProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SslContextProvider sslContextProvider0 = new SslContextProvider((Optional<File>) null, (Optional<String>) null, (Optional<File>) null, (Optional<String>) null);
      // Undeclared exception!
      try { 
        sslContextProvider0.validateCertificates((KeyStore) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.cassandra.util.SslContextProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SslContextProvider sslContextProvider0 = new SslContextProvider((Optional<File>) null, (Optional<String>) null, (Optional<File>) null, (Optional<String>) null);
      File file0 = MockFile.createTempFile("JS>M|[m:", "JS>M|[m:");
      // Undeclared exception!
      try { 
        sslContextProvider0.loadTrustStore(file0, (Optional<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.cassandra.util.SslContextProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Optional<String> optional0 = Optional.empty();
      SslContextProvider sslContextProvider0 = new SslContextProvider((Optional<File>) null, optional0, (Optional<File>) null, optional0);
      File file0 = MockFile.createTempFile("RpHxyFdw", "RpHxyFdw");
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        sslContextProvider0.loadTrustStore(file0, optional0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SslContextProvider sslContextProvider0 = new SslContextProvider((Optional<File>) null, (Optional<String>) null, (Optional<File>) null, (Optional<String>) null);
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      try { 
        sslContextProvider0.loadTrustStore(mockFile0, (Optional<String>) null);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Optional<String> optional0 = Optional.empty();
      SslContextProvider sslContextProvider0 = new SslContextProvider((Optional<File>) null, optional0, (Optional<File>) null, optional0);
      File file0 = MockFile.createTempFile("RpHxyFdw", "RpHxyFdw");
      try { 
        sslContextProvider0.loadTrustStore(file0, optional0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      InternalCommunicationConfig internalCommunicationConfig0 = new InternalCommunicationConfig();
      Optional<String> optional0 = internalCommunicationConfig0.getIncludedCipherSuites();
      SslContextProvider sslContextProvider0 = new SslContextProvider((Optional<File>) null, optional0, (Optional<File>) null, optional0);
      // Undeclared exception!
      try { 
        sslContextProvider0.buildSslContext();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.cassandra.util.SslContextProvider", e);
      }
  }
}
