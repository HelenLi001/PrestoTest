/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 18 22:53:16 GMT 2021
 */

package com.facebook.presto.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.common.Subfield;
import com.facebook.presto.common.SubfieldTokenizer;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SubfieldTokenizer_ESTest extends SubfieldTokenizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SubfieldTokenizer subfieldTokenizer0 = new SubfieldTokenizer("[*]");
      assertNotNull(subfieldTokenizer0);
      
      Subfield.AllSubscripts subfield_AllSubscripts0 = (Subfield.AllSubscripts)subfieldTokenizer0.next();
      assertTrue(subfield_AllSubscripts0.isSubscript());
      assertEquals("[*]", subfield_AllSubscripts0.toString());
      assertNotNull(subfield_AllSubscripts0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SubfieldTokenizer subfieldTokenizer0 = null;
      try {
        subfieldTokenizer0 = new SubfieldTokenizer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // path is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SubfieldTokenizer subfieldTokenizer0 = new SubfieldTokenizer("V%t+u6&:P^Xdn/gy%");
      assertNotNull(subfieldTokenizer0);
      
      boolean boolean0 = subfieldTokenizer0.hasNext();
      assertTrue(boolean0);
      
      Subfield.NestedField subfield_NestedField0 = (Subfield.NestedField)subfieldTokenizer0.next();
      assertEquals("V", subfield_NestedField0.getName());
      assertFalse(subfield_NestedField0.isSubscript());
      assertNotNull(subfield_NestedField0);
      
      // Undeclared exception!
      try { 
        subfieldTokenizer0.hasNext();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid subfield path: 'V\u2038%t+u6&:P^Xdn/gy%'
         //
         verifyException("com.facebook.presto.common.SubfieldTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SubfieldTokenizer subfieldTokenizer0 = new SubfieldTokenizer("path is null");
      assertNotNull(subfieldTokenizer0);
      
      boolean boolean0 = subfieldTokenizer0.hasNext();
      assertTrue(boolean0);
      
      boolean boolean1 = subfieldTokenizer0.hasNext();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SubfieldTokenizer subfieldTokenizer0 = new SubfieldTokenizer("Hg");
      assertNotNull(subfieldTokenizer0);
      
      String string0 = subfieldTokenizer0.toString();
      assertNotNull(string0);
      assertEquals("\u2038Hg", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SubfieldTokenizer subfieldTokenizer0 = new SubfieldTokenizer("Su_fbLUAu7xoK");
      assertNotNull(subfieldTokenizer0);
      
      boolean boolean0 = subfieldTokenizer0.hasNext();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SubfieldTokenizer subfieldTokenizer0 = new SubfieldTokenizer("Bb1:a0[;E3EzJ");
      assertNotNull(subfieldTokenizer0);
      
      Subfield.NestedField subfield_NestedField0 = (Subfield.NestedField)subfieldTokenizer0.next();
      assertEquals("Bb1:a0", subfield_NestedField0.getName());
      assertFalse(subfield_NestedField0.isSubscript());
      assertNotNull(subfield_NestedField0);
      
      // Undeclared exception!
      try { 
        subfieldTokenizer0.next();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid subfield path: 'Bb1:a0[\u2038;E3EzJ'
         //
         verifyException("com.facebook.presto.common.SubfieldTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SubfieldTokenizer subfieldTokenizer0 = new SubfieldTokenizer("[4");
      assertNotNull(subfieldTokenizer0);
      
      // Undeclared exception!
      try { 
        subfieldTokenizer0.next();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid subfield path: '[4\u2038'
         //
         verifyException("com.facebook.presto.common.SubfieldTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SubfieldTokenizer subfieldTokenizer0 = new SubfieldTokenizer("4|$}");
      assertNotNull(subfieldTokenizer0);
      
      boolean boolean0 = subfieldTokenizer0.hasNext();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SubfieldTokenizer subfieldTokenizer0 = new SubfieldTokenizer("l/@GD;-#K]");
      assertNotNull(subfieldTokenizer0);
      
      Subfield.NestedField subfield_NestedField0 = (Subfield.NestedField)subfieldTokenizer0.next();
      assertEquals("l/@GD", subfield_NestedField0.getName());
      assertFalse(subfield_NestedField0.isSubscript());
      assertNotNull(subfield_NestedField0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SubfieldTokenizer subfieldTokenizer0 = new SubfieldTokenizer("{&+q]jj'r(xvA@StC-0C");
      assertNotNull(subfieldTokenizer0);
      
      // Undeclared exception!
      try { 
        subfieldTokenizer0.next();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid subfield path: '\u2038{&+q]jj'r(xvA@StC-0C'
         //
         verifyException("com.facebook.presto.common.SubfieldTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SubfieldTokenizer subfieldTokenizer0 = new SubfieldTokenizer("B$1:a0[-;E3EzJ");
      assertNotNull(subfieldTokenizer0);
      
      Subfield.NestedField subfield_NestedField0 = (Subfield.NestedField)subfieldTokenizer0.next();
      assertEquals("B$1:a0", subfield_NestedField0.getName());
      assertFalse(subfield_NestedField0.isSubscript());
      assertNotNull(subfield_NestedField0);
      
      // Undeclared exception!
      try { 
        subfieldTokenizer0.next();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid subfield path: 'B$1:a0[-\u2038;E3EzJ'
         //
         verifyException("com.facebook.presto.common.SubfieldTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SubfieldTokenizer subfieldTokenizer0 = new SubfieldTokenizer("[\"");
      assertNotNull(subfieldTokenizer0);
      
      // Undeclared exception!
      try { 
        subfieldTokenizer0.hasNext();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid subfield path: '[\"\u2038'
         //
         verifyException("com.facebook.presto.common.SubfieldTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SubfieldTokenizer subfieldTokenizer0 = new SubfieldTokenizer(".G-6$6[2R?V");
      assertNotNull(subfieldTokenizer0);
      
      Subfield.NestedField subfield_NestedField0 = (Subfield.NestedField)subfieldTokenizer0.next();
      assertFalse(subfield_NestedField0.isSubscript());
      assertEquals("G-6$6", subfield_NestedField0.getName());
      assertNotNull(subfield_NestedField0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SubfieldTokenizer subfieldTokenizer0 = new SubfieldTokenizer("path is null");
      assertNotNull(subfieldTokenizer0);
      
      Subfield.NestedField subfield_NestedField0 = (Subfield.NestedField)subfieldTokenizer0.next();
      assertEquals("path is null", subfield_NestedField0.getName());
      assertFalse(subfield_NestedField0.isSubscript());
      assertNotNull(subfield_NestedField0);
      
      // Undeclared exception!
      try { 
        subfieldTokenizer0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.common.SubfieldTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SubfieldTokenizer subfieldTokenizer0 = new SubfieldTokenizer("Hg");
      Subfield.NestedField subfield_NestedField0 = (Subfield.NestedField)subfieldTokenizer0.next();
      assertEquals("Hg", subfield_NestedField0.getName());
      
      boolean boolean0 = subfieldTokenizer0.hasNext();
      boolean boolean1 = subfieldTokenizer0.hasNext();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SubfieldTokenizer subfieldTokenizer0 = new SubfieldTokenizer("Hg");
      // Undeclared exception!
      try { 
        subfieldTokenizer0.remove();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.common.SubfieldTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SubfieldTokenizer subfieldTokenizer0 = null;
      try {
        subfieldTokenizer0 = new SubfieldTokenizer("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid subfield path: '\u2038'
         //
         verifyException("com.facebook.presto.common.SubfieldTokenizer", e);
      }
  }
}
