/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 18 23:40:26 GMT 2021
 */

package com.facebook.presto.common.type;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.common.type.Type;
import com.facebook.presto.common.type.VarcharType;
import com.facebook.presto.common.type.Varchars;
import io.airlift.slice.Slice;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Varchars_ESTest extends Varchars_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      VarcharType varcharType0 = mock(VarcharType.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = Varchars.isVarcharType(varcharType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        Varchars.truncateToLength((Slice) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // slice is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        Varchars.byteCount((Slice) null, (-1753), (-1753), (-1753));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // slice is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        Varchars.truncateToLength((Slice) null, (VarcharType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // varcharType is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = Varchars.isVarcharType(type0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        Varchars.truncateToLength((Slice) null, type0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // type must be the instance of VarcharType
         //
         verifyException("com.facebook.presto.common.type.Varchars", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      VarcharType varcharType0 = mock(VarcharType.class, new ViolatedAssumptionAnswer());
      doReturn((-3)).when(varcharType0).getLength();
      // Undeclared exception!
      try { 
        Varchars.truncateToLength((Slice) null, (Type) varcharType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // slice is null
         //
         verifyException("java.util.Objects", e);
      }
  }
}
