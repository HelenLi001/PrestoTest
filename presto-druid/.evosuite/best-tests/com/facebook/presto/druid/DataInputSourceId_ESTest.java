/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 08:56:53 GMT 2021
 */

package com.facebook.presto.druid;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.druid.DataInputSourceId;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DataInputSourceId_ESTest extends DataInputSourceId_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DataInputSourceId dataInputSourceId0 = new DataInputSourceId("");
      String string0 = dataInputSourceId0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DataInputSourceId dataInputSourceId0 = null;
      try {
        dataInputSourceId0 = new DataInputSourceId((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // id is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DataInputSourceId dataInputSourceId0 = new DataInputSourceId("<u47j^");
      DataInputSourceId dataInputSourceId1 = new DataInputSourceId("<u47j^");
      boolean boolean0 = dataInputSourceId1.equals(dataInputSourceId0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DataInputSourceId dataInputSourceId0 = new DataInputSourceId("<u47j^");
      boolean boolean0 = dataInputSourceId0.equals("<u47j^");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DataInputSourceId dataInputSourceId0 = new DataInputSourceId("<u47j^");
      boolean boolean0 = dataInputSourceId0.equals(dataInputSourceId0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DataInputSourceId dataInputSourceId0 = new DataInputSourceId("<u47j^");
      boolean boolean0 = dataInputSourceId0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DataInputSourceId dataInputSourceId0 = new DataInputSourceId("<u47j^");
      String string0 = dataInputSourceId0.toString();
      assertEquals("<u47j^", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DataInputSourceId dataInputSourceId0 = new DataInputSourceId("<u47j^");
      dataInputSourceId0.hashCode();
  }
}
