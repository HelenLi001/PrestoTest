/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 08:51:36 GMT 2021
 */

package com.facebook.presto.druid.metadata;

import org.junit.Test;
import static org.junit.Assert.*;
import com.facebook.presto.common.type.Type;
import com.facebook.presto.druid.metadata.DruidColumnType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DruidColumnType_ESTest extends DruidColumnType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DruidColumnType[] druidColumnTypeArray0 = DruidColumnType.values();
      assertEquals(6, druidColumnTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DruidColumnType druidColumnType0 = DruidColumnType.valueOf("VARCHAR");
      assertEquals("string", druidColumnType0.getIngestType());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DruidColumnType druidColumnType0 = DruidColumnType.fromPrestoType((Type) null);
      assertEquals(DruidColumnType.OTHER, druidColumnType0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DruidColumnType druidColumnType0 = DruidColumnType.VARCHAR;
      Type type0 = druidColumnType0.getPrestoType();
      DruidColumnType druidColumnType1 = DruidColumnType.fromPrestoType(type0);
      assertEquals(DruidColumnType.VARCHAR, druidColumnType1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DruidColumnType druidColumnType0 = DruidColumnType.TIMESTAMP;
      Type type0 = druidColumnType0.getPrestoType();
      DruidColumnType druidColumnType1 = DruidColumnType.fromPrestoType(type0);
      assertEquals(DruidColumnType.TIMESTAMP, druidColumnType1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DruidColumnType druidColumnType0 = DruidColumnType.FLOAT;
      Type type0 = druidColumnType0.getPrestoType();
      DruidColumnType druidColumnType1 = DruidColumnType.fromPrestoType(type0);
      assertEquals(DruidColumnType.FLOAT, druidColumnType1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DruidColumnType druidColumnType0 = DruidColumnType.DOUBLE;
      Type type0 = druidColumnType0.getPrestoType();
      DruidColumnType druidColumnType1 = DruidColumnType.fromPrestoType(type0);
      assertEquals(DruidColumnType.DOUBLE, druidColumnType1);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DruidColumnType druidColumnType0 = DruidColumnType.BIGINT;
      Type type0 = druidColumnType0.getPrestoType();
      DruidColumnType druidColumnType1 = DruidColumnType.fromPrestoType(type0);
      String string0 = druidColumnType1.getIngestType();
      assertEquals("long", string0);
  }
}
