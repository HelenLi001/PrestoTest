/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 08:58:47 GMT 2021
 */

package com.facebook.presto.druid.zip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.druid.zip.ExtraData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExtraData_ESTest extends ExtraData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ExtraData extraData0 = new ExtraData(byteArray0, (-1));
      byte[] byteArray1 = extraData0.getData();
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      ExtraData extraData0 = new ExtraData(byteArray0, (byte)0);
      short short0 = extraData0.getId();
      assertEquals((short)255, short0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-99);
      ExtraData extraData0 = new ExtraData(byteArray0, 0);
      short short0 = extraData0.getId();
      assertEquals((short) (-25344), short0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte)1;
      ExtraData extraData0 = new ExtraData(byteArray0, 0);
      byte[] byteArray1 = extraData0.getData();
      assertEquals(1, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ExtraData extraData0 = new ExtraData(byteArray0, (byte)0);
      byte byte0 = extraData0.getByte((byte)0);
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte)2;
      ExtraData extraData0 = new ExtraData(byteArray0, 1);
      byte byte0 = extraData0.getByte((byte)2);
      assertEquals((byte)2, byte0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      ExtraData extraData0 = new ExtraData(byteArray0, (byte)0);
      byte byte0 = extraData0.getByte((byte)0);
      assertEquals((byte) (-1), byte0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ExtraData extraData0 = new ExtraData(byteArray0, (-1));
      // Undeclared exception!
      try { 
        extraData0.getId();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.facebook.presto.druid.zip.ZipUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ExtraData extraData0 = null;
      try {
        extraData0 = new ExtraData((byte[]) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.druid.zip.ExtraData", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ExtraData extraData0 = null;
      try {
        extraData0 = new ExtraData(byteArray0, (-8));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -6
         //
         verifyException("com.facebook.presto.druid.zip.ZipUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ExtraData extraData0 = new ExtraData(byteArray0, 0);
      int int0 = extraData0.getLength();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-2);
      ExtraData extraData0 = null;
      try {
        extraData0 = new ExtraData(byteArray0, (byte) (-2));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // incomplete extra data entry in buffer
         //
         verifyException("com.facebook.presto.druid.zip.ExtraData", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ExtraData extraData0 = null;
      try {
        extraData0 = new ExtraData(byteArray0, 4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // incomplete extra data entry in buffer
         //
         verifyException("com.facebook.presto.druid.zip.ExtraData", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ExtraData extraData0 = null;
      try {
        extraData0 = new ExtraData(byteArray0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // index past end of buffer
         //
         verifyException("com.facebook.presto.druid.zip.ExtraData", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ExtraData extraData0 = new ExtraData(byteArray0, 0);
      short short0 = extraData0.getId();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ExtraData extraData0 = new ExtraData(byteArray0, 0);
      // Undeclared exception!
      try { 
        extraData0.getByte((short) (-25302));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -25302
         //
         verifyException("com.facebook.presto.druid.zip.ExtraData", e);
      }
  }
}
