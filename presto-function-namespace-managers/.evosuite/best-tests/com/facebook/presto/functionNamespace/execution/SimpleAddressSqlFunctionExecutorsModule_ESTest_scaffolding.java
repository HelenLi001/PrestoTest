/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sat Nov 20 09:54:36 GMT 2021
 */

package com.facebook.presto.functionNamespace.execution;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class SimpleAddressSqlFunctionExecutorsModule_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.facebook.presto.functionNamespace.execution.SimpleAddressSqlFunctionExecutorsModule"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.dir", "/mnt/c/Users/Helen/Documents/DataScience18668/GroupProject/project/presto/presto-function-namespace-managers"); 
    java.lang.System.setProperty("user.home", "/home/helen"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "helen"); 
    java.lang.System.setProperty("user.timezone", "America/Los_Angeles"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(SimpleAddressSqlFunctionExecutorsModule_ESTest_scaffolding.class.getClassLoader() ,
      "com.google.common.collect.Hashing",
      "com.facebook.airlift.configuration.ConfigBinder$InternalConfigBinder",
      "com.facebook.airlift.configuration.ConfigBinder$GuiceConfigBinder$1",
      "com.google.inject.Scopes$1",
      "com.google.inject.Scopes$2",
      "com.facebook.presto.functionNamespace.SqlInvokedFunctionNamespaceManagerConfig",
      "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
      "com.google.inject.internal.SingletonScope",
      "com.google.inject.spi.TypeConverter",
      "com.google.inject.Key$AnnotationStrategy",
      "com.google.common.collect.LinkedHashMultimap$ValueSetLink",
      "com.google.common.collect.RegularImmutableMap$KeySet",
      "com.google.common.collect.LinkedHashMultimap",
      "com.google.common.collect.Platform",
      "com.google.common.reflect.TypeParameter",
      "com.google.inject.PrivateBinder",
      "com.google.common.collect.RegularImmutableMap",
      "com.google.inject.spi.Dependency",
      "com.facebook.airlift.configuration.ConfigurationAwareModule",
      "com.google.inject.multibindings.Multibinder",
      "com.google.common.collect.SortedMapDifference",
      "com.google.inject.binder.ScopedBindingBuilder",
      "com.google.common.collect.AbstractMapEntry",
      "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
      "com.google.common.collect.LinkedHashMultimap$ValueEntry",
      "com.google.inject.binder.LinkedBindingBuilder",
      "com.google.inject.TypeLiteral",
      "com.google.inject.spi.BindingScopingVisitor",
      "com.google.common.collect.LinkedHashMultimapGwtSerializationDependencies",
      "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet",
      "com.google.inject.internal.MoreTypes",
      "com.google.common.collect.ImmutableMapEntrySet",
      "org.aopalliance.intercept.Interceptor",
      "com.google.common.collect.AbstractMapBasedMultimap",
      "com.google.inject.Binder",
      "com.facebook.airlift.configuration.ConfigurationFactory",
      "org.aopalliance.aop.Advice",
      "com.google.inject.internal.CycleDetectingLock",
      "com.google.common.collect.Maps$BiMapConverter",
      "com.facebook.presto.functionNamespace.execution.SimpleAddressSqlFunctionExecutorsModule$1",
      "com.facebook.presto.functionNamespace.execution.SimpleAddressSqlFunctionExecutorsModule$2",
      "com.google.inject.Scope",
      "com.google.common.collect.MapDifference",
      "com.facebook.presto.functionNamespace.execution.SqlFunctionExecutors",
      "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
      "com.facebook.airlift.configuration.ConfigBinder",
      "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry",
      "com.google.inject.internal.CycleDetectingLock$CycleDetectingLockFactory",
      "com.google.common.base.Preconditions",
      "com.google.inject.matcher.Matcher",
      "com.google.common.collect.UnmodifiableIterator",
      "com.facebook.presto.functionNamespace.execution.SimpleAddressSqlFunctionExecutorsModule",
      "com.google.inject.MembersInjector",
      "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
      "com.google.common.collect.ImmutableEntry",
      "com.google.inject.Module",
      "com.google.inject.Key",
      "com.google.common.collect.ImmutableEnumMap",
      "com.google.common.collect.ImmutableCollection",
      "com.facebook.airlift.configuration.ConfigurationBindingListenerHolder",
      "com.google.inject.binder.AnnotatedBindingBuilder",
      "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
      "com.facebook.airlift.configuration.AbstractConfigurationAwareModule",
      "com.google.inject.spi.Message",
      "com.google.common.base.Converter",
      "com.google.common.collect.ImmutableCollection$Builder",
      "com.google.common.collect.Maps$8",
      "com.google.common.collect.BiMap",
      "com.google.common.collect.AbstractSetMultimap",
      "com.google.common.collect.IndexedImmutableSet",
      "com.google.common.base.Function",
      "com.google.common.collect.ImmutableSet",
      "com.google.common.collect.ImmutableMap",
      "com.google.common.collect.ImmutableMapEntry",
      "com.google.inject.ConfigurationException",
      "com.google.common.collect.CollectPreconditions",
      "com.google.inject.Binding",
      "com.google.inject.Stage",
      "com.google.common.reflect.TypeCapture",
      "com.google.inject.spi.Element",
      "com.google.common.collect.ImmutableMap$1",
      "com.google.common.collect.Multiset",
      "com.google.common.collect.AbstractMultimap",
      "com.google.inject.binder.AnnotatedConstantBindingBuilder",
      "com.google.inject.internal.RealMultibinder",
      "com.google.common.collect.Multimap",
      "com.facebook.airlift.configuration.ConfigBinder$GuiceConfigBinder",
      "com.google.common.collect.ImmutableBiMap",
      "com.google.common.collect.ImmutableList",
      "com.google.inject.spi.ModuleAnnotatedMethodScanner",
      "com.google.common.collect.ImmutableBiMapFauxverideShim",
      "com.google.inject.Key$NullAnnotationStrategy",
      "com.google.inject.spi.ProvisionListener",
      "com.google.inject.Scopes",
      "com.google.common.collect.Maps",
      "com.google.common.collect.ImmutableMap$Builder",
      "com.google.common.collect.SetMultimap",
      "com.google.inject.Injector",
      "org.aopalliance.intercept.MethodInterceptor",
      "com.google.inject.Provider",
      "com.google.common.collect.Maps$EntryTransformer",
      "com.google.common.collect.RegularImmutableMap$Values",
      "com.google.inject.spi.TypeListener"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("com.google.inject.Binder", false, SimpleAddressSqlFunctionExecutorsModule_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("com.google.inject.binder.AnnotatedBindingBuilder", false, SimpleAddressSqlFunctionExecutorsModule_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(SimpleAddressSqlFunctionExecutorsModule_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.facebook.airlift.configuration.AbstractConfigurationAwareModule",
      "com.facebook.presto.functionNamespace.execution.SimpleAddressSqlFunctionExecutorsModule",
      "com.google.inject.TypeLiteral",
      "com.facebook.presto.functionNamespace.execution.SimpleAddressSqlFunctionExecutorsModule$1",
      "com.facebook.presto.functionNamespace.execution.SimpleAddressSqlFunctionExecutorsModule$2",
      "com.google.common.collect.Maps",
      "com.google.common.collect.AbstractMultimap",
      "com.google.common.collect.AbstractMapBasedMultimap",
      "com.google.common.collect.AbstractSetMultimap",
      "com.google.common.collect.LinkedHashMultimapGwtSerializationDependencies",
      "com.google.common.collect.LinkedHashMultimap",
      "com.google.common.collect.Platform",
      "com.google.common.base.Preconditions",
      "com.google.common.collect.CollectPreconditions",
      "com.google.common.collect.AbstractMapEntry",
      "com.google.common.collect.ImmutableEntry",
      "com.google.common.collect.LinkedHashMultimap$ValueEntry",
      "com.google.inject.internal.CycleDetectingLock$CycleDetectingLockFactory",
      "com.google.inject.internal.SingletonScope",
      "com.google.inject.Scopes$1",
      "com.google.inject.Scopes$2",
      "com.google.inject.Scopes",
      "com.facebook.presto.spi.function.FunctionImplementationType",
      "org.apache.bval.jsr.ApacheValidationProvider",
      "org.apache.bval.jsr.ConfigurationImpl",
      "org.apache.bval.jsr.util.LookBehindRegexHolder",
      "org.apache.bval.util.Validate",
      "org.apache.bval.util.Exceptions",
      "org.apache.bval.jsr.DefaultMessageInterpolator",
      "org.apache.bval.jsr.DefaultMessageInterpolator$org_apache_bval_util_reflection_Reflection$$loaderFromThreadOrClass$$Ljava_lang_Class$_ACTION",
      "org.apache.bval.el.ELFacade",
      "org.apache.bval.util.Lazy",
      "org.apache.bval.jsr.ConfigurationImpl$LazyParticipant",
      "org.apache.bval.jsr.DefaultConstraintValidatorFactory",
      "org.apache.bval.jsr.resolver.DefaultTraversableResolver",
      "org.apache.bval.jsr.resolver.DefaultTraversableResolver$org_apache_bval_util_reflection_Reflection$$loaderFromClassOrThread$$Ljava_lang_Class$_ACTION",
      "org.apache.bval.jsr.resolver.DefaultTraversableResolver$org_apache_bval_util_reflection_Reflection$$toClass$$Ljava_lang_String$Ljava_lang_ClassLoader$_ACTION",
      "org.apache.bval.jsr.resolver.JPATraversableResolver",
      "org.apache.bval.jsr.parameter.DefaultParameterNameProvider",
      "org.apache.bval.jsr.valueextraction.ValueExtractors$OnDuplicateContainerElementKey",
      "org.apache.bval.util.StringUtils",
      "org.apache.bval.util.reflection.Reflection",
      "org.apache.bval.jsr.valueextraction.IterableElementExtractor",
      "org.apache.bval.jsr.metadata.ContainerElementKey",
      "org.apache.bval.util.LazyInt",
      "org.apache.bval.util.reflection.TypeUtils",
      "org.apache.bval.jsr.valueextraction.ListElementExtractor",
      "org.apache.bval.jsr.valueextraction.MapExtractor$ForKey",
      "org.apache.bval.jsr.valueextraction.MapExtractor$ForValue",
      "org.apache.bval.jsr.valueextraction.OptionalExtractor$ForDouble",
      "org.apache.bval.jsr.metadata.ContainerElementKey$1",
      "org.apache.bval.jsr.valueextraction.OptionalExtractor$ForInt",
      "org.apache.bval.jsr.valueextraction.OptionalExtractor$ForLong",
      "org.apache.bval.jsr.valueextraction.OptionalExtractor$ForObject",
      "org.apache.bval.jsr.valueextraction.FxExtractor$Activation",
      "org.apache.bval.jsr.valueextraction.ValueExtractors",
      "org.apache.bval.jsr.ConfigurationImpl$doBuildValidatorFactory_ACTION",
      "org.apache.bval.jsr.xml.SchemaManager$Builder",
      "org.apache.bval.jsr.metadata.XmlBuilder$Version",
      "org.apache.bval.jsr.xml.SchemaManager$Key",
      "org.apache.bval.jsr.xml.SchemaManager",
      "org.apache.bval.jsr.xml.ValidationParser",
      "org.apache.bval.jsr.xml.ValidationParser$parseXmlConfig$$Ljava_lang_String$_ACTION",
      "org.apache.bval.jsr.util.ExecutableTypes",
      "org.apache.bval.jsr.BootstrapConfigurationImpl",
      "org.apache.bval.jsr.ParticipantFactory",
      "org.apache.bval.jsr.util.ToUnmodifiable",
      "org.apache.bval.jsr.ApacheValidatorFactory",
      "org.apache.bval.jsr.descriptor.DescriptorManager",
      "org.apache.bval.jsr.metadata.ReflectionBuilder",
      "org.apache.bval.jsr.metadata.MetadataBuilders",
      "org.apache.bval.jsr.ConstraintCached",
      "org.apache.bval.jsr.groups.Groups",
      "org.apache.bval.jsr.groups.GroupStrategy$1",
      "org.apache.bval.jsr.groups.GroupStrategy",
      "org.apache.bval.jsr.groups.Group",
      "org.apache.bval.jsr.groups.GroupsComputer",
      "org.apache.bval.jsr.ConstraintAnnotationAttributes",
      "org.apache.bval.jsr.util.AnnotationsManager",
      "org.apache.bval.jsr.util.LRUCache",
      "org.apache.bval.jsr.xml.ValidationMappingParser",
      "org.apache.bval.jsr.ParticipantFactory$newInstance$$Ljava_lang_Class$_ACTION",
      "org.apache.bval.cdi.BValExtension",
      "org.apache.bval.jsr.ApacheFactoryContext",
      "org.apache.bval.jsr.ValidatorImpl",
      "org.apache.bval.jsr.job.ValidationJobFactory",
      "com.facebook.airlift.configuration.ConfigurationFactory",
      "com.facebook.airlift.configuration.ConfigBinder",
      "com.facebook.airlift.configuration.ConfigBinder$GuiceConfigBinder",
      "com.google.inject.multibindings.Multibinder",
      "com.google.inject.Key",
      "com.google.inject.Key$NullAnnotationStrategy",
      "com.google.common.collect.ImmutableMap$Builder",
      "com.google.common.collect.ImmutableMap",
      "com.google.common.collect.ImmutableCollection$Builder",
      "com.google.common.collect.RegularImmutableMap",
      "com.google.common.collect.ImmutableMapEntry",
      "com.google.common.collect.Hashing",
      "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry",
      "com.google.inject.internal.MoreTypes",
      "com.google.inject.internal.RealMultibinder"
    );
  }
}
