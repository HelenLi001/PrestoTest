/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 20 09:59:36 GMT 2021
 */

package com.facebook.presto.functionNamespace.mysql;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.functionNamespace.mysql.SqlInvokedFunctionRecordRowMapper;
import java.sql.ResultSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jdbi.v3.core.statement.StatementContext;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SqlInvokedFunctionRecordRowMapper_ESTest extends SqlInvokedFunctionRecordRowMapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SqlInvokedFunctionRecordRowMapper sqlInvokedFunctionRecordRowMapper0 = new SqlInvokedFunctionRecordRowMapper();
      StatementContext statementContext0 = mock(StatementContext.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        sqlInvokedFunctionRecordRowMapper0.map((ResultSet) null, statementContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.functionNamespace.mysql.SqlInvokedFunctionRowMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SqlInvokedFunctionRecordRowMapper sqlInvokedFunctionRecordRowMapper0 = new SqlInvokedFunctionRecordRowMapper();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null).when(resultSet0).getString(anyString());
      StatementContext statementContext0 = mock(StatementContext.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        sqlInvokedFunctionRecordRowMapper0.map(resultSet0, statementContext0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // argument \"src\" is null
         //
         verifyException("com.fasterxml.jackson.databind.ObjectReader", e);
      }
  }
}
