/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 20 09:57:30 GMT 2021
 */

package com.facebook.presto.functionNamespace;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.functionNamespace.SqlInvokedFunctionNamespaceManagerConfig;
import io.airlift.units.Duration;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SqlInvokedFunctionNamespaceManagerConfig_ESTest extends SqlInvokedFunctionNamespaceManagerConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SqlInvokedFunctionNamespaceManagerConfig sqlInvokedFunctionNamespaceManagerConfig0 = new SqlInvokedFunctionNamespaceManagerConfig();
      SqlInvokedFunctionNamespaceManagerConfig sqlInvokedFunctionNamespaceManagerConfig1 = sqlInvokedFunctionNamespaceManagerConfig0.setSupportedFunctionLanguages("OvWVb");
      assertSame(sqlInvokedFunctionNamespaceManagerConfig1, sqlInvokedFunctionNamespaceManagerConfig0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SqlInvokedFunctionNamespaceManagerConfig sqlInvokedFunctionNamespaceManagerConfig0 = new SqlInvokedFunctionNamespaceManagerConfig();
      SqlInvokedFunctionNamespaceManagerConfig sqlInvokedFunctionNamespaceManagerConfig1 = sqlInvokedFunctionNamespaceManagerConfig0.setFunctionCacheExpiration((Duration) null);
      Duration duration0 = sqlInvokedFunctionNamespaceManagerConfig1.getFunctionCacheExpiration();
      assertNull(duration0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SqlInvokedFunctionNamespaceManagerConfig sqlInvokedFunctionNamespaceManagerConfig0 = new SqlInvokedFunctionNamespaceManagerConfig();
      Duration duration0 = sqlInvokedFunctionNamespaceManagerConfig0.getFunctionCacheExpiration();
      assertEquals(5.0, duration0.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SqlInvokedFunctionNamespaceManagerConfig sqlInvokedFunctionNamespaceManagerConfig0 = new SqlInvokedFunctionNamespaceManagerConfig();
      // Undeclared exception!
      try { 
        sqlInvokedFunctionNamespaceManagerConfig0.setSupportedFunctionLanguages((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SqlInvokedFunctionNamespaceManagerConfig sqlInvokedFunctionNamespaceManagerConfig0 = new SqlInvokedFunctionNamespaceManagerConfig();
      sqlInvokedFunctionNamespaceManagerConfig0.setFunctionInstanceCacheExpiration((Duration) null);
      Duration duration0 = sqlInvokedFunctionNamespaceManagerConfig0.getFunctionInstanceCacheExpiration();
      assertNull(duration0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SqlInvokedFunctionNamespaceManagerConfig sqlInvokedFunctionNamespaceManagerConfig0 = new SqlInvokedFunctionNamespaceManagerConfig();
      Duration duration0 = sqlInvokedFunctionNamespaceManagerConfig0.getTypeCacheExpiration();
      assertEquals(1.0, duration0.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SqlInvokedFunctionNamespaceManagerConfig sqlInvokedFunctionNamespaceManagerConfig0 = new SqlInvokedFunctionNamespaceManagerConfig();
      Duration duration0 = sqlInvokedFunctionNamespaceManagerConfig0.getFunctionInstanceCacheExpiration();
      assertEquals(8.0, duration0.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SqlInvokedFunctionNamespaceManagerConfig sqlInvokedFunctionNamespaceManagerConfig0 = new SqlInvokedFunctionNamespaceManagerConfig();
      sqlInvokedFunctionNamespaceManagerConfig0.setTypeCacheExpiration((Duration) null);
      Duration duration0 = sqlInvokedFunctionNamespaceManagerConfig0.getTypeCacheExpiration();
      assertNull(duration0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SqlInvokedFunctionNamespaceManagerConfig sqlInvokedFunctionNamespaceManagerConfig0 = new SqlInvokedFunctionNamespaceManagerConfig();
      Set<String> set0 = sqlInvokedFunctionNamespaceManagerConfig0.getSupportedFunctionLanguages();
      assertEquals(1, set0.size());
  }
}
