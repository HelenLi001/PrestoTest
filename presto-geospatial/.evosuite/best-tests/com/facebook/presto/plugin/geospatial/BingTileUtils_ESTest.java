/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 09:39:54 GMT 2021
 */

package com.facebook.presto.plugin.geospatial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.esri.core.geometry.Envelope;
import com.esri.core.geometry.Geometry;
import com.esri.core.geometry.GeometryCursor;
import com.esri.core.geometry.Point;
import com.esri.core.geometry.ogc.OGCGeometry;
import com.facebook.presto.plugin.geospatial.BingTile;
import com.facebook.presto.plugin.geospatial.BingTileUtils;
import io.airlift.slice.Slice;
import java.util.List;
import java.util.MissingFormatArgumentException;
import java.util.UnknownFormatConversionException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BingTileUtils_ESTest extends BingTileUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BingTile bingTile0 = BingTileUtils.latitudeLongitudeToTile(16.9319810691266, (-1648.3095), 1);
      Envelope envelope0 = BingTileUtils.tileToEnvelope(bingTile0);
      List<BingTile> list0 = BingTileUtils.findMinimalTileCovering(envelope0, 4);
      assertEquals(81, list0.size());
      assertEquals(85.05112877980659, envelope0.getYMax(), 0.01);
      assertEquals((-90.0), envelope0.getCenterX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BingTileUtils.checkLatitude(85.05112878, (String) null);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BingTileUtils.checkLatitude((-85.05112878), "Address + size is greater than 64 bits");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        BingTileUtils.checkCoordinate(1, 0L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // XY coordinates for a Bing tile at zoom level 0 must be within [0, 1) range
         //
         verifyException("com.facebook.presto.plugin.geospatial.BingTileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BingTileUtils.checkCoordinate(0L, (-569L));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BingTileUtils.checkZoomLevel(0L);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BingTileUtils.checkLongitude((-12.0302423617), "com.facebook.presto.plugin.geospatial.BingTileUtils");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      BingTileUtils.checkCondition(true, "%", objectArray0);
      assertEquals(2, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = BingTileUtils.tileYToLatitude((-797), 1531);
      assertEquals(85.05112877980659, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = BingTileUtils.tileYToLatitude(3538, 1794);
      assertEquals((-85.05112877980659), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Point point0 = BingTileUtils.tileXYToLatitudeLongitude(23, 1, 1);
      assertEquals(0.0, point0.getY(), 0.01);
      assertEquals(180.0, point0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Point point0 = BingTileUtils.tileXYToLatitudeLongitude(1783, 1794, 1794);
      assertEquals(180.0, point0.getX(), 0.01);
      assertEquals((-85.05112877980659), point0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = BingTileUtils.tileXToLongitude(256, (-471));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = BingTileUtils.tileXToLongitude(65547, 65547);
      assertEquals(180.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BingTile bingTile0 = BingTileUtils.latitudeLongitudeToTile(0.0, 0.0, 2);
      Envelope envelope0 = BingTileUtils.tileToEnvelope(bingTile0);
      assertEquals((-33.25663022155592), envelope0.getCenterY(), 0.01);
      assertEquals(45.0, envelope0.getCenterX(), 0.01);
      assertEquals(0.0, envelope0.getYMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BingTile bingTile0 = BingTileUtils.latitudeLongitudeToTile((-1.0), (-1648.3095), 10);
      Envelope envelope0 = BingTileUtils.tileToEnvelope(bingTile0);
      assertEquals((-179.6484375), envelope0.getXMax(), 0.01);
      assertEquals((-1.0546279422759), envelope0.getYMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      long long0 = BingTileUtils.mapSize((-4));
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      long long0 = BingTileUtils.mapSize(1000000);
      assertEquals(256L, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      long long0 = BingTileUtils.mapSize((-1865));
      assertEquals((-9223372036854775808L), long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = BingTileUtils.longitudeToTileX(0.0, 0L);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = BingTileUtils.longitudeToTileX(1794, 1794);
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = BingTileUtils.longitudeToTileX((-3116.574512933448), (-2240L));
      assertEquals((-8), int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = BingTileUtils.latitudeToTileY(0.0, 0L);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = BingTileUtils.latitudeToTileY(0.5, 1978L);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = BingTileUtils.latitudeToTileY(0.0, (-914L));
      assertEquals((-3), int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BingTile bingTile0 = BingTileUtils.latitudeLongitudeToTile(3.141592653589793, 1973.733449197277, 23);
      Envelope envelope0 = BingTileUtils.tileToEnvelope(bingTile0);
      List<BingTile> list0 = BingTileUtils.findMinimalTileCovering(envelope0, 23);
      assertTrue(list0.contains(bingTile0));
      assertEquals(1, list0.size());
      assertEquals(3.141608801185079, envelope0.getCenterY(), 0.01);
      assertEquals(179.99997854232788, envelope0.getCenterX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double double0 = BingTileUtils.clip((-1233.0500629781206), 761.1599, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double double0 = BingTileUtils.clip(1794, 3538, 1794);
      assertEquals(1794.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double double0 = BingTileUtils.clip(1205.578986, (-3116.574512933448), (-3116.574512933448));
      assertEquals((-3116.574512933448), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        BingTileUtils.tileToEnvelope((BingTile) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.plugin.geospatial.BingTileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        BingTileUtils.latitudeLongitudeToTile((-1865), 1325.120130048, 87);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      GeometryCursor geometryCursor0 = mock(GeometryCursor.class, new ViolatedAssumptionAnswer());
      doReturn((Geometry) null).when(geometryCursor0).next();
      OGCGeometry oGCGeometry0 = mock(OGCGeometry.class, new ViolatedAssumptionAnswer());
      doReturn(geometryCursor0).when(oGCGeometry0).getEsriGeometryCursor();
      // Undeclared exception!
      try { 
        BingTileUtils.findMinimalTileCovering(oGCGeometry0, (-3735));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Zoom level must be >= 0
         //
         verifyException("com.facebook.presto.plugin.geospatial.BingTileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Point point0 = BingTileUtils.tileXYToLatitudeLongitude(2, (-1431655764), 2);
      GeometryCursor geometryCursor0 = mock(GeometryCursor.class, new ViolatedAssumptionAnswer());
      doReturn(point0, (Geometry) null).when(geometryCursor0).next();
      OGCGeometry oGCGeometry0 = mock(OGCGeometry.class, new ViolatedAssumptionAnswer());
      doReturn(geometryCursor0).when(oGCGeometry0).getEsriGeometryCursor();
      int int0 = 0;
      BingTileUtils.findMinimalTileCovering(oGCGeometry0, 0);
      String string0 = "ExportToESRIShape";
      BingTileUtils.checkLatitude(int0, string0);
      int int1 = (-3352);
      BingTileUtils.tileXToLongitude(int0, int1);
      double double0 = 1450.78214537105;
      // Undeclared exception!
      try { 
        BingTileUtils.checkLongitude(double0, string0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ExportToESRIShape
         //
         verifyException("com.facebook.presto.plugin.geospatial.BingTileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OGCGeometry oGCGeometry0 = mock(OGCGeometry.class, new ViolatedAssumptionAnswer());
      doReturn((GeometryCursor) null).when(oGCGeometry0).getEsriGeometryCursor();
      // Undeclared exception!
      try { 
        BingTileUtils.findMinimalTileCovering(oGCGeometry0, (-2121));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.geospatial.GeometryUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BingTile bingTile0 = BingTileUtils.latitudeLongitudeToTile(704.0, (-657.501875), 0);
      Envelope envelope0 = BingTileUtils.tileToEnvelope(bingTile0);
      // Undeclared exception!
      BingTileUtils.findMinimalTileCovering(envelope0, 23);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        BingTileUtils.findMinimalTileCovering((Envelope) null, 23);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.plugin.geospatial.BingTileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      GeometryCursor geometryCursor0 = mock(GeometryCursor.class, new ViolatedAssumptionAnswer());
      doReturn((Geometry) null).when(geometryCursor0).next();
      OGCGeometry oGCGeometry0 = mock(OGCGeometry.class, new ViolatedAssumptionAnswer());
      doReturn(geometryCursor0).when(oGCGeometry0).getEsriGeometryCursor();
      // Undeclared exception!
      try { 
        BingTileUtils.findDissolvedTileCovering(oGCGeometry0, (-3549));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Zoom level must be >= 0
         //
         verifyException("com.facebook.presto.plugin.geospatial.BingTileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Random.setNextRandom(1);
      BingTile bingTile0 = BingTileUtils.latitudeLongitudeToTile((-1.0), (-1648.3095), 1);
      Envelope envelope0 = BingTileUtils.tileToEnvelope(bingTile0);
      BingTileUtils.tileToEnvelope(bingTile0);
      BingTileUtils.findMinimalTileCovering(envelope0, 1);
      GeometryCursor geometryCursor0 = mock(GeometryCursor.class, new ViolatedAssumptionAnswer());
      doReturn(envelope0, (Geometry) null).when(geometryCursor0).next();
      OGCGeometry oGCGeometry0 = mock(OGCGeometry.class, new ViolatedAssumptionAnswer());
      doReturn(geometryCursor0, (GeometryCursor) null).when(oGCGeometry0).getEsriGeometryCursor();
      // Undeclared exception!
      try { 
        BingTileUtils.findDissolvedTileCovering(oGCGeometry0, 23);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.geospatial.GeometryUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OGCGeometry oGCGeometry0 = mock(OGCGeometry.class, new ViolatedAssumptionAnswer());
      doReturn((GeometryCursor) null).when(oGCGeometry0).getEsriGeometryCursor();
      // Undeclared exception!
      try { 
        BingTileUtils.findDissolvedTileCovering(oGCGeometry0, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.geospatial.GeometryUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      // Undeclared exception!
      try { 
        BingTileUtils.checkQuadKey((Slice) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.plugin.geospatial.BingTileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      // Undeclared exception!
      try { 
        BingTileUtils.checkLongitude(321.64934027, ";,yR:%]=/'g-");
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = ']'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      // Undeclared exception!
      try { 
        BingTileUtils.checkLongitude((-833.7661629), "Latitude span for the geometry must be in [%.2f, %.2f] range");
        fail("Expecting exception: MissingFormatArgumentException");
      
      } catch(MissingFormatArgumentException e) {
         //
         // Format specifier '%.2f'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      // Undeclared exception!
      try { 
        BingTileUtils.checkLongitude((-534.6671499), (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      // Undeclared exception!
      try { 
        BingTileUtils.checkLatitude(321.64934027, " %6d %5d %");
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = '%'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      try { 
        BingTileUtils.checkLatitude((-771.05732), "[%s] %s: (%s %s)");
        fail("Expecting exception: MissingFormatArgumentException");
      
      } catch(MissingFormatArgumentException e) {
         //
         // Format specifier '%s'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      // Undeclared exception!
      try { 
        BingTileUtils.checkLatitude(846.92059117789, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      // Undeclared exception!
      try { 
        BingTileUtils.checkCondition(false, "T6haYf(zVUn", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // T6haYf(zVUn
         //
         verifyException("com.facebook.presto.plugin.geospatial.BingTileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      // Undeclared exception!
      try { 
        BingTileUtils.checkCondition(false, "IfeFD%52=s5<v<", objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = '5'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      // Undeclared exception!
      try { 
        BingTileUtils.checkCondition(false, (String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      double double0 = BingTileUtils.tileYToLatitude(2, 2);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      GeometryCursor geometryCursor0 = mock(GeometryCursor.class, new ViolatedAssumptionAnswer());
      doReturn((Geometry) null).when(geometryCursor0).next();
      OGCGeometry oGCGeometry0 = mock(OGCGeometry.class, new ViolatedAssumptionAnswer());
      doReturn(geometryCursor0).when(oGCGeometry0).getEsriGeometryCursor();
      List<BingTile> list0 = BingTileUtils.findMinimalTileCovering(oGCGeometry0, 0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      BingTile bingTile0 = BingTileUtils.latitudeLongitudeToTile(0.0, 0.0, 0);
      Envelope envelope0 = BingTileUtils.tileToEnvelope(bingTile0);
      List<BingTile> list0 = BingTileUtils.findMinimalTileCovering(envelope0, 0);
      assertEquals((-180.0), envelope0.getXMin(), 0.01);
      assertEquals(0.0, envelope0.getCenterX(), 0.01);
      assertTrue(list0.contains(bingTile0));
      assertEquals(85.05112877980659, envelope0.getYMax(), 0.01);
      assertEquals(170.10225755961318, envelope0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      // Undeclared exception!
      try { 
        BingTileUtils.checkLatitude(4736.0, "com.esri.core.geometry.OperatorSymmetricDifferenceLocal");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.esri.core.geometry.OperatorSymmetricDifferenceLocal
         //
         verifyException("com.facebook.presto.plugin.geospatial.BingTileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      // Undeclared exception!
      try { 
        BingTileUtils.checkCoordinate(1551L, (-2240L));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // XY coordinates for a Bing tile at zoom level -2240 must be within [0, 1) range
         //
         verifyException("com.facebook.presto.plugin.geospatial.BingTileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      // Undeclared exception!
      try { 
        BingTileUtils.checkCoordinate((-2025L), (-2025L));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // XY coordinates for a Bing tile at zoom level -2025 must be within [0, 8388608) range
         //
         verifyException("com.facebook.presto.plugin.geospatial.BingTileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      // Undeclared exception!
      try { 
        BingTileUtils.checkZoomLevel(40L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Zoom level must be <= 23
         //
         verifyException("com.facebook.presto.plugin.geospatial.BingTileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      BingTile bingTile0 = BingTileUtils.latitudeLongitudeToTile((-1648.3095), (-1648.3095), 1);
      Envelope envelope0 = BingTileUtils.tileToEnvelope(bingTile0);
      // Undeclared exception!
      try { 
        BingTileUtils.findMinimalTileCovering(envelope0, 23);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The zoom level is too high or the geometry is too large to compute a set of covering Bing tiles. Please use a lower zoom level, or tile only a section of the geometry.
         //
         verifyException("com.facebook.presto.plugin.geospatial.BingTileUtils", e);
      }
  }
}
