/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 20 21:54:38 GMT 2021
 */

package com.facebook.presto.hive.authentication;

import org.junit.Test;
import static org.junit.Assert.*;
import com.facebook.presto.hive.authentication.NoHiveMetastoreAuthentication;
import java.io.InputStream;
import java.util.Optional;
import org.apache.thrift.transport.TIOStreamTransport;
import org.apache.thrift.transport.TMemoryInputTransport;
import org.apache.thrift.transport.TStandardFile;
import org.apache.thrift.transport.TTransport;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NoHiveMetastoreAuthentication_ESTest extends NoHiveMetastoreAuthentication_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NoHiveMetastoreAuthentication noHiveMetastoreAuthentication0 = new NoHiveMetastoreAuthentication();
      TTransport tTransport0 = noHiveMetastoreAuthentication0.authenticate((TTransport) null, "`D1ik>wHKT", (Optional<String>) null);
      assertNull(tTransport0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NoHiveMetastoreAuthentication noHiveMetastoreAuthentication0 = new NoHiveMetastoreAuthentication();
      byte[] byteArray0 = new byte[5];
      TMemoryInputTransport tMemoryInputTransport0 = new TMemoryInputTransport(byteArray0, 1773, 207);
      TTransport tTransport0 = noHiveMetastoreAuthentication0.authenticate(tMemoryInputTransport0, "", (Optional<String>) null);
      assertSame(tTransport0, tMemoryInputTransport0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NoHiveMetastoreAuthentication noHiveMetastoreAuthentication0 = new NoHiveMetastoreAuthentication();
      byte[] byteArray0 = new byte[1];
      TMemoryInputTransport tMemoryInputTransport0 = new TMemoryInputTransport(byteArray0, (byte) (-1), 0);
      TTransport tTransport0 = noHiveMetastoreAuthentication0.authenticate(tMemoryInputTransport0, "0_", (Optional<String>) null);
      assertSame(tMemoryInputTransport0, tTransport0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NoHiveMetastoreAuthentication noHiveMetastoreAuthentication0 = new NoHiveMetastoreAuthentication();
      TStandardFile tStandardFile0 = new TStandardFile("");
      InputStream inputStream0 = tStandardFile0.getInputStream();
      TIOStreamTransport tIOStreamTransport0 = new TIOStreamTransport(inputStream0);
      TTransport tTransport0 = noHiveMetastoreAuthentication0.authenticate(tIOStreamTransport0, "", (Optional<String>) null);
      assertSame(tIOStreamTransport0, tTransport0);
  }
}
