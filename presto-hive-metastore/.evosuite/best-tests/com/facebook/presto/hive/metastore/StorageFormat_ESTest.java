/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 20 21:25:32 GMT 2021
 */

package com.facebook.presto.hive.metastore;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.hive.HiveStorageFormat;
import com.facebook.presto.hive.metastore.StorageFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StorageFormat_ESTest extends StorageFormat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StorageFormat storageFormat0 = StorageFormat.VIEW_STORAGE_FORMAT;
      String string0 = storageFormat0.getSerDeNullable();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StorageFormat storageFormat0 = StorageFormat.createNullable("", "", "");
      String string0 = storageFormat0.getSerDeNullable();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StorageFormat storageFormat0 = StorageFormat.create("", "", "");
      String string0 = storageFormat0.getSerDe();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StorageFormat storageFormat0 = StorageFormat.VIEW_STORAGE_FORMAT;
      String string0 = storageFormat0.getOutputFormatNullable();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StorageFormat storageFormat0 = StorageFormat.createNullable("", "", "");
      String string0 = storageFormat0.getOutputFormatNullable();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StorageFormat storageFormat0 = StorageFormat.create("7}4`~8?ZH=G-", "X1=sJ]XF>q$n(W?%a", "");
      String string0 = storageFormat0.getOutputFormat();
      assertEquals("", string0);
      assertEquals("X1=sJ]XF>q$n(W?%a", storageFormat0.getInputFormatNullable());
      assertEquals("7}4`~8?ZH=G-", storageFormat0.getSerDeNullable());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StorageFormat storageFormat0 = StorageFormat.VIEW_STORAGE_FORMAT;
      String string0 = storageFormat0.getInputFormatNullable();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StorageFormat storageFormat0 = StorageFormat.createNullable("", "", "");
      String string0 = storageFormat0.getInputFormatNullable();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StorageFormat storageFormat0 = StorageFormat.createNullable("R4!>iF9|", "", "8F");
      String string0 = storageFormat0.getInputFormat();
      assertEquals("", string0);
      assertEquals("R4!>iF9|", storageFormat0.getSerDeNullable());
      assertEquals("8F", storageFormat0.getOutputFormatNullable());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        StorageFormat.fromHiveStorageFormat((HiveStorageFormat) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.hive.metastore.StorageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        StorageFormat.create((String) null, (String) null, "G!Qo6HxH");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // serDe is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HiveStorageFormat hiveStorageFormat0 = HiveStorageFormat.CSV;
      StorageFormat storageFormat0 = StorageFormat.fromHiveStorageFormat(hiveStorageFormat0);
      StorageFormat storageFormat1 = StorageFormat.fromHiveStorageFormat(hiveStorageFormat0);
      boolean boolean0 = storageFormat0.equals(storageFormat1);
      assertEquals("org.apache.hadoop.mapred.TextInputFormat", storageFormat1.getInputFormatNullable());
      assertEquals("org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat", storageFormat1.getOutputFormatNullable());
      assertEquals("org.apache.hadoop.hive.serde2.OpenCSVSerde", storageFormat1.getSerDeNullable());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StorageFormat storageFormat0 = StorageFormat.createNullable("Eliminating ORC stripe-", "Eliminating ORC stripe-", "Eliminating ORC stripe-");
      StorageFormat storageFormat1 = StorageFormat.createNullable("Eliminating ORC stripe-", "Eliminating ORC stripe-", "p6e(R;I-:");
      boolean boolean0 = storageFormat0.equals(storageFormat1);
      assertEquals("Eliminating ORC stripe-", storageFormat1.getInputFormatNullable());
      assertEquals("Eliminating ORC stripe-", storageFormat1.getSerDeNullable());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HiveStorageFormat hiveStorageFormat0 = HiveStorageFormat.ORC;
      StorageFormat storageFormat0 = StorageFormat.fromHiveStorageFormat(hiveStorageFormat0);
      StorageFormat storageFormat1 = StorageFormat.create("G\"78vV&G hp)X{J`8)", "8F", "8F");
      boolean boolean0 = storageFormat1.equals(storageFormat0);
      assertEquals("G\"78vV&G hp)X{J`8)", storageFormat1.getSerDeNullable());
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcInputFormat", storageFormat0.getInputFormatNullable());
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat", storageFormat0.getOutputFormatNullable());
      assertEquals("8F", storageFormat1.getOutputFormatNullable());
      assertEquals("8F", storageFormat1.getInputFormatNullable());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HiveStorageFormat hiveStorageFormat0 = HiveStorageFormat.ORC;
      StorageFormat storageFormat0 = StorageFormat.fromHiveStorageFormat(hiveStorageFormat0);
      boolean boolean0 = storageFormat0.equals((Object) null);
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcSerde", storageFormat0.getSerDeNullable());
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat", storageFormat0.getOutputFormatNullable());
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcInputFormat", storageFormat0.getInputFormatNullable());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StorageFormat storageFormat0 = StorageFormat.VIEW_STORAGE_FORMAT;
      boolean boolean0 = storageFormat0.VIEW_STORAGE_FORMAT.equals(storageFormat0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HiveStorageFormat hiveStorageFormat0 = HiveStorageFormat.ORC;
      StorageFormat storageFormat0 = StorageFormat.fromHiveStorageFormat(hiveStorageFormat0);
      boolean boolean0 = storageFormat0.VIEW_STORAGE_FORMAT.equals(hiveStorageFormat0);
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat", storageFormat0.getOutputFormatNullable());
      assertFalse(boolean0);
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcInputFormat", storageFormat0.getInputFormatNullable());
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcSerde", storageFormat0.getSerDeNullable());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StorageFormat storageFormat0 = StorageFormat.createNullable("", "", "");
      // Undeclared exception!
      try { 
        storageFormat0.VIEW_STORAGE_FORMAT.getOutputFormat();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // OutputFormat is not present in StorageFormat
         //
         verifyException("com.facebook.presto.hive.metastore.StorageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HiveStorageFormat hiveStorageFormat0 = HiveStorageFormat.ORC;
      StorageFormat storageFormat0 = StorageFormat.fromHiveStorageFormat(hiveStorageFormat0);
      String string0 = storageFormat0.getOutputFormat();
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat", string0);
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcInputFormat", storageFormat0.getInputFormatNullable());
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcSerde", storageFormat0.getSerDeNullable());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StorageFormat storageFormat0 = StorageFormat.VIEW_STORAGE_FORMAT;
      // Undeclared exception!
      try { 
        storageFormat0.getInputFormat();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // InputFormat is not present in StorageFormat
         //
         verifyException("com.facebook.presto.hive.metastore.StorageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HiveStorageFormat hiveStorageFormat0 = HiveStorageFormat.ORC;
      StorageFormat storageFormat0 = StorageFormat.fromHiveStorageFormat(hiveStorageFormat0);
      String string0 = storageFormat0.getInputFormat();
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat", storageFormat0.getOutputFormatNullable());
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcInputFormat", string0);
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcSerde", storageFormat0.getSerDeNullable());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StorageFormat storageFormat0 = StorageFormat.create("", "Y{!g30_", "Y{!g30_");
      // Undeclared exception!
      try { 
        storageFormat0.VIEW_STORAGE_FORMAT.getSerDe();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SerDe is not present in StorageFormat
         //
         verifyException("com.facebook.presto.hive.metastore.StorageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HiveStorageFormat hiveStorageFormat0 = HiveStorageFormat.SEQUENCEFILE;
      StorageFormat storageFormat0 = StorageFormat.fromHiveStorageFormat(hiveStorageFormat0);
      String string0 = storageFormat0.getSerDe();
      assertEquals("org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat", storageFormat0.getOutputFormatNullable());
      assertEquals("org.apache.hadoop.mapred.SequenceFileInputFormat", storageFormat0.getInputFormatNullable());
      assertEquals("org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StorageFormat storageFormat0 = StorageFormat.create("G\"78vV&G hp)X{J`8)", "8F", "8F");
      StorageFormat storageFormat1 = StorageFormat.createNullable("G\"78vV&G hp)X{J`8)", "org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat", "nm=W9.\"E");
      boolean boolean0 = storageFormat0.equals(storageFormat1);
      assertFalse(boolean0);
      assertEquals("G\"78vV&G hp)X{J`8)", storageFormat0.getSerDeNullable());
      assertEquals("G\"78vV&G hp)X{J`8)", storageFormat1.getSerDeNullable());
      assertEquals("8F", storageFormat0.getInputFormatNullable());
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat", storageFormat1.getInputFormatNullable());
      assertEquals("8F", storageFormat0.getOutputFormatNullable());
      assertEquals("nm=W9.\"E", storageFormat1.getOutputFormatNullable());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HiveStorageFormat hiveStorageFormat0 = HiveStorageFormat.ORC;
      StorageFormat storageFormat0 = StorageFormat.fromHiveStorageFormat(hiveStorageFormat0);
      String string0 = storageFormat0.getSerDeNullable();
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcInputFormat", storageFormat0.getInputFormatNullable());
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcSerde", string0);
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat", storageFormat0.getOutputFormatNullable());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HiveStorageFormat hiveStorageFormat0 = HiveStorageFormat.ORC;
      StorageFormat storageFormat0 = StorageFormat.fromHiveStorageFormat(hiveStorageFormat0);
      String string0 = storageFormat0.toString();
      assertEquals("StorageFormat{serDe=org.apache.hadoop.hive.ql.io.orc.OrcSerde, inputFormat=org.apache.hadoop.hive.ql.io.orc.OrcInputFormat, outputFormat=org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat}", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HiveStorageFormat hiveStorageFormat0 = HiveStorageFormat.ORC;
      StorageFormat storageFormat0 = StorageFormat.fromHiveStorageFormat(hiveStorageFormat0);
      String string0 = storageFormat0.getInputFormatNullable();
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcSerde", storageFormat0.getSerDeNullable());
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcInputFormat", string0);
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat", storageFormat0.getOutputFormatNullable());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HiveStorageFormat hiveStorageFormat0 = HiveStorageFormat.ORC;
      StorageFormat storageFormat0 = StorageFormat.fromHiveStorageFormat(hiveStorageFormat0);
      storageFormat0.hashCode();
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat", storageFormat0.getOutputFormatNullable());
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcSerde", storageFormat0.getSerDeNullable());
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcInputFormat", storageFormat0.getInputFormatNullable());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HiveStorageFormat hiveStorageFormat0 = HiveStorageFormat.ORC;
      StorageFormat storageFormat0 = StorageFormat.fromHiveStorageFormat(hiveStorageFormat0);
      String string0 = storageFormat0.getOutputFormatNullable();
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcSerde", storageFormat0.getSerDeNullable());
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcInputFormat", storageFormat0.getInputFormatNullable());
      assertEquals("org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat", string0);
  }
}
