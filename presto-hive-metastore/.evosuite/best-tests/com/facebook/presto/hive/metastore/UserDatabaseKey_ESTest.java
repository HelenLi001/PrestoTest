/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 20 21:38:03 GMT 2021
 */

package com.facebook.presto.hive.metastore;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.hive.metastore.UserDatabaseKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UserDatabaseKey_ESTest extends UserDatabaseKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UserDatabaseKey userDatabaseKey0 = new UserDatabaseKey("", "");
      String string0 = userDatabaseKey0.getUser();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UserDatabaseKey userDatabaseKey0 = new UserDatabaseKey("database is null", "");
      String string0 = userDatabaseKey0.getDatabase();
      assertEquals("", string0);
      assertEquals("database is null", userDatabaseKey0.getUser());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UserDatabaseKey userDatabaseKey0 = null;
      try {
        userDatabaseKey0 = new UserDatabaseKey("DEFAULT", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // database is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UserDatabaseKey userDatabaseKey0 = new UserDatabaseKey("LvLY;xls);?-", "LvLY;xls);?-");
      UserDatabaseKey userDatabaseKey1 = new UserDatabaseKey("LvLY;xls);?-", "LvLY;xls);?-");
      boolean boolean0 = userDatabaseKey0.equals(userDatabaseKey1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UserDatabaseKey userDatabaseKey0 = new UserDatabaseKey("\"sVs0brNs", "\"sVs0brNs");
      UserDatabaseKey userDatabaseKey1 = new UserDatabaseKey("UserDatabaseKey{principalName=\"sVs0brNs, database=\"sVs0brNs}", "UserDatabaseKey{principalName=\"sVs0brNs, database=\"sVs0brNs}");
      boolean boolean0 = userDatabaseKey0.equals(userDatabaseKey1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UserDatabaseKey userDatabaseKey0 = new UserDatabaseKey("\"sVs0brNs", "\"sVs0brNs");
      boolean boolean0 = userDatabaseKey0.equals("\"sVs0brNs");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UserDatabaseKey userDatabaseKey0 = new UserDatabaseKey("\"sVs0brNs", "\"sVs0brNs");
      boolean boolean0 = userDatabaseKey0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UserDatabaseKey userDatabaseKey0 = new UserDatabaseKey("LvLY;xls);?-", "LvLY;xls);?-");
      boolean boolean0 = userDatabaseKey0.equals(userDatabaseKey0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UserDatabaseKey userDatabaseKey0 = new UserDatabaseKey("<XP8kv}6+']t!", "<XP8kv}6+']t!");
      UserDatabaseKey userDatabaseKey1 = new UserDatabaseKey("<XP8kv}6+']t!", "DEFAULT");
      boolean boolean0 = userDatabaseKey0.equals(userDatabaseKey1);
      assertEquals("<XP8kv}6+']t!", userDatabaseKey1.getUser());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UserDatabaseKey userDatabaseKey0 = new UserDatabaseKey("\"sVs0brNs", "\"sVs0brNs");
      String string0 = userDatabaseKey0.getDatabase();
      assertEquals("\"sVs0brNs", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UserDatabaseKey userDatabaseKey0 = new UserDatabaseKey("<XP8kv}6+']t!", "<XP8kv}6+']t!");
      String string0 = userDatabaseKey0.toString();
      assertEquals("UserDatabaseKey{principalName=<XP8kv}6+']t!, database=<XP8kv}6+']t!}", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UserDatabaseKey userDatabaseKey0 = new UserDatabaseKey("<XP8kv}6+']t!", "<XP8kv}6+']t!");
      userDatabaseKey0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UserDatabaseKey userDatabaseKey0 = new UserDatabaseKey("<XP8kv}6+']t!", "<XP8kv}6+']t!");
      String string0 = userDatabaseKey0.getUser();
      assertEquals("<XP8kv}6+']t!", string0);
  }
}
