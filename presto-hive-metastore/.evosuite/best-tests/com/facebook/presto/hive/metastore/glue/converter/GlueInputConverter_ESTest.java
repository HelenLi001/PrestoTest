/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 20 21:34:29 GMT 2021
 */

package com.facebook.presto.hive.metastore.glue.converter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.amazonaws.services.glue.model.StorageDescriptor;
import com.amazonaws.services.glue.model.Table;
import com.amazonaws.services.glue.model.TableInput;
import com.facebook.presto.hive.metastore.Column;
import com.facebook.presto.hive.metastore.Database;
import com.facebook.presto.hive.metastore.Partition;
import com.facebook.presto.hive.metastore.PartitionWithStatistics;
import com.facebook.presto.hive.metastore.PrestoTableType;
import com.facebook.presto.hive.metastore.Storage;
import com.facebook.presto.hive.metastore.glue.converter.GlueInputConverter;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GlueInputConverter_ESTest extends GlueInputConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        GlueInputConverter.toTableInput((Table) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.hive.metastore.glue.converter.GlueInputConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        GlueInputConverter.convertTable((com.facebook.presto.hive.metastore.Table) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.hive.metastore.glue.converter.GlueInputConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PartitionWithStatistics partitionWithStatistics0 = mock(PartitionWithStatistics.class, new ViolatedAssumptionAnswer());
      doReturn((Partition) null).when(partitionWithStatistics0).getPartition();
      // Undeclared exception!
      try { 
        GlueInputConverter.convertPartition(partitionWithStatistics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.hive.metastore.glue.converter.GlueInputConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Table table0 = mock(Table.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(table0).getName();
      doReturn((String) null).when(table0).getOwner();
      doReturn((Map) null).when(table0).getParameters();
      doReturn((List) null).when(table0).getPartitionKeys();
      doReturn((StorageDescriptor) null).when(table0).getStorageDescriptor();
      doReturn((String) null).when(table0).getTableType();
      doReturn((String) null).when(table0).getViewExpandedText();
      doReturn((String) null).when(table0).getViewOriginalText();
      TableInput tableInput0 = GlueInputConverter.toTableInput(table0);
      assertNull(tableInput0.getTableType());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        GlueInputConverter.convertColumn((Column) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.hive.metastore.glue.converter.GlueInputConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      com.facebook.presto.hive.metastore.Table table0 = mock(com.facebook.presto.hive.metastore.Table.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(table0).getOwner();
      doReturn((String) null).when(table0).getTableName();
      doReturn((PrestoTableType) null, (PrestoTableType) null).when(table0).getTableType();
      // Undeclared exception!
      try { 
        GlueInputConverter.convertTable(table0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid table type: null
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Database database0 = mock(Database.class, new ViolatedAssumptionAnswer());
      doReturn((Optional) null).when(database0).getComment();
      doReturn((String) null).when(database0).getDatabaseName();
      doReturn((Map) null).when(database0).getParameters();
      // Undeclared exception!
      try { 
        GlueInputConverter.convertDatabase(database0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.hive.metastore.glue.converter.GlueInputConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Partition partition0 = mock(Partition.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(partition0).getColumns();
      doReturn((Storage) null).when(partition0).getStorage();
      doReturn((List) null).when(partition0).getValues();
      // Undeclared exception!
      try { 
        GlueInputConverter.convertPartition(partition0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.hive.metastore.glue.converter.GlueInputConverter", e);
      }
  }
}
