/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 20 21:22:15 GMT 2021
 */

package com.facebook.presto.hive.metastore.thrift;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.hive.metastore.thrift.ThriftHiveMetastoreClient;
import java.util.List;
import org.apache.hadoop.hive.metastore.api.ColumnStatisticsObj;
import org.apache.hadoop.hive.metastore.api.Database;
import org.apache.hadoop.hive.metastore.api.HiveObjectRef;
import org.apache.hadoop.hive.metastore.api.Partition;
import org.apache.hadoop.hive.metastore.api.PrincipalType;
import org.apache.hadoop.hive.metastore.api.PrivilegeBag;
import org.apache.hadoop.hive.metastore.api.Table;
import org.apache.thrift.protocol.TProtocol;
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.transport.TTransport;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ThriftHiveMetastoreClient_ESTest extends ThriftHiveMetastoreClient_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      TTransport tTransport1 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient1 = new ThriftHiveMetastoreClient(tTransport1);
      String string0 = "AY";
      String string1 = "tbl_types";
      try { 
        thriftHiveMetastoreClient1.setPartitionColumnStatistics("GrantRevokeResponse missing success field", "AY", "tx/", (List<ColumnStatisticsObj>) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field 'statsObj' is unset! Struct:ColumnStatistics(statsDesc:ColumnStatisticsDesc(isTblLevel:false, dbName:GrantRevokeResponse missing success field, tableName:AY, partName:tx/), statsObj:null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ColumnStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)98;
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn(1).when(tTransport0).getBufferPosition();
      doReturn(0, 3245).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "m;B.jhipCz+/";
      PrincipalType principalType0 = PrincipalType.USER;
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.listRoles("m;B.jhipCz+/", principalType0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      try { 
        thriftHiveMetastoreClient0.dropPartition("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_tables_args", (String) null, (List<String>) null, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // drop_partition failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      String string0 = "sY'VZt\\~c7T<b";
      PrincipalType principalType0 = PrincipalType.GROUP;
      HiveObjectRef hiveObjectRef0 = mock(HiveObjectRef.class, new ViolatedAssumptionAnswer());
      String string1 = null;
      PrivilegeBag privilegeBag0 = mock(PrivilegeBag.class, new ViolatedAssumptionAnswer());
      Class<IScheme> class0 = IScheme.class;
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(tProtocol0).getScheme();
      doReturn(tTransport0).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.alterTable("", "", (Table) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$alter_table_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte) (-1);
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn((int)(byte)56).when(tTransport0).getBufferPosition();
      doReturn((-1440), (-1440), 87).when(tTransport0).getBytesRemainingInBuffer();
      doReturn((-1440), 0, 1172).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "(O|E!'$69";
      TTransport tTransport1 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      PrivilegeBag privilegeBag0 = mock(PrivilegeBag.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.grantPrivileges(privilegeBag0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 56
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-6);
      byteArray0[1] = (byte)0;
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn((int)(byte)0).when(tTransport0).getBufferPosition();
      doReturn((-1440), (-1440), 87).when(tTransport0).getBytesRemainingInBuffer();
      doReturn((-1440), 0, 1172).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.dropDatabase("revoke_privileges", true, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      TTransport tTransport1 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport1);
      String string0 = "[4~m";
      try { 
        thriftHiveMetastoreClient0.setPartitionColumnStatistics("!7%tEK*Y'8{uX1T3S'y", "[4~m", "!7%tEK*Y'8{uX1T3S'y", (List<ColumnStatisticsObj>) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field 'statsObj' is unset! Struct:ColumnStatistics(statsDesc:ColumnStatisticsDesc(isTblLevel:false, dbName:!7%tEK*Y'8{uX1T3S'y, tableName:[4~m, partName:!7%tEK*Y'8{uX1T3S'y), statsObj:null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ColumnStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn(87).when(tTransport0).getBufferPosition();
      doReturn((-1440), (-1440), 87).when(tTransport0).getBytesRemainingInBuffer();
      doReturn((-1440), 0, 1172).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      PrincipalType principalType0 = PrincipalType.ROLE;
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.listRoleGrants("", principalType0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 87
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)98;
      byteArray0[1] = (byte) (-102);
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn((-2639)).when(tTransport0).getBufferPosition();
      doReturn(14).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "";
      String string1 = "get_principals_in_role failed: unknown result";
      PrincipalType principalType0 = PrincipalType.USER;
      String string2 = "\\V&E^";
      String string3 = "U+lNK$^>jcW?y16Eq0";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getPartitionNamesFiltered("U+lNK$^>jcW?y16Eq0", "U+lNK$^>jcW?y16Eq0", (List<String>) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2639
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Class<IScheme> class0 = IScheme.class;
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "add_token";
      String string1 = "P3+W";
      String string2 = null;
      PrincipalType principalType0 = PrincipalType.GROUP;
      String string3 = "\"^[$K|T*}qc";
      String string4 = "";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.setTableColumnStatistics("", (String) null, (List<ColumnStatisticsObj>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$update_table_column_statistics_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      PrivilegeBag privilegeBag0 = mock(PrivilegeBag.class, new ViolatedAssumptionAnswer());
      String string0 = "";
      Class<IScheme> class0 = IScheme.class;
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(tProtocol0).getScheme();
      doReturn(tTransport0).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.createDatabase((Database) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_database_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-49);
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn(0).when(tTransport0).getBufferPosition();
      doReturn(256).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      PrivilegeBag privilegeBag0 = mock(PrivilegeBag.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.revokePrivileges(privilegeBag0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte)14;
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn((int)(byte)0).when(tTransport0).getBufferPosition();
      doReturn(140).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.dropRole((String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte)115;
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn(1024).when(tTransport0).getBufferPosition();
      doReturn(14).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "";
      String string1 = "GrantRevokeResponse missing success field";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.deleteTableColumnStatistics("?I_", "?I_", "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1024
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)108;
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      try { 
        thriftHiveMetastoreClient0.alterPartition("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$alter_function_args", "org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$alter_function_args", (Partition) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // alter_partition failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "";
      String string1 = "GrantRevokeResponse missing success field";
      try { 
        thriftHiveMetastoreClient0.addPartitions((List<Partition>) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // add_partitions failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      String string0 = "sY'VZt\\~c7T<b";
      HiveObjectRef hiveObjectRef0 = mock(HiveObjectRef.class, new ViolatedAssumptionAnswer());
      String string1 = null;
      PrivilegeBag privilegeBag0 = mock(PrivilegeBag.class, new ViolatedAssumptionAnswer());
      Class<IScheme> class0 = IScheme.class;
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(tProtocol0).getScheme();
      doReturn(tTransport0).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string2 = "transport is null";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.alterPartition("Iw1()D|YA!~S", "", (Partition) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$alter_partition_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)87;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)34;
      byteArray0[3] = (byte)27;
      byteArray0[4] = (byte)74;
      byteArray0[5] = (byte)104;
      byteArray0[6] = (byte)99;
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn(0).when(tTransport0).getBufferPosition();
      doReturn(140).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "{}: Start message handled";
      // Undeclared exception!
      thriftHiveMetastoreClient0.getTable("{}: Start message handled", "{}: Start message handled");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte) (-102);
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn(1296).when(tTransport0).getBufferPosition();
      doReturn(14).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "";
      String string1 = "GrantRevokeResponse missing success field";
      PrincipalType principalType0 = PrincipalType.USER;
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.setUGI("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1296
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte) (-102);
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn(1296).when(tTransport0).getBufferPosition();
      doReturn(14).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "";
      String string1 = "GrantRevokeResponse missing success field";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.alterDatabase("GrantRevokeResponse missing success field", (Database) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1296
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte) (-102);
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn(1296).when(tTransport0).getBufferPosition();
      doReturn(14).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getAllTables("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1296
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn(140).when(tTransport0).getBufferPosition();
      doReturn(140).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      PrincipalType principalType0 = PrincipalType.ROLE;
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.grantRole("B-P", "B-P", principalType0, "", principalType0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 140
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-40);
      byteArray0[1] = (byte)94;
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn((int)(byte)94).when(tTransport0).getBufferPosition();
      doReturn(14).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getPartition("", (String) null, (List<String>) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 94
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)84;
      byteArray0[1] = (byte) (-36);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-88);
      byteArray0[4] = (byte)92;
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn((int)(byte)0).when(tTransport0).getBufferPosition();
      doReturn(109).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "nr";
      String string1 = "getStatus failed: unknown result";
      // Undeclared exception!
      thriftHiveMetastoreClient0.getFields("nr", "");
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn(0).when(tTransport0).getBufferPosition();
      doReturn(0, 339).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(339, (-124)).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      PrincipalType principalType0 = PrincipalType.ROLE;
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.revokeRole("~S3D1PADLzhpq", "", principalType0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HiveObjectRef hiveObjectRef0 = mock(HiveObjectRef.class, new ViolatedAssumptionAnswer());
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      try { 
        thriftHiveMetastoreClient0.getPartitionColumnStatistics("com.google.common.collect.UnmodifiableIterator", "", (List<String>) null, (List<String>) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field 'colNames' is unset! Struct:PartitionsStatsRequest(dbName:com.google.common.collect.UnmodifiableIterator, tblName:, colNames:null, partNames:null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.PartitionsStatsRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn((byte[]) null).when(tTransport0).getBuffer();
      doReturn(0).when(tTransport0).getBufferPosition();
      doReturn(2567).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "transport is null";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.dropPartition("", "g{", (List<String>) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, (-129)).when(tTransport0).getBytesRemainingInBuffer();
      doReturn((-129), 6, 0, 6).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "m;B.jhipCz+/";
      try { 
        thriftHiveMetastoreClient0.createTable((Table) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // create_table failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-17);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)62;
      byteArray0[4] = (byte)59;
      byteArray0[5] = (byte)47;
      byteArray0[6] = (byte)0;
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn((-1069)).when(tTransport0).getBufferPosition();
      doReturn(109).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "nr";
      String string1 = "getStatus failed: unknown result";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getFields("nr", "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1069
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-56);
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn(0).when(tTransport0).getBufferPosition();
      doReturn(0, 339, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(339, (-124), 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = ";sE";
      PrincipalType principalType0 = PrincipalType.GROUP;
      HiveObjectRef hiveObjectRef0 = mock(HiveObjectRef.class, new ViolatedAssumptionAnswer());
      try { 
        thriftHiveMetastoreClient0.listPrivileges(";sE", principalType0, hiveObjectRef0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // list_privileges failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn((-395)).when(tTransport0).getBufferPosition();
      doReturn(14).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getRoleNames();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -395
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte) (-102);
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn(1296).when(tTransport0).getBufferPosition();
      doReturn(14).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.createRole("GrantRevokeResponse missing success field", "GrantRevokeResponse missing success field");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1296
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn((-405), (-1), (-405)).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(2, 2, (-405), (-405)).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "tr'a>\\F2baL#0";
      PrincipalType principalType0 = PrincipalType.USER;
      try { 
        thriftHiveMetastoreClient0.createDatabase((Database) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // create_database failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-40);
      byteArray0[1] = (byte)94;
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn((int)(byte)94).when(tTransport0).getBufferPosition();
      doReturn(14).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getDatabase("hFqC;");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 94
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn((-3795)).when(tTransport0).getBufferPosition();
      doReturn(14).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "{[Xz%|,>tW";
      String string1 = null;
      PrincipalType principalType0 = PrincipalType.GROUP;
      thriftHiveMetastoreClient0.close();
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getAllDatabases();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3795
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-121);
      byteArray0[1] = (byte) (-116);
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.alterDatabase("VZomv\"_^zsD\"'|M&d0", (Database) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$alter_database_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn((byte[]) null).when(tTransport0).getBuffer();
      doReturn(0).when(tTransport0).getBufferPosition();
      doReturn(1870).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "tr'a>\\F2baL#0";
      PrincipalType principalType0 = PrincipalType.USER;
      String string1 = "";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.addPartitions((List<Partition>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn((-1712)).when(tTransport0).getBufferPosition();
      doReturn(14).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getTableNamesByFilter("S}r", (String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1712
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn((byte[]) null).when(tTransport0).getBuffer();
      doReturn(0).when(tTransport0).getBufferPosition();
      doReturn((-126), 20).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(20, (-126)).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "nr";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getPartitionNamesFiltered("kr{M", "kr{M", (List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Class<IScheme> class0 = IScheme.class;
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(tProtocol0).getScheme();
      doReturn(tTransport0).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "bO=#G) T";
      String string1 = "drop_table_args(";
      String string2 = "";
      String string3 = "GrantRevokeResponse missing success field";
      PrincipalType principalType0 = PrincipalType.ROLE;
      boolean boolean0 = true;
      String string4 = "W";
      List<String> list0 = null;
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getPartition("", "com.facebook.presto.hive.metastore.thrift.ThriftHiveMetastoreClient", (List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_partition_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn(1258).when(tTransport0).getBufferPosition();
      doReturn(796).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "set_ugi_result(";
      String string1 = "";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.deletePartitionColumnStatistics("set_ugi_result(", "set_ugi_result(", "", "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1258
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-120);
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn(3091).when(tTransport0).getBufferPosition();
      doReturn(2277).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "{}: Start message handled";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getTable("{}: Start message handled", "{}: Start message handled");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3091
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HiveObjectRef hiveObjectRef0 = mock(HiveObjectRef.class, new ViolatedAssumptionAnswer());
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      try { 
        thriftHiveMetastoreClient0.alterDatabase("A6}`l@9)>[", (Database) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // alter_database failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)98;
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn(1).when(tTransport0).getBufferPosition();
      doReturn(0, 3245).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "m;B.jhipCz+/";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.dropTable("m;B.jhipCz+/", "m;B.jhipCz+/", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "";
      List<String> list0 = null;
      try { 
        thriftHiveMetastoreClient0.getPartition("", "", (List<String>) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_partition failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte)16;
      byteArray0[2] = (byte)0;
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn((-2905)).when(tTransport0).getBufferPosition();
      doReturn(0, 0, 8192).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 1).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = ":CR7$ld3M&7h6$:O4*";
      String string1 = "){)BGV/zTVWXl";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getPartitionNames(":CR7$ld3M&7h6$:O4*", ":CR7$ld3M&7h6$:O4*");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2905
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "javax.security.sasl.qop";
      String string1 = "";
      String string2 = "";
      String string3 = "<";
      List<String> list0 = null;
      String string4 = "W:";
      String string5 = "clear_file_metadata_result";
      String string6 = "~8E,*4k*ZY0B06t";
      String string7 = "\\A-)98mQW8JC6N##Up";
      String string8 = null;
      String string9 = "";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getTableColumnStatistics("clear_file_metadata_result", "", (List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_table_statistics_req_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "F;Q/}`Q@jEy9W.P";
      String string1 = "org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$rename_partition_args";
      String string2 = "org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_partitions_pspec_args";
      String string3 = ">n+`'ySsbU";
      TTransport tTransport1 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport1).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport1).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient1 = new ThriftHiveMetastoreClient(tTransport1);
      try { 
        thriftHiveMetastoreClient1.createRole("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_partitions_pspec_args", "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // create_role failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      List<String> list0 = null;
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getPartitionColumnStatistics("GrantRevokeResponse missing success field", "transport is null", (List<String>) null, (List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_partitions_statistics_req_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "GrantRevokeResponse missing success field";
      String string1 = "Bp|7?QM4:s=-}`/0t6)";
      List<String> list0 = null;
      String string2 = "|+St\\'8qy2K-?5,L";
      try { 
        thriftHiveMetastoreClient0.getTableColumnStatistics((String) null, "GrantRevokeResponse missing success field", (List<String>) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field 'dbName' is unset! Struct:TableStatsRequest(dbName:null, tblName:GrantRevokeResponse missing success field, colNames:null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.TableStatsRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      try { 
        thriftHiveMetastoreClient0.getPartitionNamesFiltered("'N(0tC", "Required field 'dbName' is unset! Struct:", (List<String>) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_partition_names_ps failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "FQ$J";
      String string1 = "KM9-";
      try { 
        thriftHiveMetastoreClient0.deleteTableColumnStatistics("FQ$J", "KM9-", "KM9-");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // delete_table_column_statistics failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "";
      try { 
        thriftHiveMetastoreClient0.getDelegationToken("", "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_delegation_token failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "";
      String string1 = "Q_#1*";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getFields("", "Q_#1*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_fields_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "GrantRevokeResponse missing success field";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.dropRole("GrantRevokeResponse missing success field");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$drop_role_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      try { 
        thriftHiveMetastoreClient0.dropTable((String) null, "", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // drop_table failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.dropTable("", "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$drop_table_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "~H=W?KqE4W2a#<*um|S";
      String string1 = "MUQV8=]Z|`Z>\\b<d$]";
      String string2 = "";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getPartition("", "", (List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_partition_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.createTable((Table) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_table_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "foreignKeys:";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.dropDatabase("foreignKeys:", false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$drop_database_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "pq52S>\"hLO(tv";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.createRole("pq52S>\"hLO(tv", "pq52S>\"hLO(tv");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_role_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = null;
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.createRole((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_role_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      PrincipalType principalType0 = PrincipalType.ROLE;
      try { 
        thriftHiveMetastoreClient0.listRoleGrants(")!0{XU=Ro#7arYtS", principalType0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_role_grants_for_principal failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "kL1{P<Z-E$f'lIiw";
      PrincipalType principalType0 = PrincipalType.GROUP;
      HiveObjectRef hiveObjectRef0 = mock(HiveObjectRef.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.listPrivileges("kL1{P<Z-E$f'lIiw", principalType0, hiveObjectRef0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$list_privileges_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "Rk&nfPr*?e \\s&aj@7";
      String string1 = null;
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getAllTables((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_all_tables_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "com.facebook.presto.hive.metastore.thrift.ThriftHiveMetastoreClient";
      String string1 = "org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_resource_plan_result";
      try { 
        thriftHiveMetastoreClient0.deletePartitionColumnStatistics("com.facebook.presto.hive.metastore.thrift.ThriftHiveMetastoreClient", "org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_resource_plan_result", "org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_resource_plan_result", "org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_resource_plan_result");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // delete_partition_column_statistics failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "";
      String string1 = "TOq$Fuloj;ejkyB";
      PrincipalType principalType0 = PrincipalType.GROUP;
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.listRoleGrants("veXc=gRjB$u", principalType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_role_grants_for_principal_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      PrivilegeBag privilegeBag0 = mock(PrivilegeBag.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.revokePrivileges(privilegeBag0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$revoke_privileges_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "D#1";
      String string1 = "";
      String string2 = "transport is null";
      PrincipalType principalType0 = PrincipalType.GROUP;
      PrincipalType principalType1 = PrincipalType.GROUP;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.grantRole("D#1", "transport is null", principalType0, "", principalType1, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_role_grants_for_principal_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "nr";
      String string1 = "getStatus failed: unknown result";
      try { 
        thriftHiveMetastoreClient0.getRoleNames();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_role_names failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "WN";
      PrincipalType principalType0 = PrincipalType.GROUP;
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.listRoles("WN", principalType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$list_roles_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "{[Xz%|,>tW";
      String string1 = null;
      PrincipalType principalType0 = PrincipalType.GROUP;
      thriftHiveMetastoreClient0.close();
      try { 
        thriftHiveMetastoreClient0.getAllDatabases();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_all_databases failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      PrincipalType principalType0 = PrincipalType.ROLE;
      try { 
        thriftHiveMetastoreClient0.listRoles("GrantRevokeResponse missing success field", principalType0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // list_roles failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "transport is null";
      String string1 = "fg{";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.close();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.hive.metastore.thrift.ThriftHiveMetastoreClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.close();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.hive.metastore.thrift.ThriftHiveMetastoreClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "";
      String string1 = "drop_wm_pool_result";
      try { 
        thriftHiveMetastoreClient0.getTable("", "drop_wm_pool_result");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_table failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "xNF/ON^}MO)m]w|:";
      try { 
        thriftHiveMetastoreClient0.getAllDatabases();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_all_databases failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      PrivilegeBag privilegeBag0 = mock(PrivilegeBag.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.grantPrivileges(privilegeBag0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$grant_privileges_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "?&?v]";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.setUGI("?&?v]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$set_ugi_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "aCN18,cdV7!^stV>";
      String string1 = "";
      try { 
        thriftHiveMetastoreClient0.getTableNamesByFilter("'^$;c`CXT`N'/sS", ",|E`");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_table_names_by_filter failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "Adb?I/)yi6";
      PrincipalType principalType0 = PrincipalType.USER;
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.revokeRole("Adb?I/)yi6", "Adb?I/)yi6", principalType0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_role_grants_for_principal_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "";
      String string1 = "3H)l~";
      String string2 = "";
      String string3 = "com.facebook.presto.hive.metastore.thrift.ThriftHiveMetastoreClient";
      try { 
        thriftHiveMetastoreClient0.getAllTables("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_all_tables failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getPartitionsByNames("I&`W", "I&`W", (List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_partitions_by_names_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "j4cqgYC4I@I";
      try { 
        thriftHiveMetastoreClient0.getAllTables("j4cqgYC4I@I");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_all_tables failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      try { 
        thriftHiveMetastoreClient0.getPartitionsByNames("\"#aD34O", "", (List<String>) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_partitions_by_names failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      try { 
        thriftHiveMetastoreClient0.getTable("reinitialize", "@Xq^f+5+]@,9:mor4p7");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_table failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getPartitionNames("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_partition_names_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getTable(".IX/2<#=", ".IX/2<#=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_table_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "";
      try { 
        thriftHiveMetastoreClient0.getDatabase("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_database failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "";
      String string1 = "org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$lock_args";
      try { 
        thriftHiveMetastoreClient0.deletePartitionColumnStatistics("", "", "org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$lock_args", "org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$lock_args");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // delete_partition_column_statistics failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.deletePartitionColumnStatistics("", "", " -", "drop_partition_by_name_with_environment_context failed: unknown result");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$delete_partition_column_statistics_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = null;
      try {
        thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient((TTransport) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // transport is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getDelegationToken("", "]((7''#J%FfPn");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_delegation_token_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = null;
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getDelegationToken((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_delegation_token_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      PrincipalType principalType0 = PrincipalType.USER;
      PrincipalType principalType1 = PrincipalType.ROLE;
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.grantRole("GrantRevokeResponse missing success field", "d{*axc%u9z/*K=", principalType0, "GrantRevokeResponse missing success field", principalType1, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_role_grants_for_principal_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      PrincipalType principalType0 = PrincipalType.ROLE;
      PrincipalType principalType1 = PrincipalType.ROLE;
      try { 
        thriftHiveMetastoreClient0.grantRole("m;q%[[)M\u0005U;@ij;", "m;q%[[)M\u0005U;@ij;", principalType0, "}'8,m]`pLnSl@#[", principalType1, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_role_grants_for_principal failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = null;
      try { 
        thriftHiveMetastoreClient0.dropRole((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // drop_role failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      PrivilegeBag privilegeBag0 = mock(PrivilegeBag.class, new ViolatedAssumptionAnswer());
      try { 
        thriftHiveMetastoreClient0.revokePrivileges(privilegeBag0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // revoke_privileges failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "";
      boolean boolean0 = true;
      boolean boolean1 = true;
      PrincipalType principalType0 = PrincipalType.GROUP;
      try { 
        thriftHiveMetastoreClient0.revokeRole("transport is null", "aPJW]7,bmg", principalType0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_role_grants_for_principal failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "";
      try { 
        thriftHiveMetastoreClient0.getFields("", "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_fields failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "@";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getTableNamesByFilter("9EIka:7c\"", "9EIka:7c\"");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_table_names_by_filter_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      PrincipalType principalType0 = PrincipalType.USER;
      PrincipalType principalType1 = PrincipalType.GROUP;
      try { 
        thriftHiveMetastoreClient0.grantRole("", "", principalType0, "", principalType1, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_role_grants_for_principal failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      try { 
        thriftHiveMetastoreClient0.dropRole("g!");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // drop_role failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      PrivilegeBag privilegeBag0 = mock(PrivilegeBag.class, new ViolatedAssumptionAnswer());
      try { 
        thriftHiveMetastoreClient0.revokePrivileges(privilegeBag0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // revoke_privileges failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      PrincipalType principalType0 = PrincipalType.GROUP;
      try { 
        thriftHiveMetastoreClient0.revokeRole("grant_revoke_privileges_result", ".\"v#*B", principalType0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_role_grants_for_principal failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getFields("XXgTuo", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_fields_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      try { 
        thriftHiveMetastoreClient0.getTableNamesByFilter("", "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_table_names_by_filter failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "9$fouw";
      try { 
        thriftHiveMetastoreClient0.getPartitionNames("9$fouw", "GrantRevokeResponse missing success field");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_partition_names failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.dropDatabase("", false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$drop_database_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.deleteTableColumnStatistics("", "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$delete_table_column_statistics_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = ".iLiHn5YI6[+lR\"9";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getRoleNames();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_role_names_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "";
      String string1 = "d*N$K]d%3ZLZy;l";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getAllDatabases();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_all_databases_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      PrivilegeBag privilegeBag0 = mock(PrivilegeBag.class, new ViolatedAssumptionAnswer());
      try { 
        thriftHiveMetastoreClient0.grantPrivileges(privilegeBag0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // grant_privileges failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getPartitionNames("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_partition_names_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.deleteTableColumnStatistics("32i-'", "", "s$':T]ku.<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$delete_table_column_statistics_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      try { 
        thriftHiveMetastoreClient0.setUGI("8aC7%S0q[/");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // set_ugi failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      try { 
        thriftHiveMetastoreClient0.getRoleNames();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_role_names failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getAllDatabases();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_all_databases_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getDatabase("DG%P!u?j-yLn");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_database_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = null;
      try {
        thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient((TProtocol) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.hive.metastore.thrift.ThriftHiveMetastoreClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      try { 
        thriftHiveMetastoreClient0.grantPrivileges((PrivilegeBag) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // grant_privileges failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "<Wr`VDw~";
      String string1 = "";
      List<String> list0 = null;
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getPartitionColumnStatistics("<Wr`VDw~", "", (List<String>) null, (List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_partitions_statistics_req_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "<Arz3Q!A#r;RGo2$";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.dropTable("<Arz3Q!A#r;RGo2$", "<Arz3Q!A#r;RGo2$", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$drop_table_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Class<IScheme> class0 = IScheme.class;
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(tProtocol0).getScheme();
      doReturn(tTransport0).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = null;
      String string1 = "sj6na8,V#$~6:<t^0^,";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getTableColumnStatistics("sj6na8,V#$~6:<t^0^,", "sj6na8,V#$~6:<t^0^,", (List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_table_statistics_req_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      String string0 = "GrantReokeResponse missing success ield";
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 2373, 2373, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string1 = "%OgK_+)mhdOe!)(-;2";
      thriftHiveMetastoreClient0.close();
      try { 
        thriftHiveMetastoreClient0.getRoleNames();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_role_names failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Class<IScheme> class0 = IScheme.class;
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(tProtocol0).getScheme();
      doReturn(tTransport0).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.createTable((Table) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$create_table_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn((byte[]) null).when(tTransport0).getBuffer();
      doReturn(0).when(tTransport0).getBufferPosition();
      doReturn(3097).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "com.facebook.presto.hive.metastore.thrift.ThriftHiveMetastoreClient";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getDelegationToken("", "USER");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Class<IScheme> class0 = IScheme.class;
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(tProtocol0).getScheme();
      doReturn(tTransport0).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.setUGI("GrantRevokeResponse missing success field");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$set_ugi_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      try { 
        thriftHiveMetastoreClient0.getPartitionNamesFiltered("p&5]", "Required field 'dbName' is unset! Struct:", (List<String>) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // get_partition_names_ps failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn((byte[]) null).when(tTransport0).getBuffer();
      doReturn(0).when(tTransport0).getBufferPosition();
      doReturn((-1440), (-1440), 87).when(tTransport0).getBytesRemainingInBuffer();
      doReturn((-1440), 0, 1172).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "(O|E!'$69";
      String string1 = "";
      String string2 = "com.facebook.presto.hive.metastore.thrift.ThriftHiveMetastoreClient";
      TTransport tTransport1 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient1 = new ThriftHiveMetastoreClient(tTransport1);
      String string3 = null;
      String string4 = "f)<T:m&";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getTableNamesByFilter("|h]~F|#K@%W", "com.facebook.presto.hive.metastore.thrift.ThriftHiveMetastoreClient");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Class<IScheme> class0 = IScheme.class;
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(tProtocol0).getScheme();
      doReturn(tTransport0).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "MUQV8=]Z|`Z>\\b<d$]";
      String string1 = "";
      List<String> list0 = null;
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getPartition("", "", (List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_partition_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn(tTransport0).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "";
      String string1 = "Li";
      byte[] byteArray0 = new byte[8];
      TTransport tTransport1 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport1).getBuffer();
      doReturn((-1819)).when(tTransport1).getBufferPosition();
      doReturn((-1819), 2068).when(tTransport1).getBytesRemainingInBuffer();
      doReturn(17, 0).when(tTransport1).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient1 = new ThriftHiveMetastoreClient(tTransport1);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient1.getPartitionNames("", "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1819
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Class<IScheme> class0 = IScheme.class;
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "add_token";
      PrincipalType principalType0 = PrincipalType.GROUP;
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.grantRole("P3+W", (String) null, principalType0, "\"^[$K|T*}qc", principalType0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_role_grants_for_principal_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-102);
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(tTransport0).getBuffer();
      doReturn(1296).when(tTransport0).getBufferPosition();
      doReturn(14).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.createRole("GrantRevokeResponse missing success field", "GrantRevokeResponse missing success field");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1296
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Class<IScheme> class0 = IScheme.class;
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(tProtocol0).getScheme();
      doReturn(tTransport0).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "bO=#G) T";
      String string1 = "drop_table_args(";
      String string2 = "";
      String string3 = "GrantRevokeResponse missing success field";
      PrincipalType principalType0 = PrincipalType.ROLE;
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getAllTables("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_all_tables_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Class<IScheme> class0 = IScheme.class;
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(tProtocol0).getScheme();
      doReturn(tTransport0).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      String string0 = "bO=#G) T";
      String string1 = "drop_table_args(";
      PrincipalType principalType0 = PrincipalType.ROLE;
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.revokeRole("", "GrantRevokeResponse missing success field", principalType0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_role_grants_for_principal_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn((byte[]) null).when(tTransport0).getBuffer();
      doReturn(0).when(tTransport0).getBufferPosition();
      doReturn(140).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "{}: Start message handled";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getTable("{}: Start message handled", "{}: Start message handled");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(44, 197, 40, 610).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      try { 
        thriftHiveMetastoreClient0.deletePartitionColumnStatistics("set_ugi_result(", "set_ugi_result(", "", "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // delete_partition_column_statistics failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "tr'a>\\F2baL#0";
      PrincipalType principalType0 = PrincipalType.USER;
      String string1 = "";
      boolean boolean0 = false;
      try { 
        thriftHiveMetastoreClient0.dropDatabase("", false, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // drop_database failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn((byte[]) null).when(tTransport0).getBuffer();
      doReturn(0).when(tTransport0).getBufferPosition();
      doReturn(109).when(tTransport0).getBytesRemainingInBuffer();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "nr";
      String string1 = "getStatus failed: unknown result";
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.getFields("nr", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.thrift.protocol.TBinaryProtocol", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      HiveObjectRef hiveObjectRef0 = mock(HiveObjectRef.class, new ViolatedAssumptionAnswer());
      PrivilegeBag privilegeBag0 = mock(PrivilegeBag.class, new ViolatedAssumptionAnswer());
      TProtocol tProtocol0 = mock(TProtocol.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tProtocol0).getScheme();
      doReturn((TTransport) null).when(tProtocol0).getTransport();
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tProtocol0);
      // Undeclared exception!
      try { 
        thriftHiveMetastoreClient0.deleteTableColumnStatistics("sY'VZt~c7T<b", "transport is null", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$delete_table_column_statistics_args", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "com.facebook.presto.hive.metastore.thrift.ThriftHiveMetastoreClient";
      TTransport tTransport1 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      try { 
        thriftHiveMetastoreClient0.setTableColumnStatistics("com.facebook.presto.hive.metastore.thrift.ThriftHiveMetastoreClient", "tx/", (List<ColumnStatisticsObj>) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field 'statsObj' is unset! Struct:ColumnStatistics(statsDesc:ColumnStatisticsDesc(isTblLevel:true, dbName:com.facebook.presto.hive.metastore.thrift.ThriftHiveMetastoreClient, tableName:tx/), statsObj:null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ColumnStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(tTransport0).getBytesRemainingInBuffer();
      doReturn(0, 0, 0, 0).when(tTransport0).readAll(any(byte[].class) , anyInt() , anyInt());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport0);
      String string0 = "transport is null";
      String string1 = ";sE";
      PrincipalType principalType0 = PrincipalType.GROUP;
      HiveObjectRef hiveObjectRef0 = mock(HiveObjectRef.class, new ViolatedAssumptionAnswer());
      try { 
        thriftHiveMetastoreClient0.listPrivileges(";sE", principalType0, hiveObjectRef0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // list_privileges failed: out of sequence response
         //
         verifyException("org.apache.thrift.TServiceClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      TTransport tTransport0 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      TTransport tTransport1 = mock(TTransport.class, new ViolatedAssumptionAnswer());
      ThriftHiveMetastoreClient thriftHiveMetastoreClient0 = new ThriftHiveMetastoreClient(tTransport1);
      String string0 = "!7%tEK*Y'8{uX1T3S'y";
      try { 
        thriftHiveMetastoreClient0.setPartitionColumnStatistics("!7%tEK*Y'8{uX1T3S'y", "!7%tEK*Y'8{uX1T3S'y", "!7%tEK*Y'8{uX1T3S'y", (List<ColumnStatisticsObj>) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field 'statsObj' is unset! Struct:ColumnStatistics(statsDesc:ColumnStatisticsDesc(isTblLevel:false, dbName:!7%tEK*Y'8{uX1T3S'y, tableName:!7%tEK*Y'8{uX1T3S'y, partName:!7%tEK*Y'8{uX1T3S'y), statsObj:null)
         //
         verifyException("org.apache.hadoop.hive.metastore.api.ColumnStatistics", e);
      }
  }
}
