/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 00:02:01 GMT 2021
 */

package com.facebook.presto.connector.jmx;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.connector.jmx.JmxSplitManager;
import com.facebook.presto.spi.ConnectorSession;
import com.facebook.presto.spi.ConnectorTableLayoutHandle;
import com.facebook.presto.spi.NodeManager;
import com.facebook.presto.spi.connector.ConnectorSplitManager;
import com.facebook.presto.spi.connector.ConnectorTransactionHandle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JmxSplitManager_ESTest extends JmxSplitManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JmxSplitManager jmxSplitManager0 = null;
      try {
        jmxSplitManager0 = new JmxSplitManager((NodeManager) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // nodeManager is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConnectorSession connectorSession0 = mock(ConnectorSession.class, new ViolatedAssumptionAnswer());
      NodeManager nodeManager0 = mock(NodeManager.class, new ViolatedAssumptionAnswer());
      JmxSplitManager jmxSplitManager0 = new JmxSplitManager(nodeManager0);
      ConnectorSplitManager.SplitSchedulingContext connectorSplitManager_SplitSchedulingContext0 = mock(ConnectorSplitManager.SplitSchedulingContext.class, new ViolatedAssumptionAnswer());
      ConnectorTransactionHandle connectorTransactionHandle0 = mock(ConnectorTransactionHandle.class, new ViolatedAssumptionAnswer());
      ConnectorTableLayoutHandle connectorTableLayoutHandle0 = mock(ConnectorTableLayoutHandle.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        jmxSplitManager0.getSplits(connectorTransactionHandle0, connectorSession0, connectorTableLayoutHandle0, connectorSplitManager_SplitSchedulingContext0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.facebook.presto.spi.ConnectorTableLayoutHandle$MockitoMock$1227696878 cannot be cast to com.facebook.presto.connector.jmx.JmxTableLayoutHandle
         //
         verifyException("com.facebook.presto.connector.jmx.JmxSplitManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NodeManager nodeManager0 = mock(NodeManager.class, new ViolatedAssumptionAnswer());
      JmxSplitManager jmxSplitManager0 = new JmxSplitManager(nodeManager0);
      ConnectorTransactionHandle connectorTransactionHandle0 = mock(ConnectorTransactionHandle.class, new ViolatedAssumptionAnswer());
      ConnectorSession connectorSession0 = mock(ConnectorSession.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        jmxSplitManager0.getSplits(connectorTransactionHandle0, connectorSession0, (ConnectorTableLayoutHandle) null, (ConnectorSplitManager.SplitSchedulingContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.connector.jmx.JmxSplitManager", e);
      }
  }
}
