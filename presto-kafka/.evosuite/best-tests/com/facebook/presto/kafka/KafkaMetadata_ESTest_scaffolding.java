/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sun Nov 21 00:14:30 GMT 2021
 */

package com.facebook.presto.kafka;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class KafkaMetadata_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.facebook.presto.kafka.KafkaMetadata"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.dir", "/mnt/c/Users/Helen/Documents/DataScience18668/GroupProject/project/presto/presto-kafka"); 
    java.lang.System.setProperty("user.home", "/home/helen"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "helen"); 
    java.lang.System.setProperty("user.timezone", "America/Los_Angeles"); 
    java.lang.System.setProperty("org.evosuite.shaded.org.dom4j.dom.DOMDocumentFactory.singleton.strategy", "org.evosuite.shaded.org.dom4j.util.SimpleSingleton"); 
    java.lang.System.setProperty("strategy", "EvoSuite"); 
    java.lang.System.setProperty("sun.java.launcher", "SUN_STANDARD"); 
    java.lang.System.setProperty("sun.management.compiler", "HotSpot 64-Bit Tiered Compilers"); 
    java.lang.System.setProperty("sun.boot.class.path", "/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"); 
    java.lang.System.setProperty("show_progress", "false"); 
    java.lang.System.setProperty("extra_timeout", "20"); 
    java.lang.System.setProperty("process_communication_port", "7931"); 
    java.lang.System.setProperty("initialization_timeout", "20"); 
    java.lang.System.setProperty("org.evosuite.shaded.org.dom4j.factory", "org.evosuite.shaded.org.dom4j.DocumentFactory"); 
    java.lang.System.setProperty("assertion_timeout", "20"); 
    java.lang.System.setProperty("junit_tests", "true"); 
    java.lang.System.setProperty("log4j.configuration", "SUT.log4j.properties"); 
    java.lang.System.setProperty("analysis_criteria", ""); 
    java.lang.System.setProperty("sun.boot.library.path", "/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"); 
    java.lang.System.setProperty("enable_asserts_for_evosuite", "false"); 
    java.lang.System.setProperty("sun.arch.data.model", "64"); 
    java.lang.System.setProperty("sun.cpu.isalist", ""); 
    java.lang.System.setProperty("sun.jnu.encoding", "UTF-8"); 
    java.lang.System.setProperty("file.encoding.pkg", "sun.io"); 
    java.lang.System.setProperty("configuration_id", "default"); 
    java.lang.System.setProperty("PROJECT_PREFIX", ""); 
    java.lang.System.setProperty("ctg_time_per_class", "2"); 
    java.lang.System.setProperty("write_pool", "/mnt/c/Users/Helen/Documents/DataScience18668/GroupProject/project/presto/presto-kafka/.evosuite/tmp_2021_11_20_16_03_07/pools/com.facebook.presto.kafka.KafkaMetadata.pool"); 
    java.lang.System.setProperty("save_all_data", "false"); 
    java.lang.System.setProperty("logback.configurationFile", "logback-ctg.xml"); 
    java.lang.System.setProperty("junit_check_timeout", "20"); 
    java.lang.System.setProperty("replace_calls", "true"); 
    java.lang.System.setProperty("coverage", "true"); 
    java.lang.System.setProperty("org.evosuite.shaded.org.dom4j.DocumentFactory.singleton.strategy", "org.evosuite.shaded.org.dom4j.util.SimpleSingleton"); 
    java.lang.System.setProperty("ctg_schedule", "BUDGET"); 
    java.lang.System.setProperty("sun.io.unicode.encoding", "UnicodeLittle"); 
    java.lang.System.setProperty("stopping_condition", "MAXTIME"); 
    java.lang.System.setProperty("print_to_system", "false"); 
    java.lang.System.setProperty("ctg_seeds_file_in", "/mnt/c/Users/Helen/Documents/DataScience18668/GroupProject/project/presto/presto-kafka/.evosuite/evosuite-seeds/com.facebook.presto.kafka.KafkaMetadata.seed"); 
    java.lang.System.setProperty("output_variables", "TARGET_CLASS,configuration_id,criterion,ctg_min_time_per_job,ctg_schedule,search_budget,p_object_pool,ctg_time_per_class,Size,Length,Total_Time,Random_Seed,LineCoverage,LineCoverageBitString,BranchCoverage,BranchCoverageBitString,ExceptionCoverage,ExceptionCoverageBitString,Explicit_MethodExceptions,Explicit_TypeExceptions,Implicit_MethodExceptions,Implicit_TypeExceptions,WeakMutationScore,WeakMutationCoverageBitString,OutputCoverage,OutputCoverageBitString,MethodCoverage,MethodCoverageBitString,MethodNoExceptionCoverage,MethodNoExceptionCoverageBitString,CBranchCoverage,CBranchCoverageBitString"); 
    java.lang.System.setProperty("global_timeout", "122"); 
    java.lang.System.setProperty("assertions", "true"); 
    java.lang.System.setProperty("log_timeout", "false"); 
    java.lang.System.setProperty("master_log_port", "46877"); 
    java.lang.System.setProperty("reset_static_fields", "true"); 
    java.lang.System.setProperty("sun.java.command", "org.evosuite.ClientProcess"); 
    java.lang.System.setProperty("junit_check", "true"); 
    java.lang.System.setProperty("evosuite.log.folder", "/mnt/c/Users/Helen/Documents/DataScience18668/GroupProject/project/presto/presto-kafka/.evosuite/tmp_2021_11_20_16_03_07/logs/com.facebook.presto.kafka.KafkaMetadata"); 
    java.lang.System.setProperty("minimize", "true"); 
    java.lang.System.setProperty("max_size", "100"); 
    java.lang.System.setProperty("sun.os.patch.level", "unknown"); 
    java.lang.System.setProperty("sun.cpu.endian", "little"); 
    java.lang.System.setProperty("ctg_min_time_per_job", "1"); 
    java.lang.System.setProperty("junit_suffix", "_ESTest"); 
    java.lang.System.setProperty("java.vendor.url.bug", "http://bugreport.sun.com/bugreport/"); 
    java.lang.System.setProperty("report_dir", "/mnt/c/Users/Helen/Documents/DataScience18668/GroupProject/project/presto/presto-kafka/.evosuite/tmp_2021_11_20_16_03_07/reports/com.facebook.presto.kafka.KafkaMetadata"); 
    java.lang.System.setProperty("minimization_timeout", "20"); 
    java.lang.System.setProperty("CP_file_path", "/tmp/EvoSuite_classpathFile1427022392117873151.txt"); 
    java.lang.System.setProperty("java.rmi.server.hostname", "127.0.0.1"); 
    java.lang.System.setProperty("inline", "true"); 
    java.lang.System.setProperty("ctg_seeds_file_out", "/mnt/c/Users/Helen/Documents/DataScience18668/GroupProject/project/presto/presto-kafka/.evosuite/tmp_2021_11_20_16_03_07/seeds/com.facebook.presto.kafka.KafkaMetadata.seed"); 
    java.lang.System.setProperty("TARGET_CLASS", "com.facebook.presto.kafka.KafkaMetadata"); 
    java.lang.System.setProperty("spawn_process_manager_port", "39161"); 
    java.lang.System.setProperty("evosuite.log.appender", "CLIENT"); 
    java.lang.System.setProperty("write_junit_timeout", "20"); 
    java.lang.System.setProperty("test_dir", "/mnt/c/Users/Helen/Documents/DataScience18668/GroupProject/project/presto/presto-kafka/.evosuite/tmp_2021_11_20_16_03_07/tests"); 
    java.lang.System.setProperty("search_budget", "122"); 
    java.lang.System.setProperty("plot", "false"); 
    java.lang.System.setProperty("p_object_pool", "0.3"); 
    java.lang.System.setProperty("criterion", "LINE:BRANCH:EXCEPTION:WEAKMUTATION:OUTPUT:METHOD:METHODNOEXCEPTION:CBRANCH"); 
    java.lang.System.setProperty("test_comments", "false"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(KafkaMetadata_ESTest_scaffolding.class.getClassLoader() ,
      "com.facebook.presto.common.type.AbstractType",
      "com.google.common.collect.ImmutableSet$SetBuilderImpl",
      "com.facebook.presto.kafka.KafkaTableHandle",
      "com.google.common.collect.RangeSet",
      "com.google.common.collect.ImmutableList$SubList",
      "com.facebook.presto.spi.ConnectorHandleResolver",
      "com.facebook.presto.spi.security.PrestoPrincipal",
      "com.google.common.collect.Lists$RandomAccessPartition",
      "com.google.common.collect.Collections2",
      "com.facebook.presto.kafka.KafkaColumnHandle",
      "com.google.common.collect.PeekingIterator",
      "com.facebook.presto.spi.ErrorType",
      "com.google.common.base.JdkPattern",
      "com.facebook.presto.common.type.TypeSignature",
      "com.google.common.collect.CollectSpliterators$1WithCharacteristics",
      "com.facebook.presto.common.predicate.AllOrNone",
      "com.google.common.collect.RegularImmutableList",
      "com.facebook.presto.kafka.KafkaTopicFieldDescription",
      "com.google.common.base.Platform$JdkPatternCompiler",
      "com.facebook.presto.spi.ConnectorMaterializedViewDefinition",
      "com.google.common.collect.Lists$TransformingRandomAccessList",
      "com.google.common.collect.ImmutableRangeSet",
      "com.google.common.collect.RegularImmutableMap$KeySet",
      "com.google.common.collect.Iterators$ArrayItr",
      "com.facebook.presto.common.block.BlockBuilder",
      "com.facebook.presto.common.predicate.NullableValue",
      "com.google.common.collect.RegularImmutableMap",
      "com.facebook.presto.common.block.UncheckedBlock",
      "com.facebook.presto.common.function.SqlFunctionProperties",
      "com.google.common.collect.Range",
      "com.google.common.collect.SortedMapDifference",
      "com.google.common.collect.RegularImmutableSet",
      "com.google.common.base.CommonPattern",
      "com.facebook.presto.spi.ConnectorSession",
      "com.google.common.collect.Iterators$10",
      "com.google.common.collect.AbstractMapEntry",
      "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
      "com.facebook.presto.kafka.encoder.EncoderColumnHandle",
      "com.google.common.base.Predicate",
      "com.facebook.presto.spi.statistics.TableStatisticsMetadata",
      "com.google.common.collect.ImmutableRangeSet$ComplementRanges",
      "com.facebook.presto.decoder.DecoderColumnHandle",
      "com.facebook.presto.kafka.schema.MapBasedTableDescriptionSupplier",
      "com.facebook.presto.common.GenericInternalException",
      "com.facebook.presto.spi.connector.ConnectorPartitioningHandle",
      "com.google.common.collect.Iterables",
      "io.airlift.slice.Slice",
      "com.google.common.collect.ImmutableAsList",
      "com.facebook.presto.common.type.TypeSignatureParameter",
      "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet",
      "com.facebook.presto.spi.ErrorCode",
      "com.google.common.collect.ImmutableSet$Builder",
      "com.google.common.collect.RegularImmutableAsList",
      "com.google.common.collect.SingletonImmutableSet",
      "com.facebook.presto.spi.ConnectorOutputTableHandle",
      "com.google.common.collect.ImmutableMapEntrySet",
      "com.google.common.base.Strings",
      "com.google.common.collect.Lists$Partition",
      "com.google.common.collect.Lists",
      "com.google.common.base.PatternCompiler",
      "com.facebook.presto.kafka.KafkaTopicFieldGroup",
      "com.google.common.collect.UnmodifiableListIterator",
      "com.facebook.presto.common.predicate.TupleDomain$ColumnDomain",
      "com.google.common.collect.Lists$TransformingSequentialList",
      "com.facebook.presto.kafka.KafkaConnectorId",
      "com.facebook.presto.spi.ConnectorTableMetadata",
      "com.google.common.collect.ImmutableSortedSet",
      "com.google.common.collect.RangeGwtSerializationDependencies",
      "com.google.common.collect.ImmutableRangeSet$Builder",
      "com.google.common.collect.Maps$BiMapConverter",
      "com.facebook.presto.spi.SchemaUtil",
      "com.google.common.collect.AbstractIterator",
      "com.facebook.presto.spi.Constraint",
      "com.google.common.collect.IndexedImmutableSet$1",
      "com.facebook.presto.common.predicate.Domain",
      "com.google.common.collect.ImmutableList$1",
      "com.google.common.collect.MapDifference",
      "com.facebook.presto.spi.ConnectorTableLayoutResult",
      "com.facebook.presto.spi.SchemaTablePrefix",
      "com.facebook.presto.common.type.FixedWidthType",
      "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
      "com.google.common.collect.SortedIterable",
      "com.facebook.presto.spi.ColumnHandle",
      "com.facebook.presto.spi.QueryId",
      "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry",
      "com.facebook.presto.testing.TestingMetadata$TestingColumnHandle",
      "com.facebook.presto.kafka.KafkaHandleResolver",
      "com.google.common.base.Preconditions",
      "com.google.common.collect.UnmodifiableIterator",
      "com.google.common.collect.AbstractRangeSet",
      "com.google.common.collect.ImmutableSortedSetFauxverideShim",
      "com.facebook.presto.spi.TableLayoutFilterCoverage",
      "com.facebook.presto.common.predicate.ValueSet",
      "com.google.common.collect.ImmutableEntry",
      "com.facebook.presto.kafka.KafkaMetadata",
      "com.facebook.presto.common.predicate.DiscreteValues",
      "com.facebook.presto.spi.statistics.TableStatistics",
      "com.google.common.collect.ImmutableCollection",
      "com.google.common.collect.ImmutableEnumMap",
      "io.airlift.units.Duration",
      "com.google.common.collect.Lists$RandomAccessListWrapper",
      "com.facebook.presto.kafka.KafkaConnectorConfig",
      "com.google.common.base.Platform",
      "com.facebook.presto.spi.SchemaTableName",
      "com.facebook.presto.common.type.TypeSignatureBase",
      "com.google.common.collect.ImmutableList$ReverseImmutableList",
      "com.facebook.presto.testing.TestingHandle",
      "com.google.common.collect.SingletonImmutableList",
      "com.google.common.collect.ImmutableCollection$Builder",
      "com.google.common.collect.ImmutableSet$JdkBackedSetBuilderImpl",
      "com.google.common.base.Converter",
      "com.google.common.collect.Maps$8",
      "com.facebook.presto.common.type.TinyintType",
      "com.google.common.collect.BiMap",
      "com.google.common.collect.IndexedImmutableSet",
      "com.google.common.base.Function",
      "com.google.common.collect.ImmutableSet",
      "com.google.common.collect.Iterators$9",
      "com.google.common.collect.Lists$AbstractListWrapper",
      "com.google.common.collect.ImmutableMap",
      "com.google.common.collect.ImmutableMapEntry",
      "com.google.common.collect.AbstractIndexedListIterator",
      "com.google.common.collect.CollectPreconditions",
      "com.facebook.presto.testing.TestingMetadata$TestingTableHandle",
      "com.google.common.collect.Iterators$1",
      "com.facebook.presto.testing.TestingMetadata",
      "com.facebook.presto.kafka.schema.TableDescriptionSupplier",
      "com.google.common.collect.Iterators$4",
      "com.facebook.presto.common.predicate.Range",
      "com.google.common.collect.CollectCollectors",
      "com.google.common.collect.Iterators$5",
      "com.facebook.presto.tpch.TpchTableHandle",
      "com.facebook.presto.spi.ColumnMetadata",
      "com.google.common.collect.Lists$StringAsImmutableList",
      "com.facebook.presto.spi.StandardErrorCode",
      "com.google.common.collect.Lists$2",
      "com.facebook.presto.spi.ErrorCodeSupplier",
      "com.google.common.collect.ImmutableList$Builder",
      "com.facebook.presto.common.predicate.Ranges",
      "com.google.common.collect.ImmutableMap$1",
      "com.google.common.collect.Lists$1",
      "com.facebook.presto.spi.connector.ConnectorMetadata",
      "io.airlift.units.Preconditions",
      "com.facebook.presto.spi.NotFoundException",
      "com.google.common.collect.Multiset",
      "com.facebook.presto.spi.ConnectorTableLayoutHandle",
      "com.facebook.presto.kafka.KafkaTopicDescription",
      "com.facebook.presto.spi.ConnectorTableHandle",
      "com.facebook.presto.spi.PrestoException",
      "com.google.common.collect.Iterators",
      "com.google.common.collect.ImmutableBiMap",
      "com.google.common.collect.ImmutableList",
      "com.google.common.collect.ImmutableRangeSet$AsSet",
      "com.google.common.collect.ImmutableBiMapFauxverideShim",
      "com.facebook.presto.common.block.BlockBuilderStatus",
      "com.facebook.presto.common.type.Type",
      "com.facebook.presto.spi.ConnectorInsertTableHandle",
      "com.google.common.collect.ImmutableRangeSet$1",
      "com.facebook.presto.spi.ConnectorTableLayout",
      "com.google.common.collect.ImmutableMap$Builder",
      "com.google.common.collect.Maps",
      "com.facebook.presto.common.predicate.TupleDomain",
      "com.google.common.collect.CollectSpliterators",
      "com.facebook.presto.spi.TableNotFoundException",
      "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
      "com.google.common.collect.Maps$EntryTransformer",
      "com.facebook.presto.spi.MaterializedViewStatus",
      "com.google.common.collect.Iterators$MergingIterator",
      "com.google.common.collect.RegularImmutableMap$Values",
      "com.facebook.presto.common.block.Block",
      "com.google.common.collect.RegularImmutableSortedSet"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(KafkaMetadata_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.facebook.presto.kafka.KafkaMetadata",
      "com.google.common.collect.CollectCollectors",
      "com.facebook.presto.common.type.AbstractType",
      "com.facebook.presto.common.type.AbstractLongType",
      "com.facebook.presto.common.type.TypeSignature",
      "com.facebook.presto.common.type.TypeSignatureBase",
      "com.facebook.presto.common.type.BigintType",
      "com.facebook.presto.common.type.BooleanType",
      "com.facebook.presto.common.type.AbstractVariableWidthType",
      "com.facebook.presto.common.type.AbstractVarcharType",
      "com.facebook.presto.common.type.TypeSignatureParameter",
      "com.facebook.presto.common.type.ParameterKind",
      "com.facebook.presto.common.type.TypeSignatureParameter$1",
      "com.facebook.presto.common.type.VarcharType",
      "com.google.common.base.Strings",
      "com.google.common.base.Platform$JdkPatternCompiler",
      "com.google.common.base.Platform",
      "com.google.common.base.Preconditions",
      "com.google.common.collect.ImmutableMap",
      "com.google.common.collect.ImmutableMap$Builder",
      "com.google.common.collect.CollectPreconditions",
      "com.google.common.collect.ImmutableCollection$Builder",
      "com.google.common.collect.RegularImmutableMap",
      "com.google.common.collect.AbstractMapEntry",
      "com.google.common.collect.ImmutableEntry",
      "com.google.common.collect.ImmutableMapEntry",
      "com.google.common.collect.Hashing",
      "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry",
      "com.facebook.presto.kafka.KafkaInternalFieldDescription",
      "com.facebook.presto.kafka.KafkaConnectorId",
      "com.facebook.presto.kafka.KafkaConnectorConfig",
      "io.airlift.units.Duration",
      "io.airlift.units.Preconditions",
      "com.facebook.presto.kafka.schema.MapBasedTableDescriptionSupplier",
      "com.google.common.collect.Iterables",
      "com.facebook.presto.common.type.TinyintType",
      "com.facebook.presto.tpch.TpchColumnHandle",
      "org.antlr.v4.runtime.atn.ATNState",
      "org.antlr.v4.runtime.atn.RuleStartState",
      "org.antlr.v4.runtime.atn.Transition$1",
      "org.antlr.v4.runtime.atn.Transition",
      "org.antlr.v4.runtime.atn.RuleTransition",
      "com.facebook.presto.spi.SchemaTablePrefix",
      "com.facebook.presto.spi.SchemaUtil",
      "com.google.common.collect.Maps",
      "com.google.common.collect.Collections2",
      "com.google.common.collect.ImmutableMapEntrySet",
      "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet",
      "com.google.common.collect.ImmutableList",
      "com.google.common.collect.RegularImmutableList",
      "com.google.common.collect.Iterators",
      "com.google.common.collect.UnmodifiableIterator",
      "com.google.common.collect.UnmodifiableListIterator",
      "com.google.common.collect.AbstractIndexedListIterator",
      "com.google.common.collect.Iterators$ArrayItr",
      "org.testng.xml.XmlSuite$ParallelMode",
      "org.testng.xml.XmlSuite$FailurePolicy",
      "org.testng.xml.XmlSuite",
      "org.testng.collections.Lists",
      "org.testng.collections.Maps",
      "com.facebook.presto.spi.security.Identity",
      "com.facebook.presto.spi.security.ConnectorIdentity",
      "com.facebook.presto.FullConnectorSession",
      "com.facebook.presto.spi.SchemaTableName",
      "com.facebook.presto.testing.TestingMetadata$TestingTableHandle",
      "com.facebook.presto.common.type.BigintEnumParametricType",
      "com.facebook.presto.testing.TestingMetadata$TestingColumnHandle",
      "com.facebook.airlift.http.client.jetty.JettyLogging",
      "com.facebook.airlift.http.client.jetty.JettyLogging$NoOpLogger",
      "org.eclipse.jetty.util.log.Log$1",
      "org.eclipse.jetty.util.Loader",
      "org.eclipse.jetty.util.log.Log",
      "org.eclipse.jetty.util.Uptime$DefaultImpl",
      "org.eclipse.jetty.util.Uptime",
      "org.eclipse.jetty.util.log.AbstractLogger",
      "org.eclipse.jetty.util.log.JavaUtilLog",
      "com.facebook.airlift.http.client.jetty.JettyHttpClient",
      "com.facebook.airlift.http.client.HttpClientConfig",
      "io.airlift.units.DataSize",
      "com.google.common.collect.ObjectArrays",
      "org.ietf.jgss.Oid",
      "org.ietf.jgss.GSSName",
      "com.facebook.airlift.http.client.KerberosNameType",
      "com.facebook.airlift.http.client.spnego.KerberosConfig",
      "com.facebook.airlift.http.client.RequestStats",
      "com.facebook.airlift.stats.CounterStat",
      "com.facebook.airlift.stats.DecayCounter",
      "com.facebook.airlift.stats.ExponentialDecay",
      "com.google.common.base.Ticker$1",
      "com.google.common.base.Ticker",
      "com.facebook.airlift.stats.TimeStat",
      "com.facebook.airlift.stats.TimeDistribution",
      "org.openjdk.jol.info.ClassLayout",
      "org.openjdk.jol.layouters.CurrentLayouter",
      "org.openjdk.jol.info.ClassData",
      "org.openjdk.jol.info.FieldData",
      "org.openjdk.jol.util.VMSupport$1",
      "org.openjdk.jol.util.VMSupport$2",
      "org.openjdk.jol.util.VMSupport$VMOptions",
      "org.openjdk.jol.util.MathUtil",
      "org.openjdk.jol.util.VMSupport$MyObject1",
      "org.openjdk.jol.util.VMSupport",
      "org.openjdk.jol.datamodel.CurrentDataModel",
      "org.openjdk.jol.info.FieldLayout",
      "com.facebook.airlift.stats.QuantileDigest",
      "com.facebook.presto.execution.TestQueryManager",
      "com.facebook.presto.execution.StageId",
      "com.facebook.presto.spi.QueryId",
      "com.fasterxml.jackson.databind.JsonSerializable$Base",
      "com.fasterxml.jackson.databind.JsonNode",
      "com.fasterxml.jackson.databind.node.BaseJsonNode",
      "com.fasterxml.jackson.databind.node.ValueNode",
      "com.fasterxml.jackson.databind.node.MissingNode",
      "com.facebook.presto.execution.MockQueryExecution",
      "com.facebook.presto.testing.TestingHandle",
      "com.facebook.presto.spi.ConnectorTableLayout",
      "com.facebook.presto.common.predicate.TupleDomain",
      "com.facebook.presto.kafka.KafkaHandleResolver",
      "com.facebook.presto.spi.ConnectorId",
      "com.facebook.presto.metadata.AnalyzeTableHandle",
      "org.apache.kafka.common.metrics.MetricConfig",
      "org.apache.kafka.common.metrics.Sensor$RecordingLevel",
      "com.facebook.presto.split.EmptySplit",
      "com.facebook.presto.tpch.TpchTableHandle",
      "com.facebook.presto.common.type.P4HyperLogLogType",
      "com.facebook.presto.common.predicate.Domain",
      "com.facebook.presto.common.predicate.AllOrNoneValueSet",
      "org.apache.kafka.common.security.auth.KafkaPrincipal",
      "com.facebook.presto.common.type.VarcharEnumType",
      "com.facebook.presto.common.type.TimeType",
      "com.facebook.presto.common.type.DoubleType",
      "com.facebook.presto.kafka.KafkaTopicFieldDescription",
      "com.facebook.presto.common.type.AbstractIntType",
      "com.facebook.presto.common.type.RealType",
      "com.google.common.primitives.Chars",
      "com.google.common.primitives.Chars$CharArrayAsList",
      "org.joda.time.format.DateTimeFormat",
      "org.joda.time.format.DateTimeFormatterBuilder",
      "org.joda.time.DateTimeFieldType$StandardDateTimeFieldType",
      "org.joda.time.DurationFieldType$StandardDurationFieldType",
      "org.joda.time.DurationFieldType",
      "org.joda.time.DateTimeFieldType",
      "org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter",
      "org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber",
      "org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral",
      "org.joda.time.format.DateTimeFormatterBuilder$Composite",
      "org.joda.time.format.DateTimeFormatter",
      "org.joda.time.UTCDateTimeZone",
      "org.joda.time.DateTimeZone",
      "com.facebook.presto.execution.QueryIdGenerator",
      "org.joda.time.DateTimeUtils$SystemMillisProvider",
      "org.joda.time.DateTimeUtils",
      "org.joda.time.Chronology",
      "org.joda.time.chrono.BaseChronology",
      "org.joda.time.chrono.AssembledChronology",
      "org.joda.time.DurationField",
      "org.joda.time.field.MillisDurationField",
      "org.joda.time.field.BaseDurationField",
      "org.joda.time.field.PreciseDurationField",
      "org.joda.time.DateTimeField",
      "org.joda.time.field.BaseDateTimeField",
      "org.joda.time.field.PreciseDurationDateTimeField",
      "org.joda.time.field.PreciseDateTimeField",
      "org.joda.time.field.DecoratedDateTimeField",
      "org.joda.time.field.ZeroIsMaxDateTimeField",
      "org.joda.time.chrono.BasicChronology$HalfdayField",
      "org.joda.time.chrono.BasicChronology",
      "org.joda.time.chrono.BasicGJChronology",
      "org.joda.time.chrono.AssembledChronology$Fields",
      "org.joda.time.field.ImpreciseDateTimeField",
      "org.joda.time.chrono.BasicYearDateTimeField",
      "org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField",
      "org.joda.time.chrono.GJYearOfEraDateTimeField",
      "org.joda.time.field.OffsetDateTimeField",
      "org.joda.time.field.DividedDateTimeField",
      "org.joda.time.field.DecoratedDurationField",
      "org.joda.time.field.ScaledDurationField",
      "org.joda.time.field.RemainderDateTimeField",
      "org.joda.time.chrono.GJEraDateTimeField",
      "org.joda.time.chrono.GJDayOfWeekDateTimeField",
      "org.joda.time.chrono.BasicDayOfMonthDateTimeField",
      "org.joda.time.chrono.BasicDayOfYearDateTimeField",
      "org.joda.time.chrono.BasicMonthOfYearDateTimeField",
      "org.joda.time.chrono.GJMonthOfYearDateTimeField",
      "org.joda.time.chrono.BasicWeekyearDateTimeField",
      "org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField",
      "org.joda.time.field.UnsupportedDurationField",
      "org.joda.time.chrono.GregorianChronology",
      "org.joda.time.chrono.ISOYearOfEraDateTimeField",
      "org.joda.time.chrono.ISOChronology",
      "org.joda.time.tz.ZoneInfoProvider",
      "org.joda.time.tz.ZoneInfoProvider$1",
      "org.joda.time.tz.DateTimeZoneBuilder",
      "org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone",
      "org.joda.time.tz.DateTimeZoneBuilder$DSTZone",
      "org.joda.time.tz.DateTimeZoneBuilder$Recurrence",
      "org.joda.time.tz.DateTimeZoneBuilder$OfYear",
      "org.joda.time.tz.CachedDateTimeZone",
      "org.joda.time.chrono.ZonedChronology",
      "org.joda.time.chrono.ZonedChronology$ZonedDurationField",
      "org.joda.time.chrono.ZonedChronology$ZonedDateTimeField",
      "org.joda.time.chrono.BasicChronology$YearInfo",
      "org.joda.time.format.FormatUtils",
      "com.facebook.presto.metadata.RemoteTransactionHandle",
      "kafka.utils.DelayedItem",
      "com.typesafe.scalalogging.Logger$",
      "com.typesafe.scalalogging.Logger",
      "kafka.utils.Log4jController",
      "kafka.utils.CoreUtils$",
      "scala.runtime.BoxedUnit",
      "kafka.utils.Log4jControllerRegistration$",
      "org.apache.kafka.common.utils.SystemTime",
      "org.apache.kafka.common.utils.Time",
      "org.apache.kafka.common.requests.RequestHeader",
      "org.antlr.v4.runtime.misc.Pair",
      "org.antlr.v4.runtime.CommonToken",
      "com.facebook.presto.spi.HostAddress",
      "com.facebook.presto.testing.TestingSplit",
      "com.facebook.presto.tpch.TpchSplit",
      "com.facebook.presto.split.MockSplitSource$MockConnectorSplit",
      "com.facebook.presto.common.type.HyperLogLogType",
      "com.facebook.presto.spi.session.SessionPropertyConfigurationManager$SystemSessionPropertyConfiguration",
      "com.google.common.collect.IndexedImmutableSet",
      "com.google.common.collect.RegularImmutableMap$KeySet",
      "com.google.common.collect.CollectSpliterators",
      "com.google.common.collect.CollectSpliterators$1WithCharacteristics",
      "com.google.common.collect.ImmutableList$Builder",
      "com.facebook.presto.tpch.TpchTableLayoutHandle",
      "com.facebook.presto.kafka.KafkaTableHandle",
      "com.facebook.presto.execution.Location",
      "com.facebook.presto.split.RemoteSplit",
      "org.antlr.v4.runtime.RuleContext",
      "org.antlr.v4.runtime.ParserRuleContext",
      "com.facebook.presto.type.TypeCalculationParser$TypeCalculationContext",
      "com.facebook.presto.kafka.KafkaColumnHandle",
      "com.google.common.base.MoreObjects",
      "com.google.common.base.MoreObjects$ToStringHelper",
      "com.google.common.base.MoreObjects$ToStringHelper$ValueHolder",
      "com.facebook.presto.transaction.TransactionId",
      "com.facebook.presto.transaction.TransactionManager",
      "com.facebook.airlift.log.Logger",
      "com.facebook.presto.transaction.InMemoryTransactionManager",
      "com.facebook.presto.metadata.CatalogManager",
      "com.google.common.util.concurrent.MoreExecutors",
      "com.google.common.util.concurrent.MoreExecutors$DirectExecutor",
      "com.facebook.presto.security.DenyAllAccessControl",
      "com.google.common.collect.SingletonImmutableList",
      "com.google.common.collect.Iterators$9",
      "com.facebook.presto.spi.PrestoException",
      "com.facebook.presto.spi.NotFoundException",
      "com.facebook.presto.spi.TableNotFoundException",
      "com.facebook.presto.spi.ErrorType",
      "com.facebook.presto.spi.ErrorCode",
      "com.facebook.presto.spi.StandardErrorCode",
      "com.facebook.presto.spi.Constraint",
      "com.facebook.presto.spi.ConnectorTableMetadata",
      "org.glassfish.jersey.client.ClientConfig",
      "org.glassfish.jersey.client.ClientConfig$State",
      "org.glassfish.jersey.internal.util.collection.Values$1",
      "org.glassfish.jersey.internal.util.collection.Values$2",
      "org.glassfish.jersey.internal.util.collection.Values",
      "org.glassfish.jersey.internal.util.collection.Values$LazyValueImpl",
      "org.glassfish.jersey.model.internal.CommonConfig",
      "org.glassfish.jersey.model.internal.ComponentBag",
      "org.glassfish.jersey.internal.util.ReflectionHelper$1",
      "org.glassfish.jersey.internal.util.TypeVisitor",
      "org.glassfish.jersey.internal.util.ReflectionHelper$11",
      "org.glassfish.jersey.internal.util.ReflectionHelper$2",
      "org.glassfish.jersey.internal.util.ReflectionHelper",
      "org.glassfish.jersey.internal.ServiceFinder",
      "org.glassfish.jersey.internal.util.ReflectionHelper$8",
      "org.glassfish.jersey.internal.ServiceFinder$ServiceIteratorProvider",
      "org.glassfish.jersey.internal.ServiceFinder$DefaultServiceIteratorProvider",
      "org.glassfish.jersey.internal.ServiceFinder$AbstractLazyIterator",
      "org.glassfish.jersey.internal.ServiceFinder$LazyObjectIterator",
      "org.glassfish.jersey.client.HttpUrlConnectorProvider$DefaultConnectionFactory",
      "org.glassfish.jersey.client.HttpUrlConnectorProvider",
      "org.glassfish.jersey.internal.Errors",
      "org.glassfish.jersey.internal.inject.Providers$ProviderRuntime",
      "org.glassfish.jersey.internal.inject.Providers",
      "org.glassfish.jersey.model.ContractProvider",
      "org.glassfish.jersey.model.ContractProvider$Builder",
      "org.antlr.v4.runtime.CommonTokenFactory",
      "org.testng.internal.Configuration",
      "org.testng.internal.annotations.JDK15AnnotationFinder",
      "org.testng.internal.annotations.DefaultAnnotationTransformer",
      "org.testng.internal.annotations.JDK15TagFactory$1",
      "org.testng.internal.annotations.JDK15TagFactory$2",
      "org.testng.internal.annotations.JDK15TagFactory",
      "org.testng.SuiteRunner",
      "org.testng.TestListenerAdapter",
      "org.testng.SuiteRunState",
      "org.testng.internal.Attributes",
      "org.testng.internal.Utils$1",
      "org.testng.internal.Utils",
      "org.testng.SuiteRunner$DefaultTestRunnerFactory",
      "org.testng.SuiteRunner$1",
      "org.glassfish.jersey.internal.AbstractRuntimeDelegate",
      "org.glassfish.jersey.server.internal.RuntimeDelegateImpl",
      "org.glassfish.jersey.internal.inject.AbstractBinder",
      "org.glassfish.jersey.message.internal.MessagingBinders$HeaderDelegateProviders",
      "org.glassfish.jersey.message.internal.CacheControlProvider",
      "org.glassfish.jersey.message.internal.CookieProvider",
      "org.glassfish.jersey.message.internal.DateProvider",
      "org.glassfish.jersey.message.internal.EntityTagProvider",
      "org.glassfish.jersey.message.internal.LinkProvider",
      "org.glassfish.jersey.message.internal.LocaleProvider",
      "org.glassfish.jersey.internal.l10n.LocalizableMessageFactory",
      "org.glassfish.jersey.internal.l10n.Localizer",
      "org.glassfish.jersey.internal.LocalizationMessages",
      "org.glassfish.jersey.internal.l10n.LocalizableMessage",
      "org.glassfish.jersey.message.internal.MediaTypeProvider",
      "org.glassfish.jersey.message.internal.NewCookieProvider",
      "org.glassfish.jersey.message.internal.StringHeaderProvider",
      "org.glassfish.jersey.message.internal.UriProvider",
      "org.glassfish.jersey.message.internal.JerseyLink$Builder",
      "org.glassfish.jersey.uri.internal.JerseyUriBuilder",
      "org.glassfish.jersey.message.internal.Utils",
      "com.facebook.presto.spi.security.PrestoPrincipal",
      "org.glassfish.hk2.utilities.DescriptorImpl",
      "org.glassfish.hk2.api.DescriptorType",
      "com.facebook.presto.metadata.QualifiedTablePrefix",
      "com.facebook.presto.metadata.MetadataUtil",
      "com.facebook.presto.common.type.DecimalType",
      "com.facebook.presto.common.type.ShortDecimalType",
      "org.testng.junit.JUnitTestClass",
      "org.testng.junit.JUnit4TestClass",
      "org.testng.internal.BaseTestMethod$1",
      "org.testng.internal.BaseTestMethod",
      "org.testng.junit.JUnitTestMethod",
      "org.testng.junit.JUnit4TestMethod",
      "org.testng.internal.ConstructorOrMethod",
      "org.testng.junit.JUnit4SpockMethod",
      "org.testng.junit.JUnit4ConfigurationMethod",
      "io.airlift.slice.SliceOutput",
      "io.airlift.slice.OutputStreamSliceOutput",
      "com.fasterxml.jackson.databind.introspect.AnnotationCollector$TwoAnnotations",
      "com.facebook.presto.spi.ColumnMetadata",
      "com.facebook.presto.kafka.KafkaTableLayoutHandle",
      "com.facebook.presto.common.block.ByteArrayBlockBuilder",
      "org.glassfish.jersey.server.ResourceConfig",
      "org.glassfish.jersey.server.ResourceConfig$WrappingResourceConfig",
      "org.glassfish.jersey.server.ResourceConfig$State",
      "org.apache.bval.util.ObjectWrapper",
      "org.apache.bval.util.Lazy",
      "org.apache.bval.util.Validate",
      "org.apache.bval.util.Exceptions",
      "com.facebook.presto.sql.tree.NodeLocation",
      "com.facebook.presto.sql.tree.Node",
      "com.facebook.presto.sql.tree.Expression",
      "com.facebook.presto.sql.tree.Identifier",
      "com.facebook.presto.sql.tree.Statement",
      "com.facebook.presto.sql.tree.Deallocate",
      "com.fasterxml.jackson.core.TreeCodec",
      "com.fasterxml.jackson.core.ObjectCodec",
      "com.fasterxml.jackson.databind.AnnotationIntrospector",
      "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
      "com.fasterxml.jackson.databind.util.ClassUtil",
      "com.fasterxml.jackson.databind.ext.Java7Support",
      "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
      "com.fasterxml.jackson.databind.util.LRUMap",
      "com.fasterxml.jackson.databind.cfg.BaseSettings",
      "com.fasterxml.jackson.databind.type.TypeParser",
      "com.fasterxml.jackson.databind.type.TypeBindings",
      "com.fasterxml.jackson.core.type.ResolvedType",
      "com.fasterxml.jackson.databind.JavaType",
      "com.fasterxml.jackson.databind.type.TypeBase",
      "com.fasterxml.jackson.databind.type.SimpleType",
      "com.fasterxml.jackson.databind.type.TypeFactory",
      "com.fasterxml.jackson.databind.util.StdDateFormat",
      "com.fasterxml.jackson.core.Base64Variant",
      "com.fasterxml.jackson.core.Base64Variants",
      "com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator",
      "com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Base",
      "com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator",
      "com.fasterxml.jackson.databind.ObjectMapper",
      "com.fasterxml.jackson.core.TokenStreamFactory",
      "com.fasterxml.jackson.core.JsonFactory$Feature",
      "com.fasterxml.jackson.core.JsonParser$Feature",
      "com.fasterxml.jackson.core.JsonGenerator$Feature",
      "com.fasterxml.jackson.core.io.CharTypes",
      "com.fasterxml.jackson.core.io.JsonStringEncoder",
      "com.fasterxml.jackson.core.io.SerializedString",
      "com.fasterxml.jackson.core.util.DefaultPrettyPrinter",
      "com.fasterxml.jackson.core.JsonFactory",
      "com.fasterxml.jackson.databind.MappingJsonFactory",
      "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer",
      "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo",
      "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer",
      "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo",
      "com.fasterxml.jackson.databind.jsontype.SubtypeResolver",
      "com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver",
      "com.fasterxml.jackson.databind.util.RootNameLookup",
      "com.fasterxml.jackson.databind.introspect.SimpleMixInResolver",
      "com.fasterxml.jackson.databind.introspect.ClassIntrospector",
      "com.fasterxml.jackson.databind.introspect.AnnotationCollector$NoAnnotations",
      "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
      "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver",
      "com.fasterxml.jackson.databind.introspect.Annotated",
      "com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators",
      "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
      "com.fasterxml.jackson.databind.BeanDescription",
      "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
      "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
      "com.fasterxml.jackson.databind.cfg.ConfigOverrides",
      "com.fasterxml.jackson.annotation.JsonInclude$Include",
      "com.fasterxml.jackson.annotation.JsonInclude$Value",
      "com.fasterxml.jackson.annotation.Nulls",
      "com.fasterxml.jackson.annotation.JsonSetter$Value",
      "com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility",
      "com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std",
      "com.fasterxml.jackson.annotation.JsonFormat$Shape",
      "com.fasterxml.jackson.annotation.JsonFormat$Features",
      "com.fasterxml.jackson.annotation.JsonFormat$Value",
      "com.fasterxml.jackson.databind.cfg.MapperConfig",
      "com.fasterxml.jackson.databind.cfg.ConfigOverride",
      "com.fasterxml.jackson.databind.cfg.ConfigOverride$Empty",
      "com.fasterxml.jackson.databind.MapperFeature",
      "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
      "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter",
      "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter",
      "com.fasterxml.jackson.core.util.DefaultIndenter",
      "com.fasterxml.jackson.core.util.Separators",
      "com.fasterxml.jackson.core.PrettyPrinter",
      "com.fasterxml.jackson.databind.SerializationConfig",
      "com.fasterxml.jackson.databind.cfg.ContextAttributes",
      "com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl",
      "com.fasterxml.jackson.databind.SerializationFeature",
      "com.fasterxml.jackson.databind.DeserializationConfig",
      "com.fasterxml.jackson.databind.DeserializationFeature",
      "com.fasterxml.jackson.databind.node.JsonNodeFactory",
      "com.fasterxml.jackson.databind.DatabindContext",
      "com.fasterxml.jackson.databind.JsonSerializer",
      "com.fasterxml.jackson.databind.ser.std.StdSerializer",
      "com.fasterxml.jackson.databind.ser.impl.FailingSerializer",
      "com.fasterxml.jackson.databind.ser.impl.UnknownSerializer",
      "com.fasterxml.jackson.databind.SerializerProvider",
      "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider",
      "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl",
      "com.fasterxml.jackson.databind.ser.std.NullSerializer",
      "com.fasterxml.jackson.databind.ser.SerializerCache",
      "com.fasterxml.jackson.databind.DeserializationContext",
      "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
      "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl",
      "com.fasterxml.jackson.databind.deser.DeserializerFactory",
      "com.fasterxml.jackson.databind.PropertyName",
      "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
      "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers",
      "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
      "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
      "com.fasterxml.jackson.databind.deser.DeserializerCache",
      "com.fasterxml.jackson.databind.ser.SerializerFactory",
      "com.fasterxml.jackson.databind.ser.std.StdScalarSerializer",
      "com.fasterxml.jackson.databind.ser.std.StringSerializer",
      "com.fasterxml.jackson.databind.ser.std.ToStringSerializerBase",
      "com.fasterxml.jackson.databind.ser.std.ToStringSerializer",
      "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
      "com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base",
      "com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer",
      "com.fasterxml.jackson.core.JsonParser$NumberType",
      "com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer",
      "com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer",
      "com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer",
      "com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer",
      "com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer",
      "com.fasterxml.jackson.databind.ser.std.BooleanSerializer",
      "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
      "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
      "com.fasterxml.jackson.databind.ser.std.CalendarSerializer",
      "com.fasterxml.jackson.databind.ser.std.DateSerializer",
      "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
      "com.fasterxml.jackson.databind.ser.std.UUIDSerializer",
      "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
      "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
      "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
      "com.fasterxml.jackson.core.JsonParser",
      "com.fasterxml.jackson.core.util.JsonParserDelegate",
      "com.fasterxml.jackson.core.util.JsonParserSequence",
      "org.antlr.v4.runtime.atn.DecisionState",
      "org.antlr.v4.runtime.atn.BlockStartState",
      "org.antlr.v4.runtime.atn.PlusBlockStartState",
      "com.google.common.collect.ImmutableBiMapFauxverideShim",
      "com.google.common.collect.ImmutableBiMap",
      "com.google.common.collect.SingletonImmutableBiMap",
      "com.facebook.presto.sql.tree.ExplainOption",
      "com.facebook.presto.sql.tree.ExplainType",
      "com.facebook.presto.sql.tree.ExplainFormat",
      "com.facebook.presto.execution.TestSqlTaskExecution$TestingSplit",
      "com.facebook.presto.common.type.JsonType",
      "com.google.common.collect.ImmutableCollection",
      "com.google.common.collect.ImmutableSet",
      "com.google.common.collect.Lists"
    );
  }
}
