/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 00:17:33 GMT 2021
 */

package com.facebook.presto.kafka;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.kafka.KafkaConnectorConfig;
import com.facebook.presto.kafka.KafkaConnectorId;
import com.facebook.presto.kafka.KafkaConsumerManager;
import com.facebook.presto.kafka.KafkaSplitManager;
import com.facebook.presto.kafka.server.KafkaClusterMetadataSupplier;
import com.facebook.presto.spi.ConnectorSession;
import com.facebook.presto.spi.ConnectorTableLayoutHandle;
import com.facebook.presto.spi.connector.ConnectorSplitManager;
import com.facebook.presto.spi.connector.ConnectorTransactionHandle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class KafkaSplitManager_ESTest extends KafkaSplitManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      KafkaConnectorId kafkaConnectorId0 = mock(KafkaConnectorId.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(kafkaConnectorId0).toString();
      KafkaConnectorConfig kafkaConnectorConfig0 = mock(KafkaConnectorConfig.class, new ViolatedAssumptionAnswer());
      KafkaClusterMetadataSupplier kafkaClusterMetadataSupplier0 = mock(KafkaClusterMetadataSupplier.class, new ViolatedAssumptionAnswer());
      KafkaConsumerManager kafkaConsumerManager0 = mock(KafkaConsumerManager.class, new ViolatedAssumptionAnswer());
      KafkaSplitManager kafkaSplitManager0 = new KafkaSplitManager(kafkaConnectorId0, kafkaConnectorConfig0, kafkaClusterMetadataSupplier0, kafkaConsumerManager0);
      ConnectorTransactionHandle connectorTransactionHandle0 = mock(ConnectorTransactionHandle.class, new ViolatedAssumptionAnswer());
      ConnectorSession connectorSession0 = mock(ConnectorSession.class, new ViolatedAssumptionAnswer());
      ConnectorSplitManager.SplitSchedulingContext connectorSplitManager_SplitSchedulingContext0 = mock(ConnectorSplitManager.SplitSchedulingContext.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        kafkaSplitManager0.getSplits(connectorTransactionHandle0, connectorSession0, (ConnectorTableLayoutHandle) null, connectorSplitManager_SplitSchedulingContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // layout is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      KafkaConnectorConfig kafkaConnectorConfig0 = mock(KafkaConnectorConfig.class, new ViolatedAssumptionAnswer());
      KafkaClusterMetadataSupplier kafkaClusterMetadataSupplier0 = mock(KafkaClusterMetadataSupplier.class, new ViolatedAssumptionAnswer());
      KafkaConsumerManager kafkaConsumerManager0 = mock(KafkaConsumerManager.class, new ViolatedAssumptionAnswer());
      ConnectorSession connectorSession0 = mock(ConnectorSession.class, new ViolatedAssumptionAnswer());
      ConnectorTableLayoutHandle connectorTableLayoutHandle0 = mock(ConnectorTableLayoutHandle.class, new ViolatedAssumptionAnswer());
      ConnectorSplitManager.SplitSchedulingContext connectorSplitManager_SplitSchedulingContext0 = mock(ConnectorSplitManager.SplitSchedulingContext.class, new ViolatedAssumptionAnswer());
      KafkaConnectorId kafkaConnectorId0 = mock(KafkaConnectorId.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(kafkaConnectorId0).toString();
      KafkaSplitManager kafkaSplitManager0 = new KafkaSplitManager(kafkaConnectorId0, kafkaConnectorConfig0, kafkaClusterMetadataSupplier0, kafkaConsumerManager0);
      ConnectorTransactionHandle connectorTransactionHandle0 = mock(ConnectorTransactionHandle.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        kafkaSplitManager0.getSplits(connectorTransactionHandle0, connectorSession0, connectorTableLayoutHandle0, connectorSplitManager_SplitSchedulingContext0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // layout is not an instance of KafkaTableLayoutHandle
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      KafkaConnectorId kafkaConnectorId0 = mock(KafkaConnectorId.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(kafkaConnectorId0).toString();
      KafkaConnectorConfig kafkaConnectorConfig0 = mock(KafkaConnectorConfig.class, new ViolatedAssumptionAnswer());
      KafkaClusterMetadataSupplier kafkaClusterMetadataSupplier0 = mock(KafkaClusterMetadataSupplier.class, new ViolatedAssumptionAnswer());
      KafkaSplitManager kafkaSplitManager0 = null;
      try {
        kafkaSplitManager0 = new KafkaSplitManager(kafkaConnectorId0, kafkaConnectorConfig0, kafkaClusterMetadataSupplier0, (KafkaConsumerManager) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // consumerManager is null
         //
         verifyException("java.util.Objects", e);
      }
  }
}
