/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sun Nov 21 00:38:05 GMT 2021
 */

package com.facebook.presto.kafka;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class KafkaConnectorFactory_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.facebook.presto.kafka.KafkaConnectorFactory"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.dir", "/mnt/c/Users/Helen/Documents/DataScience18668/GroupProject/project/presto/presto-kafka"); 
    java.lang.System.setProperty("user.home", "/home/helen"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "helen"); 
    java.lang.System.setProperty("user.timezone", "America/Los_Angeles"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(KafkaConnectorFactory_ESTest_scaffolding.class.getClassLoader() ,
      "com.facebook.presto.metadata.FunctionAndTypeManager",
      "com.google.inject.Module",
      "com.google.inject.internal.InjectorShell$RootModule",
      "com.google.inject.internal.RealMapBinder",
      "com.facebook.presto.connector.ConnectorAwareNodeManager",
      "com.facebook.presto.spi.ConnectorHandleResolver",
      "com.google.inject.spi.ElementVisitor",
      "com.facebook.presto.testing.TestingConnectorContext",
      "com.facebook.presto.spi.function.StandardFunctionResolution",
      "com.facebook.presto.common.type.TypeSignature",
      "com.facebook.presto.transaction.InternalConnector",
      "com.facebook.presto.spi.connector.ConnectorTransactionHandle",
      "com.facebook.presto.spi.connector.ConnectorNodePartitioningProvider",
      "com.google.inject.util.Modules$CombinedModule",
      "com.facebook.presto.spi.connector.ConnectorRecordSetProvider",
      "com.facebook.presto.spi.Node",
      "com.google.inject.util.Modules$OverrideModule",
      "com.facebook.presto.spi.PageIndexerFactory",
      "com.facebook.presto.spi.connector.ConnectorPageSourceProvider",
      "com.facebook.presto.connector.MockConnectorFactory$MockConnector",
      "com.facebook.presto.spi.connector.ConnectorSplitManager",
      "com.facebook.presto.spi.NodeManager",
      "com.google.inject.internal.RealOptionalBinder",
      "com.google.inject.spi.Elements$ElementsAsModule",
      "com.facebook.presto.testing.TestingNodeManager",
      "com.facebook.presto.spi.relation.RowExpressionService",
      "com.google.inject.util.Modules$ModuleWriter",
      "com.google.inject.internal.RealMultibinder$PermitDuplicatesModule",
      "com.facebook.presto.spi.ErrorCodeSupplier",
      "com.facebook.presto.spi.plan.FilterStatsCalculatorService",
      "com.facebook.presto.spi.connector.ConnectorMetadata",
      "com.google.inject.util.Modules",
      "com.google.inject.internal.RealMultibinder",
      "com.google.inject.PrivateModule",
      "com.facebook.presto.spi.PrestoException",
      "com.facebook.presto.kafka.KafkaConnector",
      "com.google.inject.spi.DefaultElementVisitor",
      "com.facebook.presto.common.block.BlockEncodingSerde",
      "com.facebook.presto.spi.connector.ConnectorPlanOptimizerProvider",
      "com.google.inject.Binder",
      "com.facebook.presto.common.type.TypeManager",
      "com.google.inject.internal.ProviderMethodsModule",
      "com.facebook.presto.spi.function.FunctionMetadataManager",
      "com.facebook.presto.spi.connector.ConnectorPageSinkProvider",
      "com.facebook.presto.spi.connector.ConnectorContext",
      "com.facebook.presto.spi.PageSorter",
      "com.facebook.presto.common.type.Type",
      "com.facebook.presto.kafka.KafkaConnectorId",
      "com.facebook.presto.connector.ConnectorContextInstance",
      "com.facebook.presto.spi.connector.Connector",
      "com.google.inject.util.Modules$EmptyModule",
      "com.facebook.presto.spi.connector.ConnectorIndexProvider",
      "com.google.common.base.Throwables",
      "com.facebook.presto.spi.connector.ConnectorFactory",
      "com.facebook.presto.spi.connector.ConnectorMetadataUpdaterProvider",
      "com.facebook.presto.kafka.KafkaConnectorFactory",
      "com.google.inject.internal.InjectorShell$InheritedScannersModule",
      "com.google.inject.internal.RealMapBinder$MultimapBinder",
      "com.facebook.presto.spi.transaction.IsolationLevel",
      "com.facebook.presto.kafka.KafkaHandleResolver",
      "com.facebook.presto.spi.connector.ConnectorAccessControl",
      "com.google.inject.AbstractModule"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("com.facebook.presto.spi.connector.ConnectorContext", false, KafkaConnectorFactory_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("com.google.inject.Module", false, KafkaConnectorFactory_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(KafkaConnectorFactory_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.facebook.presto.kafka.KafkaConnectorFactory",
      "com.google.common.base.Throwables",
      "com.facebook.presto.kafka.KafkaHandleResolver"
    );
  }
}
