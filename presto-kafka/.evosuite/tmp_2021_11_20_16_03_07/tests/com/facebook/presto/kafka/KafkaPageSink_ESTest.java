/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 00:21:59 GMT 2021
 */

package com.facebook.presto.kafka;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.kafka.KafkaColumnHandle;
import com.facebook.presto.kafka.KafkaPageSink;
import com.facebook.presto.kafka.PlainTextKafkaProducerFactory;
import com.facebook.presto.kafka.encoder.RowEncoder;
import com.facebook.presto.kafka.server.KafkaClusterMetadataSupplier;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class KafkaPageSink_ESTest extends KafkaPageSink_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RowEncoder rowEncoder0 = mock(RowEncoder.class, new ViolatedAssumptionAnswer());
      PlainTextKafkaProducerFactory plainTextKafkaProducerFactory0 = mock(PlainTextKafkaProducerFactory.class, new ViolatedAssumptionAnswer());
      KafkaClusterMetadataSupplier kafkaClusterMetadataSupplier0 = mock(KafkaClusterMetadataSupplier.class, new ViolatedAssumptionAnswer());
      KafkaPageSink kafkaPageSink0 = null;
      try {
        kafkaPageSink0 = new KafkaPageSink("\"+)", "\"+)", (List<KafkaColumnHandle>) null, rowEncoder0, rowEncoder0, plainTextKafkaProducerFactory0, kafkaClusterMetadataSupplier0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.ImmutableList", e);
      }
  }
}
