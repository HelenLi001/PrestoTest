/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 00:14:43 GMT 2021
 */

package com.facebook.presto.kafka;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.common.type.BigintEnumType;
import com.facebook.presto.common.type.CharType;
import com.facebook.presto.kafka.KafkaColumnHandle;
import com.facebook.presto.kafka.KafkaTableHandle;
import com.facebook.presto.spi.SchemaTableName;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Optional;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class KafkaTableHandle_ESTest extends KafkaTableHandle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<String, Long> hashMap0 = new HashMap<String, Long>();
      BigintEnumType.LongEnumMap bigintEnumType_LongEnumMap0 = new BigintEnumType.LongEnumMap("SP<", hashMap0);
      Long long0 = new Long(38L);
      Optional<String> optional0 = bigintEnumType_LongEnumMap0.getKeyForValue(long0);
      Stack<KafkaColumnHandle> stack0 = new Stack<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("%s@%x{%s}", "Sm", "SP<", "Sm", "Sm", "na", optional0, optional0, stack0);
      SchemaTableName schemaTableName0 = kafkaTableHandle0.toSchemaTableName();
      assertEquals("%s@%x{%s}", kafkaTableHandle0.getConnectorId());
      assertEquals("Sm", kafkaTableHandle0.getTopicName());
      assertEquals("sp<", schemaTableName0.getTableName());
      assertEquals("na", kafkaTableHandle0.getMessageDataFormat());
      assertEquals("Sm", kafkaTableHandle0.getKeyDataFormat());
      assertEquals("sm", schemaTableName0.getSchemaName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Optional<String> optional0 = Optional.empty();
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("", "", "", "", "sUF<2KrmUF4AQ4t", "", optional0, optional0, arrayList0);
      String string0 = kafkaTableHandle0.getTopicName();
      assertEquals("", kafkaTableHandle0.getMessageDataFormat());
      assertEquals("sUF<2KrmUF4AQ4t", kafkaTableHandle0.getKeyDataFormat());
      assertEquals("", kafkaTableHandle0.getSchemaName());
      assertEquals("", string0);
      assertEquals("", kafkaTableHandle0.getConnectorId());
      assertEquals("", kafkaTableHandle0.getTableName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Optional<String> optional0 = Optional.of("messageDataSchemaLocation");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("T]qZ", "", "", "T]qZ", "N+qwD!8", "", optional0, optional0, arrayList0);
      String string0 = kafkaTableHandle0.getTableName();
      assertEquals("", kafkaTableHandle0.getMessageDataFormat());
      assertEquals("", kafkaTableHandle0.getSchemaName());
      assertEquals("T]qZ", kafkaTableHandle0.getTopicName());
      assertEquals("T]qZ", kafkaTableHandle0.getConnectorId());
      assertEquals("", string0);
      assertEquals("N+qwD!8", kafkaTableHandle0.getKeyDataFormat());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Optional<String> optional0 = Optional.of("messageDataSchemaLocation");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("T]qZ", "", "", "T]qZ", "N+qwD!8", "", optional0, optional0, arrayList0);
      String string0 = kafkaTableHandle0.getSchemaName();
      assertEquals("", string0);
      assertEquals("T]qZ", kafkaTableHandle0.getTopicName());
      assertEquals("N+qwD!8", kafkaTableHandle0.getKeyDataFormat());
      assertEquals("T]qZ", kafkaTableHandle0.getConnectorId());
      assertEquals("", kafkaTableHandle0.getTableName());
      assertEquals("", kafkaTableHandle0.getMessageDataFormat());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Optional<String> optional0 = Optional.empty();
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("", "", "", "@", "@", "", optional0, optional0, arrayList0);
      String string0 = kafkaTableHandle0.getMessageDataFormat();
      assertEquals("@", kafkaTableHandle0.getTopicName());
      assertEquals("@", kafkaTableHandle0.getKeyDataFormat());
      assertEquals("", kafkaTableHandle0.getSchemaName());
      assertEquals("", string0);
      assertEquals("", kafkaTableHandle0.getTableName());
      assertEquals("", kafkaTableHandle0.getConnectorId());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Optional<String> optional0 = Optional.of("");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("", "", "", "", "", "", optional0, optional0, arrayList0);
      String string0 = kafkaTableHandle0.getKeyDataFormat();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Optional<String> optional0 = Optional.of("org.jvnet.hk2.properties.bind.tracing.stacks");
      LinkedList<KafkaColumnHandle> linkedList0 = new LinkedList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("", "<q-:S59>!", "", "<q-:S59>!", "<q-:S59>!", "", optional0, optional0, linkedList0);
      String string0 = kafkaTableHandle0.getConnectorId();
      assertEquals("", string0);
      assertEquals("<q-:S59>!", kafkaTableHandle0.getSchemaName());
      assertEquals("", kafkaTableHandle0.getTableName());
      assertEquals("<q-:S59>!", kafkaTableHandle0.getKeyDataFormat());
      assertEquals("", kafkaTableHandle0.getMessageDataFormat());
      assertEquals("<q-:S59>!", kafkaTableHandle0.getTopicName());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Optional<String> optional0 = Optional.of("");
      LinkedList<KafkaColumnHandle> linkedList0 = new LinkedList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = null;
      try {
        kafkaTableHandle0 = new KafkaTableHandle("J<LS><xj[UB/,iKbZ#", "", (String) null, "a=a^Gw5/gW:E5KP", "tableName is null", "a=a^Gw5/gW:E5KP", optional0, optional0, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // tableName is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Optional<String> optional0 = Optional.empty();
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      arrayList0.add((KafkaColumnHandle) null);
      KafkaTableHandle kafkaTableHandle0 = null;
      try {
        kafkaTableHandle0 = new KafkaTableHandle("topicName", "topicName", "", "double", "double", "topicName", optional0, optional0, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Optional<String> optional0 = Optional.of("messageDataSchemaLocation");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", optional0, optional0, arrayList0);
      CharType charType0 = CharType.createCharType(300);
      KafkaColumnHandle kafkaColumnHandle0 = new KafkaColumnHandle("Request Entity Too Large", 300, "T]qZ", charType0, "T]qZ", "Zdf])P~+yIC|.+hMS", "T]qZ", false, false, false);
      arrayList0.add(kafkaColumnHandle0);
      KafkaTableHandle kafkaTableHandle1 = new KafkaTableHandle("T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", optional0, optional0, arrayList0);
      boolean boolean0 = kafkaTableHandle0.equals(kafkaTableHandle1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Optional<String> optional0 = Optional.of("messageDataSchemaLocation");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", optional0, optional0, arrayList0);
      KafkaTableHandle kafkaTableHandle1 = new KafkaTableHandle("T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", "JZ", optional0, optional0, arrayList0);
      boolean boolean0 = kafkaTableHandle0.equals(kafkaTableHandle1);
      assertFalse(boolean0);
      assertEquals("T]qZ", kafkaTableHandle1.getTopicName());
      assertEquals("T]qZ", kafkaTableHandle1.getSchemaName());
      assertEquals("T]qZ", kafkaTableHandle1.getKeyDataFormat());
      assertEquals("T]qZ", kafkaTableHandle1.getConnectorId());
      assertEquals("T]qZ", kafkaTableHandle1.getTableName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Optional<String> optional0 = Optional.of("messageDataSchemaLocation");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", optional0, optional0, arrayList0);
      KafkaTableHandle kafkaTableHandle1 = new KafkaTableHandle("T]qZ", "T]qZ", "T]qZ", "T]qZ", "\"uu**JFNV41yz7\"", "T]qZ", optional0, optional0, arrayList0);
      boolean boolean0 = kafkaTableHandle0.equals(kafkaTableHandle1);
      assertEquals("T]qZ", kafkaTableHandle1.getTopicName());
      assertEquals("T]qZ", kafkaTableHandle1.getSchemaName());
      assertFalse(boolean0);
      assertEquals("T]qZ", kafkaTableHandle1.getMessageDataFormat());
      assertEquals("T]qZ", kafkaTableHandle1.getConnectorId());
      assertEquals("T]qZ", kafkaTableHandle1.getTableName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Optional<String> optional0 = Optional.of("N+qwD!8");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("T]qZ", "T]qZ", "T]qZ", "T]qZ", "N+qwD!8", "T]qZ", optional0, optional0, arrayList0);
      KafkaTableHandle kafkaTableHandle1 = new KafkaTableHandle("T]qZ", "T]qZ", "T]qZ", "N+qwD!8", "", "JZ", optional0, optional0, arrayList0);
      boolean boolean0 = kafkaTableHandle0.equals(kafkaTableHandle1);
      assertEquals("T]qZ", kafkaTableHandle1.getSchemaName());
      assertEquals("JZ", kafkaTableHandle1.getMessageDataFormat());
      assertEquals("T]qZ", kafkaTableHandle1.getTableName());
      assertEquals("", kafkaTableHandle1.getKeyDataFormat());
      assertEquals("T]qZ", kafkaTableHandle1.getConnectorId());
      assertEquals("N+qwD!8", kafkaTableHandle1.getTopicName());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Optional<String> optional0 = Optional.of("messageDataSchemaLocation");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", optional0, optional0, arrayList0);
      KafkaTableHandle kafkaTableHandle1 = new KafkaTableHandle("T]qZ", "T]qZ", "com.facebook.presto.kafka.KafkaTableHandle", "T]qZ", "", "JZ", optional0, optional0, arrayList0);
      boolean boolean0 = kafkaTableHandle0.equals(kafkaTableHandle1);
      assertEquals("T]qZ", kafkaTableHandle1.getSchemaName());
      assertEquals("", kafkaTableHandle1.getKeyDataFormat());
      assertEquals("T]qZ", kafkaTableHandle1.getConnectorId());
      assertEquals("com.facebook.presto.kafka.KafkaTableHandle", kafkaTableHandle1.getTableName());
      assertFalse(boolean0);
      assertEquals("T]qZ", kafkaTableHandle1.getTopicName());
      assertEquals("JZ", kafkaTableHandle1.getMessageDataFormat());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Optional<String> optional0 = Optional.of("T]qZ");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", optional0, optional0, arrayList0);
      KafkaTableHandle kafkaTableHandle1 = new KafkaTableHandle("T]qZ", "topicName", "psC7^}X(n]QC", "T]qZ", "T]qZ", "T]qZ", optional0, optional0, arrayList0);
      boolean boolean0 = kafkaTableHandle0.equals(kafkaTableHandle1);
      assertEquals("psC7^}X(n]QC", kafkaTableHandle1.getTableName());
      assertEquals("T]qZ", kafkaTableHandle1.getKeyDataFormat());
      assertEquals("T]qZ", kafkaTableHandle1.getTopicName());
      assertEquals("T]qZ", kafkaTableHandle1.getConnectorId());
      assertEquals("topicName", kafkaTableHandle1.getSchemaName());
      assertEquals("T]qZ", kafkaTableHandle1.getMessageDataFormat());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Optional<String> optional0 = Optional.of("mssageDtaSchemaLocGtion");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", optional0, optional0, arrayList0);
      KafkaTableHandle kafkaTableHandle1 = new KafkaTableHandle("keyDataFormat is null", "JZ", "", "T]qZ", "Y8aHdbM57g'm", "JZ", optional0, optional0, arrayList0);
      boolean boolean0 = kafkaTableHandle0.equals(kafkaTableHandle1);
      assertEquals("", kafkaTableHandle1.getTableName());
      assertFalse(boolean0);
      assertEquals("keyDataFormat is null", kafkaTableHandle1.getConnectorId());
      assertEquals("JZ", kafkaTableHandle1.getSchemaName());
      assertEquals("JZ", kafkaTableHandle1.getMessageDataFormat());
      assertEquals("T]qZ", kafkaTableHandle1.getTopicName());
      assertEquals("Y8aHdbM57g'm", kafkaTableHandle1.getKeyDataFormat());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Optional<String> optional0 = Optional.of("messageDataSchemaLocation");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", optional0, optional0, arrayList0);
      KafkaTableHandle kafkaTableHandle1 = new KafkaTableHandle("T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", optional0, optional0, arrayList0);
      boolean boolean0 = kafkaTableHandle0.equals(kafkaTableHandle1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Optional<String> optional0 = Optional.of("messageDataSchemaLocation");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("T]qZ", "T]qZ", "T]qZ", "T]qZ", "N+qwD!8", "T]qZ", optional0, optional0, arrayList0);
      boolean boolean0 = kafkaTableHandle0.equals((Object) null);
      assertEquals("T]qZ", kafkaTableHandle0.getConnectorId());
      assertEquals("N+qwD!8", kafkaTableHandle0.getKeyDataFormat());
      assertEquals("T]qZ", kafkaTableHandle0.getTableName());
      assertFalse(boolean0);
      assertEquals("T]qZ", kafkaTableHandle0.getMessageDataFormat());
      assertEquals("T]qZ", kafkaTableHandle0.getSchemaName());
      assertEquals("T]qZ", kafkaTableHandle0.getTopicName());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Optional<String> optional0 = Optional.of("messageDataSchemaLocation");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", optional0, optional0, arrayList0);
      boolean boolean0 = kafkaTableHandle0.equals(kafkaTableHandle0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Optional<String> optional0 = Optional.of("messageDataSchemaLocation");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", optional0, optional0, arrayList0);
      boolean boolean0 = kafkaTableHandle0.equals("T]qZ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Optional<String> optional0 = Optional.of("messageDataSchemaLocation");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", optional0, optional0, arrayList0);
      String string0 = kafkaTableHandle0.getKeyDataFormat();
      assertEquals("T]qZ", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Optional<String> optional0 = Optional.of("messageDataSchemaLocation");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", optional0, optional0, arrayList0);
      String string0 = kafkaTableHandle0.getConnectorId();
      assertEquals("T]qZ", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Optional<String> optional0 = Optional.of("messageDataSchemaLocation");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("T]qZ", "T]qZ", "T]qZ", "T]qZ", "N+qwD!8", "T]qZ", optional0, optional0, arrayList0);
      String string0 = kafkaTableHandle0.getTableName();
      assertEquals("N+qwD!8", kafkaTableHandle0.getKeyDataFormat());
      assertEquals("T]qZ", kafkaTableHandle0.getSchemaName());
      assertEquals("T]qZ", kafkaTableHandle0.getTopicName());
      assertEquals("T]qZ", string0);
      assertEquals("T]qZ", kafkaTableHandle0.getConnectorId());
      assertEquals("T]qZ", kafkaTableHandle0.getMessageDataFormat());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Optional<String> optional0 = Optional.ofNullable("[e!Z");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("[e!Z", "[e!Z", "[e!Z", "[e!Z", "coluAmns is null", "[e!Z", optional0, optional0, arrayList0);
      String string0 = kafkaTableHandle0.toString();
      assertEquals("KafkaTableHandle{connectorId=[e!Z, schemaName=[e!Z, tableName=[e!Z, topicName=[e!Z, keyDataFormat=coluAmns is null, messageDataFormat=[e!Z, keyDataSchemaLocation=Optional[[e!Z], messageDataSchemaLocation=Optional[[e!Z], columns=[]}", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Optional<String> optional0 = Optional.ofNullable("[e!Z");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("[e!Z", "[e!Z", "[e!Z", "[e!Z", "coluAmns is null", "[e!Z", optional0, optional0, arrayList0);
      kafkaTableHandle0.getKeyDataSchemaLocation();
      assertEquals("[e!Z", kafkaTableHandle0.getConnectorId());
      assertEquals("[e!Z", kafkaTableHandle0.getTableName());
      assertEquals("[e!Z", kafkaTableHandle0.getMessageDataFormat());
      assertEquals("[e!Z", kafkaTableHandle0.getTopicName());
      assertEquals("[e!Z", kafkaTableHandle0.getSchemaName());
      assertEquals("coluAmns is null", kafkaTableHandle0.getKeyDataFormat());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Optional<String> optional0 = Optional.empty();
      Vector<KafkaColumnHandle> vector0 = new Vector<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("|Ny~;X$[cWM&~;l:8B", "|Ny~;X$[cWM&~;l:8B", "", "Session already has an active transaction", "", "|Ny~;X$[cWM&~;l:8B", optional0, optional0, vector0);
      kafkaTableHandle0.hashCode();
      assertEquals("", kafkaTableHandle0.getTableName());
      assertEquals("|Ny~;X$[cWM&~;l:8B", kafkaTableHandle0.getSchemaName());
      assertEquals("", kafkaTableHandle0.getKeyDataFormat());
      assertEquals("Session already has an active transaction", kafkaTableHandle0.getTopicName());
      assertEquals("|Ny~;X$[cWM&~;l:8B", kafkaTableHandle0.getMessageDataFormat());
      assertEquals("|Ny~;X$[cWM&~;l:8B", kafkaTableHandle0.getConnectorId());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Optional<String> optional0 = Optional.ofNullable("[e!Z");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("[e!Z", "[e!Z", "[e!Z", "[e!Z", "coluAmns is null", "[e!Z", optional0, optional0, arrayList0);
      kafkaTableHandle0.getColumns();
      assertEquals("[e!Z", kafkaTableHandle0.getMessageDataFormat());
      assertEquals("coluAmns is null", kafkaTableHandle0.getKeyDataFormat());
      assertEquals("[e!Z", kafkaTableHandle0.getTopicName());
      assertEquals("[e!Z", kafkaTableHandle0.getSchemaName());
      assertEquals("[e!Z", kafkaTableHandle0.getTableName());
      assertEquals("[e!Z", kafkaTableHandle0.getConnectorId());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Optional<String> optional0 = Optional.of("messageDataSchemaLocation");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", optional0, optional0, arrayList0);
      String string0 = kafkaTableHandle0.getMessageDataFormat();
      assertEquals("T]qZ", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Optional<String> optional0 = Optional.empty();
      Vector<KafkaColumnHandle> vector0 = new Vector<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("|Ny~;X$[cWM&~;l:8B", "|Ny~;X$[cWM&~;l:8B", "", "Session already has an active transaction", "", "|Ny~;X$[cWM&~;l:8B", optional0, optional0, vector0);
      // Undeclared exception!
      try { 
        kafkaTableHandle0.toSchemaTableName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // tableName is empty
         //
         verifyException("com.facebook.presto.spi.SchemaUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Optional<String> optional0 = Optional.of("messageDataSchemaLocation");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", optional0, optional0, arrayList0);
      Optional<String> optional1 = kafkaTableHandle0.getMessageDataSchemaLocation();
      assertSame(optional1, optional0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Optional<String> optional0 = Optional.of("messageDataSchemaLocation");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", "T]qZ", optional0, optional0, arrayList0);
      String string0 = kafkaTableHandle0.getSchemaName();
      assertEquals("T]qZ", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Optional<String> optional0 = Optional.of("N+qwD!8");
      ArrayList<KafkaColumnHandle> arrayList0 = new ArrayList<KafkaColumnHandle>();
      KafkaTableHandle kafkaTableHandle0 = new KafkaTableHandle("T]qZ", "T]qZ", "T]qZ", "T]qZ", "N+qwD!8", "T]qZ", optional0, optional0, arrayList0);
      String string0 = kafkaTableHandle0.getTopicName();
      assertEquals("N+qwD!8", kafkaTableHandle0.getKeyDataFormat());
      assertEquals("T]qZ", kafkaTableHandle0.getConnectorId());
      assertEquals("T]qZ", kafkaTableHandle0.getTableName());
      assertEquals("T]qZ", string0);
      assertEquals("T]qZ", kafkaTableHandle0.getMessageDataFormat());
      assertEquals("T]qZ", kafkaTableHandle0.getSchemaName());
  }
}
