/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 06:52:43 GMT 2021
 */

package com.facebook.presto.kudu;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.common.type.BigintEnumType;
import com.facebook.presto.common.type.BigintType;
import com.facebook.presto.common.type.KdbTreeType;
import com.facebook.presto.common.type.Type;
import com.facebook.presto.common.type.UnknownType;
import com.facebook.presto.kudu.KuduClientSession;
import com.facebook.presto.kudu.KuduConnectorId;
import com.facebook.presto.kudu.KuduInsertTableHandle;
import com.facebook.presto.kudu.KuduSplit;
import com.facebook.presto.kudu.KuduTableHandle;
import com.facebook.presto.kudu.KuduTableLayoutHandle;
import com.facebook.presto.kudu.properties.RangeBoundValue;
import com.facebook.presto.kudu.properties.RangePartition;
import com.facebook.presto.kudu.schema.NoSchemaEmulation;
import com.facebook.presto.kudu.schema.SchemaEmulation;
import com.facebook.presto.kudu.schema.SchemaEmulationByTableNameConvention;
import com.facebook.presto.spi.ColumnMetadata;
import com.facebook.presto.spi.ConnectorTableMetadata;
import com.facebook.presto.spi.SchemaTableName;
import com.facebook.presto.spi.SchemaTablePrefix;
import com.facebook.presto.testing.TestingMetadata;
import com.google.common.collect.ImmutableList;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.IdentityHashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import org.apache.hadoop.security.UserGroupInformation;
import org.apache.kudu.client.AlterTableResponse;
import org.apache.kudu.client.DeleteTableResponse;
import org.apache.kudu.client.KuduClient;
import org.apache.kudu.client.KuduSession;
import org.apache.kudu.client.KuduTable;
import org.apache.kudu.client.ListTablesResponse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.weakref.jmx.MBeanExporter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class KuduClientSession_ESTest extends KuduClientSession_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("l%DL&kx`");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      doReturn((AlterTableResponse) null).when(kuduClient0).alterTable(anyString() , any(org.apache.kudu.client.AlterTableOptions.class));
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, false);
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("}|g0sZgF+0D=;]");
      SchemaTableName schemaTableName0 = schemaEmulationByTableNameConvention0.fromRawName("com.facebook.presto.kudu.KuduClientSession$1");
      kuduClientSession0.renameColumn(schemaTableName0, "}|g0sZgF+0D=;]", kuduClientSession0.DEFAULT_SCHEMA);
      assertEquals("default", schemaTableName0.getSchemaName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("Error on doOpenTable: ");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      doReturn((AlterTableResponse) null).when(kuduClient0).alterTable(anyString() , any(org.apache.kudu.client.AlterTableOptions.class));
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("Error on doOpenTable: ");
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, schemaEmulationByTableNameConvention0, false);
      SchemaTableName schemaTableName0 = new SchemaTableName("default", "default");
      SchemaTablePrefix schemaTablePrefix0 = schemaTableName0.toSchemaTablePrefix();
      SchemaTableName schemaTableName1 = schemaTablePrefix0.toSchemaTableName();
      kuduClientSession0.renameTable(schemaTableName1, schemaTableName0);
      assertNotSame(schemaTableName1, schemaTableName0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("com.facebook.presto.kudu.KuduClientSession");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, false);
      List<String> list0 = kuduClientSession0.listSchemaNames();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      doReturn((DeleteTableResponse) null).when(kuduClient0).deleteTable(anyString());
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("");
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("");
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, schemaEmulationByTableNameConvention0, false);
      SchemaTablePrefix schemaTablePrefix0 = new SchemaTablePrefix("5wX,N<}", "0zj>5uMmkYy.^1%Hsin");
      SchemaTableName schemaTableName0 = schemaTablePrefix0.toSchemaTableName();
      kuduClientSession0.dropTable(schemaTableName0);
      assertEquals("5wx,n<}", schemaTableName0.getSchemaName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId(")");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, false);
      SchemaTableName schemaTableName0 = noSchemaEmulation0.fromRawName("p\"ZuE7q<6QxJ");
      // Undeclared exception!
      try { 
        kuduClientSession0.addColumn(schemaTableName0, (ColumnMetadata) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.kudu.KuduClientSession", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("G={f&rFt+-");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      doReturn((KuduTable) null).when(kuduClient0).openTable(anyString());
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      SchemaTableName schemaTableName0 = noSchemaEmulation0.fromRawName("G={f&rFt+-");
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, false);
      KuduTable kuduTable0 = kuduClientSession0.openTable(schemaTableName0);
      assertNull(kuduTable0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      KuduSession kuduSession0 = mock(KuduSession.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(kuduSession0).toString();
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      doReturn(kuduSession0).when(kuduClient0).newSession();
      KuduClientSession kuduClientSession0 = new KuduClientSession((KuduConnectorId) null, kuduClient0, (SchemaEmulation) null, false);
      KuduSession kuduSession1 = kuduClientSession0.newSession();
      assertSame(kuduSession1, kuduSession0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("XE");
      KuduClientSession kuduClientSession0 = new KuduClientSession((KuduConnectorId) null, (KuduClient) null, schemaEmulationByTableNameConvention0, true);
      SchemaTableName schemaTableName0 = schemaEmulationByTableNameConvention0.fromRawName("El:f?l5k(o{44");
      // Undeclared exception!
      try { 
        kuduClientSession0.renameTable(schemaTableName0, schemaTableName0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.security.SecurityUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("");
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, schemaEmulationByTableNameConvention0, false);
      // Undeclared exception!
      try { 
        kuduClientSession0.renameTable((SchemaTableName) null, (SchemaTableName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.kudu.schema.SchemaEmulationByTableNameConvention", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("CXx {Ts*^jk");
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, (KuduClient) null, noSchemaEmulation0, true);
      TestingMetadata.TestingTableHandle testingMetadata_TestingTableHandle0 = new TestingMetadata.TestingTableHandle();
      SchemaTableName schemaTableName0 = testingMetadata_TestingTableHandle0.getTableName();
      // Undeclared exception!
      try { 
        kuduClientSession0.renameColumn(schemaTableName0, "", "CXx {Ts*^jk");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.security.SecurityUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("com.facebook.presto.kudu.KuduClientSession$1");
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("com.facebook.presto.kudu.KuduClientSession$1");
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, (KuduClient) null, schemaEmulationByTableNameConvention0, true);
      SchemaTableName schemaTableName0 = new SchemaTableName("com.facebook.presto.kudu.KuduClientSession$1", "Z*!Hs={kcf0C!<`U>,X");
      // Undeclared exception!
      try { 
        kuduClientSession0.openTable(schemaTableName0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.security.SecurityUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("EWc.N))1;5wKOlKa6");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, false);
      // Undeclared exception!
      try { 
        kuduClientSession0.openTable((SchemaTableName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.kudu.schema.NoSchemaEmulation", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("The field must not be null");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, false);
      SchemaTableName schemaTableName0 = new SchemaTableName("U]wyTck-t\"ydl WS", "2n-;RQGR");
      // Undeclared exception!
      try { 
        kuduClientSession0.openTable(schemaTableName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Schema u]wytck-t\"ydl ws not found
         //
         verifyException("com.facebook.presto.kudu.schema.NoSchemaEmulation", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("Y;na<-%,c@*O");
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, (KuduClient) null, noSchemaEmulation0, true);
      // Undeclared exception!
      try { 
        kuduClientSession0.newSession();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.security.SecurityUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("");
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, schemaEmulationByTableNameConvention0, true);
      IdentityHashMap<String, Long> identityHashMap0 = new IdentityHashMap<String, Long>();
      BigintEnumType.LongEnumMap bigintEnumType_LongEnumMap0 = new BigintEnumType.LongEnumMap("E", identityHashMap0);
      BigintEnumType bigintEnumType0 = new BigintEnumType(bigintEnumType_LongEnumMap0);
      Long long0 = new Long((-1L));
      Optional<String> optional0 = bigintEnumType0.getEnumKeyForValue(long0);
      // Undeclared exception!
      try { 
        kuduClientSession0.listTables(optional0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.security.SecurityUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId(" has no range partition");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      doReturn((ListTablesResponse) null).when(kuduClient0).getTablesList();
      doReturn(false).when(kuduClient0).tableExists(anyString());
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("");
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, schemaEmulationByTableNameConvention0, false);
      // Undeclared exception!
      try { 
        kuduClientSession0.listSchemaNames();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.kudu.schema.SchemaEmulationByTableNameConvention", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("Q1NlKS*U");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, false);
      // Undeclared exception!
      try { 
        kuduClientSession0.getTableSchema((KuduTableHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.kudu.KuduClientSession", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("W");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, true);
      TestingMetadata.TestingTableHandle testingMetadata_TestingTableHandle0 = new TestingMetadata.TestingTableHandle();
      SchemaTableName schemaTableName0 = testingMetadata_TestingTableHandle0.getTableName();
      BigintType bigintType0 = BigintType.BIGINT;
      UnknownType unknownType0 = UnknownType.UNKNOWN;
      ImmutableList<Type> immutableList0 = ImmutableList.of((Type) bigintType0, (Type) bigintType0, (Type) bigintType0, (Type) bigintType0, (Type) bigintType0, (Type) bigintType0, (Type) bigintType0, (Type) unknownType0, (Type) unknownType0);
      KuduInsertTableHandle kuduInsertTableHandle0 = new KuduInsertTableHandle("cLe\r7", schemaTableName0, immutableList0);
      // Undeclared exception!
      try { 
        kuduClientSession0.getTableProperties(kuduInsertTableHandle0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.security.SecurityUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("1i89QqG");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, (SchemaEmulation) null, false);
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("I^Sv1fVVYd-Q'C=4b");
      SchemaTableName schemaTableName0 = schemaEmulationByTableNameConvention0.fromRawName("default");
      // Undeclared exception!
      try { 
        kuduClientSession0.dropTable(schemaTableName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.kudu.KuduClientSession", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("trueValue is null");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      doReturn((ListTablesResponse) null).when(kuduClient0).getTablesList(anyString());
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("trueValue is null");
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, schemaEmulationByTableNameConvention0, false);
      // Undeclared exception!
      try { 
        kuduClientSession0.dropSchema("trueValue is null");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.kudu.schema.SchemaEmulationByTableNameConvention", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("G={f&rFt+-");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, false);
      // Undeclared exception!
      try { 
        kuduClientSession0.dropSchema("G={f&rFt+-");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Schema G={f&rFt+- not found
         //
         verifyException("com.facebook.presto.kudu.schema.NoSchemaEmulation", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("$g\"~9Ro");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, (SchemaEmulation) null, false);
      // Undeclared exception!
      try { 
        kuduClientSession0.dropRangePartition((SchemaTableName) null, (RangePartition) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.kudu.KuduClientSession", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("6@-H@Ek>Rmxhc]");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, false);
      SchemaTableName schemaTableName0 = new SchemaTableName("Z'UqZ|1Z|a3zD0ah", "Z'UqZ|1Z|a3zD0ah");
      RangePartition rangePartition0 = new RangePartition((RangeBoundValue) null, (RangeBoundValue) null);
      // Undeclared exception!
      try { 
        kuduClientSession0.dropRangePartition(schemaTableName0, rangePartition0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Schema z'uqz|1z|a3zd0ah not found
         //
         verifyException("com.facebook.presto.kudu.schema.NoSchemaEmulation", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("v-#M%[wQ");
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, true);
      // Undeclared exception!
      try { 
        kuduClientSession0.dropColumn((SchemaTableName) null, "v-#M%[wQ");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.security.SecurityUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("");
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, (KuduClient) null, noSchemaEmulation0, false);
      SchemaTableName schemaTableName0 = noSchemaEmulation0.fromRawName("default");
      // Undeclared exception!
      try { 
        kuduClientSession0.dropColumn(schemaTableName0, "H=&Fe");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.kudu.KuduClientSession", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, false);
      TestingMetadata.TestingTableHandle testingMetadata_TestingTableHandle0 = new TestingMetadata.TestingTableHandle();
      SchemaTableName schemaTableName0 = testingMetadata_TestingTableHandle0.getTableName();
      // Undeclared exception!
      try { 
        kuduClientSession0.dropColumn(schemaTableName0, "fR*`s");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Schema test-schema not found
         //
         verifyException("com.facebook.presto.kudu.schema.NoSchemaEmulation", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("e/");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, true);
      // Undeclared exception!
      try { 
        kuduClientSession0.createTable((ConnectorTableMetadata) null, true);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.security.SecurityUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("");
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, (KuduClient) null, noSchemaEmulation0, false);
      // Undeclared exception!
      try { 
        kuduClientSession0.createTable((ConnectorTableMetadata) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.kudu.KuduClientSession", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("`7F!i@}wXORUhE<4");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, false);
      SchemaTableName schemaTableName0 = new SchemaTableName("w9^e93k`", "Unknown compression algorithm ");
      ArrayList<ColumnMetadata> arrayList0 = new ArrayList<ColumnMetadata>();
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      ConnectorTableMetadata connectorTableMetadata0 = new ConnectorTableMetadata(schemaTableName0, arrayList0, hashtable0);
      // Undeclared exception!
      try { 
        kuduClientSession0.createTable(connectorTableMetadata0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Schema w9^e93k` not found
         //
         verifyException("com.facebook.presto.kudu.schema.NoSchemaEmulation", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("addInputCpu is null");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("addInputCpu is null");
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, schemaEmulationByTableNameConvention0, true);
      // Undeclared exception!
      try { 
        kuduClientSession0.createSchema("addInputCpu is null");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.security.SecurityUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("com.facebook.presto.sql.tree.WindowFrame$Type");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, (SchemaEmulation) null, false);
      // Undeclared exception!
      try { 
        kuduClientSession0.createSchema("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.kudu.KuduClientSession", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("R7m");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, false);
      SchemaTableName schemaTableName0 = new SchemaTableName("default", "V6NO");
      KuduTableHandle kuduTableHandle0 = new KuduTableHandle("default", schemaTableName0);
      byte[] byteArray0 = new byte[5];
      KuduSplit kuduSplit0 = new KuduSplit(kuduTableHandle0, 0, byteArray0);
      // Undeclared exception!
      try { 
        kuduClientSession0.createScanner(kuduSplit0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Protocol message contained an invalid tag (zero).
         //
         verifyException("com.facebook.presto.kudu.KuduClientSession", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("Eror on doOpenTable ");
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("Eror on doOpenTable ");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, schemaEmulationByTableNameConvention0, false);
      // Undeclared exception!
      try { 
        kuduClientSession0.createScanner((KuduSplit) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.kudu.KuduClientSession", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = "l%DL\"6&kx`";
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("l%DL\"6&kx`");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClient kuduClient1 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      noSchemaEmulation0.listSchemaNames(kuduClient1);
      kuduConnectorId0.equals("l%DL\"6&kx`");
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, true);
      // Undeclared exception!
      try { 
        kuduClientSession0.buildKuduSplits((KuduTableLayoutHandle) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.security.SecurityUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("3s7)8RzML{V}");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("3s7)8RzML{V}");
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, schemaEmulationByTableNameConvention0, false);
      // Undeclared exception!
      try { 
        kuduClientSession0.buildKuduSplits((KuduTableLayoutHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.kudu.KuduClientSession", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("XE");
      KuduClientSession kuduClientSession0 = new KuduClientSession((KuduConnectorId) null, (KuduClient) null, schemaEmulationByTableNameConvention0, false);
      SchemaTableName schemaTableName0 = schemaEmulationByTableNameConvention0.fromRawName("El:f?l5k(o{44");
      // Undeclared exception!
      try { 
        kuduClientSession0.addRangePartition(schemaTableName0, (RangePartition) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.kudu.KuduClientSession", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClientSession kuduClientSession0 = new KuduClientSession((KuduConnectorId) null, kuduClient0, noSchemaEmulation0, false);
      SchemaTableName schemaTableName0 = new SchemaTableName("Ro(vbCP|", "default");
      // Undeclared exception!
      try { 
        kuduClientSession0.addColumn(schemaTableName0, (ColumnMetadata) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Schema ro(vbcp| not found
         //
         verifyException("com.facebook.presto.kudu.schema.NoSchemaEmulation", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("Error on doOpenTable: ");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      doReturn((ListTablesResponse) null).when(kuduClient0).getTablesList();
      Optional<String> optional0 = Optional.ofNullable("Error on doOpenTable: ");
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, false);
      // Undeclared exception!
      try { 
        kuduClientSession0.listTables(optional0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.kudu.KuduClientSession", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("Eror on doOpenTable ");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      doReturn((ListTablesResponse) null).when(kuduClient0).getTablesList(anyString());
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("Eror on doOpenTable ");
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, schemaEmulationByTableNameConvention0, false);
      Optional<String> optional0 = Optional.ofNullable("Eror on doOpenTable ");
      // Undeclared exception!
      try { 
        kuduClientSession0.listTables(optional0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.kudu.KuduClientSession", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("G={f&rFt+-");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      doReturn((KuduTable) null).when(kuduClient0).openTable(anyString());
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      SchemaTableName schemaTableName0 = noSchemaEmulation0.fromRawName("G={f&rFt+-");
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, false);
      KdbTreeType kdbTreeType0 = KdbTreeType.KDB_TREE;
      ImmutableList<Type> immutableList0 = ImmutableList.of((Type) kdbTreeType0, (Type) kdbTreeType0, (Type) kdbTreeType0, (Type) kdbTreeType0, (Type) kdbTreeType0, (Type) kdbTreeType0, (Type) kdbTreeType0, (Type) kdbTreeType0);
      KuduInsertTableHandle kuduInsertTableHandle0 = new KuduInsertTableHandle(": ", schemaTableName0, immutableList0, (KuduTable) null);
      // Undeclared exception!
      try { 
        kuduClientSession0.getTableProperties(kuduInsertTableHandle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.kudu.properties.KuduTableProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("G={f&rFt+-");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      doReturn((AlterTableResponse) null).when(kuduClient0).alterTable(anyString() , any(org.apache.kudu.client.AlterTableOptions.class));
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      SchemaTableName schemaTableName0 = noSchemaEmulation0.fromRawName("G={f&rFt+-");
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, false);
      kuduClientSession0.dropColumn(schemaTableName0, "Table ");
      assertEquals("default", schemaTableName0.getSchemaName());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, false);
      // Undeclared exception!
      try { 
        kuduClientSession0.createSchema("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Creating schema in Kudu connector not allowed if schema emulation is disabled.
         //
         verifyException("com.facebook.presto.kudu.schema.NoSchemaEmulation", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("Value %d exceeds MAX_INT");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, true);
      // Undeclared exception!
      try { 
        kuduClientSession0.listSchemaNames();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.security.SecurityUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, true);
      SchemaTableName schemaTableName0 = noSchemaEmulation0.fromRawName("default");
      // Undeclared exception!
      try { 
        kuduClientSession0.dropTable(schemaTableName0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.security.SecurityUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("");
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, schemaEmulationByTableNameConvention0, true);
      TestingMetadata.TestingTableHandle testingMetadata_TestingTableHandle0 = new TestingMetadata.TestingTableHandle();
      SchemaTableName schemaTableName0 = testingMetadata_TestingTableHandle0.getTableName();
      RangePartition rangePartition0 = new RangePartition((RangeBoundValue) null, (RangeBoundValue) null);
      // Undeclared exception!
      try { 
        kuduClientSession0.dropRangePartition(schemaTableName0, rangePartition0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.security.SecurityUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      doReturn((KuduSession) null).when(kuduClient0).newSession();
      KuduClientSession kuduClientSession0 = new KuduClientSession((KuduConnectorId) null, kuduClient0, (SchemaEmulation) null, false);
      KuduSession kuduSession0 = kuduClientSession0.newSession();
      assertNull(kuduSession0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("G={f&rFt+-");
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      SchemaTableName schemaTableName0 = noSchemaEmulation0.fromRawName("G={f&rFt+-");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, true);
      KuduTableHandle kuduTableHandle0 = new KuduTableHandle("default", schemaTableName0, (KuduTable) null);
      byte[] byteArray0 = new byte[6];
      KuduSplit kuduSplit0 = new KuduSplit(kuduTableHandle0, 1, byteArray0);
      // Undeclared exception!
      try { 
        kuduClientSession0.createScanner(kuduSplit0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.security.SecurityUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("[|4S");
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, true);
      // Undeclared exception!
      try { 
        kuduClientSession0.getTableSchema((KuduTableHandle) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.security.SecurityUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("XE");
      KuduClientSession kuduClientSession0 = new KuduClientSession((KuduConnectorId) null, (KuduClient) null, schemaEmulationByTableNameConvention0, true);
      SchemaTableName schemaTableName0 = schemaEmulationByTableNameConvention0.fromRawName("El:f?l5k(o{44");
      // Undeclared exception!
      try { 
        kuduClientSession0.addRangePartition(schemaTableName0, (RangePartition) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.security.SecurityUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId("G={f&rFt+-");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      doReturn((AlterTableResponse) null).when(kuduClient0).alterTable(anyString() , any(org.apache.kudu.client.AlterTableOptions.class));
      NoSchemaEmulation noSchemaEmulation0 = new NoSchemaEmulation();
      SchemaTableName schemaTableName0 = noSchemaEmulation0.fromRawName("G={f&rFt+-");
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, noSchemaEmulation0, false);
      kuduClientSession0.renameColumn(schemaTableName0, "G={f&rFt+-", "G={f&rFt+-");
      assertEquals("default", schemaTableName0.getSchemaName());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      KuduConnectorId kuduConnectorId0 = new KuduConnectorId(")");
      KuduClient kuduClient0 = mock(KuduClient.class, new ViolatedAssumptionAnswer());
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("com.facebook.presto.metadata.InMemoryNodeManager");
      KuduClientSession kuduClientSession0 = new KuduClientSession(kuduConnectorId0, kuduClient0, schemaEmulationByTableNameConvention0, true);
      // Undeclared exception!
      try { 
        kuduClientSession0.dropSchema("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.security.SecurityUtil", e);
      }
  }
}
