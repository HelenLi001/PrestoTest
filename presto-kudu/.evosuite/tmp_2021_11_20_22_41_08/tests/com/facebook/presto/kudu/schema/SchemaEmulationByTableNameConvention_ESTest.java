/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 06:56:16 GMT 2021
 */

package com.facebook.presto.kudu.schema;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.kudu.schema.SchemaEmulationByTableNameConvention;
import com.facebook.presto.spi.SchemaTableName;
import org.apache.kudu.client.KuduClient;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SchemaEmulationByTableNameConvention_ESTest extends SchemaEmulationByTableNameConvention_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("#WRql%@W8T:");
      // Undeclared exception!
      try { 
        schemaEmulationByTableNameConvention0.toRawName((SchemaTableName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.kudu.schema.SchemaEmulationByTableNameConvention", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("NUMERIC_VALUE_OUT_OF_RANGE");
      // Undeclared exception!
      try { 
        schemaEmulationByTableNameConvention0.fromRawName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("");
      // Undeclared exception!
      try { 
        schemaEmulationByTableNameConvention0.fromRawName("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // tableName is empty
         //
         verifyException("com.facebook.presto.spi.SchemaUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("");
      String string0 = schemaEmulationByTableNameConvention0.getPrefixForTablesOfSchema((String) null);
      assertEquals("null.", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("#WRql%@W8T:");
      // Undeclared exception!
      try { 
        schemaEmulationByTableNameConvention0.listSchemaNames((KuduClient) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.kudu.schema.SchemaEmulationByTableNameConvention", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("#WRql%@W8T:");
      String string0 = schemaEmulationByTableNameConvention0.getPrefixForTablesOfSchema("default");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("u6O)b4wg");
      SchemaTableName schemaTableName0 = schemaEmulationByTableNameConvention0.fromRawName("u6O)b4wgu6O)b4wg.");
      assertNull(schemaTableName0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("u6O)b4wg");
      SchemaTableName schemaTableName0 = schemaEmulationByTableNameConvention0.fromRawName("u6O)b4wg.");
      assertNull(schemaTableName0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("GC4L");
      SchemaTableName schemaTableName0 = schemaEmulationByTableNameConvention0.fromRawName("GC4L");
      assertNull(schemaTableName0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("");
      SchemaTableName schemaTableName0 = schemaEmulationByTableNameConvention0.fromRawName("Nested builder is not supported for this type.");
      assertNull(schemaTableName0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("");
      SchemaTableName schemaTableName0 = schemaEmulationByTableNameConvention0.fromRawName(".");
      assertNull(schemaTableName0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("byte\"array");
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention1 = new SchemaEmulationByTableNameConvention(".");
      SchemaTableName schemaTableName0 = schemaEmulationByTableNameConvention1.fromRawName("byte\"array");
      // Undeclared exception!
      try { 
        schemaEmulationByTableNameConvention0.toRawName(schemaTableName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table name conflicts with schema emulation settings. Table name must not start with 'byte\"array'.
         //
         verifyException("com.facebook.presto.kudu.schema.SchemaEmulationByTableNameConvention", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("");
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention1 = new SchemaEmulationByTableNameConvention("callback=");
      SchemaTableName schemaTableName0 = schemaEmulationByTableNameConvention1.fromRawName("e4A*[.x6#.5~|<Gh`q");
      // Undeclared exception!
      try { 
        schemaEmulationByTableNameConvention0.toRawName(schemaTableName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table name conflicts with schema emulation settings. No '.' allowed for tables in schema 'default'.
         //
         verifyException("com.facebook.presto.kudu.schema.SchemaEmulationByTableNameConvention", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("byte\"array");
      SchemaTableName schemaTableName0 = schemaEmulationByTableNameConvention0.fromRawName("getDefaultInstance");
      assertNotNull(schemaTableName0);
      
      String string0 = schemaEmulationByTableNameConvention0.toRawName(schemaTableName0);
      assertEquals("getdefaultinstance", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("");
      SchemaTableName schemaTableName0 = schemaEmulationByTableNameConvention0.fromRawName(":");
      assertNotNull(schemaTableName0);
      
      String string0 = schemaEmulationByTableNameConvention0.toRawName(schemaTableName0);
      assertEquals(":", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("");
      SchemaTableName schemaTableName0 = schemaEmulationByTableNameConvention0.fromRawName("e4A*[.x6#.5~|<Gh`q");
      assertNotNull(schemaTableName0);
      
      String string0 = schemaEmulationByTableNameConvention0.toRawName(schemaTableName0);
      assertEquals("x6#.5~|<gh`q", schemaTableName0.getTableName());
      assertEquals("e4a*[.x6#.5~|<gh`q", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention(".");
      // Undeclared exception!
      try { 
        schemaEmulationByTableNameConvention0.dropSchema((KuduClient) null, "default");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Deleting default schema not allowed.
         //
         verifyException("com.facebook.presto.kudu.schema.SchemaEmulationByTableNameConvention", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("gG/bQcX");
      // Undeclared exception!
      try { 
        schemaEmulationByTableNameConvention0.dropSchema((KuduClient) null, "gG/bQcX");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.kudu.schema.SchemaEmulationByTableNameConvention", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("");
      boolean boolean0 = schemaEmulationByTableNameConvention0.existsSchema((KuduClient) null, "default");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("Use SerializedForm");
      // Undeclared exception!
      try { 
        schemaEmulationByTableNameConvention0.existsSchema((KuduClient) null, "schema");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.kudu.schema.SchemaEmulationByTableNameConvention", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SchemaEmulationByTableNameConvention schemaEmulationByTableNameConvention0 = new SchemaEmulationByTableNameConvention("");
      // Undeclared exception!
      try { 
        schemaEmulationByTableNameConvention0.createSchema((KuduClient) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.kudu.schema.SchemaEmulationByTableNameConvention", e);
      }
  }
}
