/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 20 22:32:38 GMT 2021
 */

package com.facebook.presto.localfile;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.localfile.LocalFileConfig;
import com.facebook.presto.localfile.LocalFileTableHandle;
import com.facebook.presto.localfile.LocalFileTables;
import com.facebook.presto.spi.ColumnMetadata;
import com.facebook.presto.spi.SchemaTableName;
import com.facebook.presto.spi.SchemaTablePrefix;
import java.io.File;
import java.util.List;
import java.util.OptionalInt;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LocalFileTables_ESTest extends LocalFileTables_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LocalFileConfig localFileConfig0 = mock(LocalFileConfig.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(localFileConfig0).getHttpRequestLogLocation();
      LocalFileTables localFileTables0 = new LocalFileTables(localFileConfig0);
      SchemaTableName schemaTableName0 = LocalFileTables.HttpRequestLogTable.getSchemaTableName();
      LocalFileTableHandle localFileTableHandle0 = localFileTables0.getTable(schemaTableName0);
      assertNull(localFileTableHandle0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LocalFileConfig localFileConfig0 = mock(LocalFileConfig.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(localFileConfig0).getHttpRequestLogLocation();
      LocalFileTables localFileTables0 = new LocalFileTables(localFileConfig0);
      SchemaTableName schemaTableName0 = LocalFileTables.HttpRequestLogTable.getSchemaTableName();
      // Undeclared exception!
      try { 
        localFileTables0.getFiles(schemaTableName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("com.google.common.cache.LocalCache$Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LocalFileConfig localFileConfig0 = mock(LocalFileConfig.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(localFileConfig0).getHttpRequestLogLocation();
      LocalFileTables localFileTables0 = new LocalFileTables(localFileConfig0);
      // Undeclared exception!
      try { 
        localFileTables0.getFiles((SchemaTableName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LocalFileConfig localFileConfig0 = mock(LocalFileConfig.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(localFileConfig0).getHttpRequestLogFileNamePattern();
      doReturn("").when(localFileConfig0).getHttpRequestLogLocation();
      LocalFileTables localFileTables0 = new LocalFileTables(localFileConfig0);
      List<SchemaTableName> list0 = localFileTables0.getTables();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LocalFileConfig localFileConfig0 = mock(LocalFileConfig.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(localFileConfig0).getHttpRequestLogFileNamePattern();
      doReturn("").when(localFileConfig0).getHttpRequestLogLocation();
      LocalFileTables localFileTables0 = new LocalFileTables(localFileConfig0);
      SchemaTableName schemaTableName0 = LocalFileTables.HttpRequestLogTable.getSchemaTableName();
      List<File> list0 = localFileTables0.getFiles(schemaTableName0);
      assertEquals(4, list0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      List<ColumnMetadata> list0 = LocalFileTables.HttpRequestLogTable.getColumns();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LocalFileConfig localFileConfig0 = mock(LocalFileConfig.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(localFileConfig0).getHttpRequestLogFileNamePattern();
      doReturn("").when(localFileConfig0).getHttpRequestLogLocation();
      LocalFileTables localFileTables0 = new LocalFileTables(localFileConfig0);
      SchemaTableName schemaTableName0 = LocalFileTables.HttpRequestLogTable.getSchemaTableName();
      LocalFileTableHandle localFileTableHandle0 = localFileTables0.getTable(schemaTableName0);
      List<ColumnMetadata> list0 = localFileTables0.getColumns(localFileTableHandle0);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OptionalInt optionalInt0 = LocalFileTables.HttpRequestLogTable.getTimestampColumn();
      assertNotNull(optionalInt0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LocalFileConfig localFileConfig0 = mock(LocalFileConfig.class, new ViolatedAssumptionAnswer());
      doReturn("Could not find a pre-determined factory service for ", "7 EQ</8'|").when(localFileConfig0).getHttpRequestLogFileNamePattern();
      doReturn("Could not find a pre-determined factory service for ").when(localFileConfig0).getHttpRequestLogLocation();
      LocalFileTables localFileTables0 = new LocalFileTables(localFileConfig0);
      SchemaTablePrefix schemaTablePrefix0 = new SchemaTablePrefix("7 EQ</8'|", "7 EQ</8'|");
      SchemaTableName schemaTableName0 = schemaTablePrefix0.toSchemaTableName();
      OptionalInt optionalInt0 = LocalFileTables.HttpRequestLogTable.getServerAddressColumn();
      LocalFileTableHandle localFileTableHandle0 = new LocalFileTableHandle(schemaTableName0, optionalInt0, optionalInt0);
      // Undeclared exception!
      try { 
        localFileTables0.getColumns(localFileTableHandle0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Table 7 eq</8'|.7 eq</8'| not registered
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LocalFileConfig localFileConfig0 = mock(LocalFileConfig.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(localFileConfig0).getHttpRequestLogFileNamePattern();
      doReturn("IjKfMv? HDO)8C7$d").when(localFileConfig0).getHttpRequestLogLocation();
      LocalFileTables localFileTables0 = null;
      try {
        localFileTables0 = new LocalFileTables(localFileConfig0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // location does not exist
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LocalFileConfig localFileConfig0 = mock(LocalFileConfig.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(localFileConfig0).getHttpRequestLogFileNamePattern();
      doReturn("@_GDdJ^JJ{Uj* ^V,{(").when(localFileConfig0).getHttpRequestLogLocation();
      LocalFileTables localFileTables0 = null;
      try {
        localFileTables0 = new LocalFileTables(localFileConfig0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // location does not exist
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LocalFileConfig localFileConfig0 = mock(LocalFileConfig.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(localFileConfig0).getHttpRequestLogLocation();
      LocalFileTables localFileTables0 = new LocalFileTables(localFileConfig0);
      // Undeclared exception!
      try { 
        localFileTables0.getColumns((LocalFileTableHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.localfile.LocalFileTables", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LocalFileTables.HttpRequestLogTable localFileTables_HttpRequestLogTable0 = new LocalFileTables.HttpRequestLogTable();
  }
}
