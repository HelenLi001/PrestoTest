/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 03:13:55 GMT 2021
 */

package com.facebook.presto.plugin.memory;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.common.type.Type;
import com.facebook.presto.plugin.memory.MemoryColumnHandle;
import com.facebook.presto.spi.ColumnMetadata;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MemoryColumnHandle_ESTest extends MemoryColumnHandle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      MemoryColumnHandle memoryColumnHandle0 = new MemoryColumnHandle("", type0, (-2753));
      memoryColumnHandle0.getName();
      assertEquals((-2753), memoryColumnHandle0.getColumnIndex());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      MemoryColumnHandle memoryColumnHandle0 = new MemoryColumnHandle("YdJSLl~kH=LM[", type0, 0);
      int int0 = memoryColumnHandle0.getColumnIndex();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      MemoryColumnHandle memoryColumnHandle0 = new MemoryColumnHandle("", type0, (-1532));
      int int0 = memoryColumnHandle0.getColumnIndex();
      assertEquals((-1532), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      MemoryColumnHandle memoryColumnHandle0 = new MemoryColumnHandle("", type0, (-2753));
      // Undeclared exception!
      try { 
        memoryColumnHandle0.toColumnMetadata();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // name is empty
         //
         verifyException("com.facebook.presto.spi.SchemaUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        MemoryColumnHandle.extractColumnHandles((List<ColumnMetadata>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.plugin.memory.MemoryColumnHandle", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MemoryColumnHandle memoryColumnHandle0 = null;
      try {
        memoryColumnHandle0 = new MemoryColumnHandle("3|", (Type) null, (-2320));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // columnType is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(type0).toString();
      MemoryColumnHandle memoryColumnHandle0 = new MemoryColumnHandle("f(euVzj", type0, 8);
      Type type1 = memoryColumnHandle0.getColumnType();
      MemoryColumnHandle memoryColumnHandle1 = new MemoryColumnHandle("f(euVzj", type1, 0);
      boolean boolean0 = memoryColumnHandle0.equals(memoryColumnHandle1);
      assertEquals(8, memoryColumnHandle0.getColumnIndex());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(type0).toString();
      MemoryColumnHandle memoryColumnHandle0 = new MemoryColumnHandle("yPa_=s$?i6,6aT$TI$i", type0, 0);
      Type type1 = memoryColumnHandle0.getColumnType();
      MemoryColumnHandle memoryColumnHandle1 = new MemoryColumnHandle("MemoryColumnHandle{name=yPa_=s$?i6,6aT$TI$i, columnType=Mock for Type, hashCode: 476387417, columnIndex=0}", type1, 0);
      boolean boolean0 = memoryColumnHandle0.equals(memoryColumnHandle1);
      assertEquals(0, memoryColumnHandle1.getColumnIndex());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      MemoryColumnHandle memoryColumnHandle0 = new MemoryColumnHandle("OJD(tP#S!5\"GOO(cc02", type0, 825);
      Type type1 = mock(Type.class, new ViolatedAssumptionAnswer());
      MemoryColumnHandle memoryColumnHandle1 = new MemoryColumnHandle("OJD(tP#S!5\"GOO(cc02", type1, 0);
      boolean boolean0 = memoryColumnHandle0.equals(memoryColumnHandle1);
      assertFalse(boolean0);
      assertEquals(825, memoryColumnHandle0.getColumnIndex());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      MemoryColumnHandle memoryColumnHandle0 = new MemoryColumnHandle("yPa_=s$?i6,6aT$TI$i", type0, 0);
      boolean boolean0 = memoryColumnHandle0.equals((Object) null);
      assertEquals(0, memoryColumnHandle0.getColumnIndex());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      MemoryColumnHandle memoryColumnHandle0 = new MemoryColumnHandle("array(", type0, (-45));
      boolean boolean0 = memoryColumnHandle0.equals(memoryColumnHandle0);
      assertEquals((-45), memoryColumnHandle0.getColumnIndex());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      MemoryColumnHandle memoryColumnHandle0 = new MemoryColumnHandle("OJD(tP#S!5\"GOO(cc02", type0, 825);
      boolean boolean0 = memoryColumnHandle0.equals("OJD(tP#S!5\"GOO(cc02");
      assertFalse(boolean0);
      assertEquals(825, memoryColumnHandle0.getColumnIndex());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      MemoryColumnHandle memoryColumnHandle0 = new MemoryColumnHandle("OJD(tP#S!5\"GOO(cc02", type0, 825);
      memoryColumnHandle0.hashCode();
      assertEquals(825, memoryColumnHandle0.getColumnIndex());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      MemoryColumnHandle memoryColumnHandle0 = new MemoryColumnHandle("OJD(tP#S!5\"GOO(cc02", type0, 825);
      int int0 = memoryColumnHandle0.getColumnIndex();
      assertEquals(825, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(type0).toString();
      MemoryColumnHandle memoryColumnHandle0 = new MemoryColumnHandle("OJD(tP#S!5\"GOO(cc02", type0, 825);
      String string0 = memoryColumnHandle0.toString();
      assertEquals("MemoryColumnHandle{name=OJD(tP#S!5\"GOO(cc02, columnType=null, columnIndex=825}", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      MemoryColumnHandle memoryColumnHandle0 = new MemoryColumnHandle("columnType is null", type0, 60);
      memoryColumnHandle0.getName();
      assertEquals(60, memoryColumnHandle0.getColumnIndex());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      doReturn("array(").when(type0).toString();
      MemoryColumnHandle memoryColumnHandle0 = new MemoryColumnHandle("array(", type0, (-45));
      ColumnMetadata columnMetadata0 = memoryColumnHandle0.toColumnMetadata();
      MemoryColumnHandle memoryColumnHandle1 = new MemoryColumnHandle(columnMetadata0, (-45));
      boolean boolean0 = memoryColumnHandle0.equals(memoryColumnHandle1);
      assertEquals((-45), memoryColumnHandle1.getColumnIndex());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ColumnMetadata columnMetadata0 = mock(ColumnMetadata.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(columnMetadata0).getName();
      doReturn((Type) null).when(columnMetadata0).getType();
      MemoryColumnHandle memoryColumnHandle0 = null;
      try {
        memoryColumnHandle0 = new MemoryColumnHandle(columnMetadata0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name is null
         //
         verifyException("java.util.Objects", e);
      }
  }
}
