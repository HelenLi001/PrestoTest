/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 03:22:21 GMT 2021
 */

package com.facebook.presto.plugin.memory;

import org.junit.Test;
import static org.junit.Assert.*;
import com.facebook.presto.plugin.memory.MemoryHandleResolver;
import com.facebook.presto.spi.ColumnHandle;
import com.facebook.presto.spi.ConnectorInsertTableHandle;
import com.facebook.presto.spi.ConnectorOutputTableHandle;
import com.facebook.presto.spi.ConnectorSplit;
import com.facebook.presto.spi.ConnectorTableHandle;
import com.facebook.presto.spi.ConnectorTableLayoutHandle;
import com.facebook.presto.spi.connector.ConnectorTransactionHandle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MemoryHandleResolver_ESTest extends MemoryHandleResolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MemoryHandleResolver memoryHandleResolver0 = new MemoryHandleResolver();
      Class<? extends ConnectorOutputTableHandle> class0 = memoryHandleResolver0.getOutputTableHandleClass();
      assertEquals(1, class0.getModifiers());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MemoryHandleResolver memoryHandleResolver0 = new MemoryHandleResolver();
      Class<? extends ConnectorInsertTableHandle> class0 = memoryHandleResolver0.getInsertTableHandleClass();
      assertEquals("class com.facebook.presto.plugin.memory.MemoryInsertTableHandle", class0.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MemoryHandleResolver memoryHandleResolver0 = new MemoryHandleResolver();
      Class<? extends ConnectorTransactionHandle> class0 = memoryHandleResolver0.getTransactionHandleClass();
      assertFalse(class0.isInterface());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MemoryHandleResolver memoryHandleResolver0 = new MemoryHandleResolver();
      Class<? extends ConnectorSplit> class0 = memoryHandleResolver0.getSplitClass();
      assertFalse(class0.isArray());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MemoryHandleResolver memoryHandleResolver0 = new MemoryHandleResolver();
      Class<? extends ConnectorTableLayoutHandle> class0 = memoryHandleResolver0.getTableLayoutHandleClass();
      assertFalse(class0.isPrimitive());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MemoryHandleResolver memoryHandleResolver0 = new MemoryHandleResolver();
      Class<? extends ColumnHandle> class0 = memoryHandleResolver0.getColumnHandleClass();
      assertFalse(class0.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MemoryHandleResolver memoryHandleResolver0 = new MemoryHandleResolver();
      Class<? extends ConnectorTableHandle> class0 = memoryHandleResolver0.getTableHandleClass();
      assertEquals(1, class0.getModifiers());
  }
}
