/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 03:12:25 GMT 2021
 */

package com.facebook.presto.plugin.memory;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.client.NodeVersion;
import com.facebook.presto.metadata.InMemoryNodeManager;
import com.facebook.presto.metadata.InternalNode;
import com.facebook.presto.plugin.memory.MemoryConnectorId;
import com.facebook.presto.plugin.memory.MemoryMetadata;
import com.facebook.presto.spi.ConnectorSession;
import com.facebook.presto.spi.ConnectorTableHandle;
import com.facebook.presto.spi.ConnectorTableMetadata;
import com.facebook.presto.spi.NodeManager;
import com.facebook.presto.spi.SchemaTableName;
import com.facebook.presto.spi.SchemaTablePrefix;
import com.facebook.presto.spi.statistics.ComputedStatistics;
import com.facebook.presto.testing.TestingHandle;
import com.facebook.presto.testing.TestingMetadata;
import com.facebook.presto.testing.TestingNodeManager;
import io.airlift.slice.Slice;
import java.net.URI;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.PriorityQueue;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MemoryMetadata_ESTest extends MemoryMetadata_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TestingNodeManager testingNodeManager0 = new TestingNodeManager("email");
      MemoryConnectorId memoryConnectorId0 = new MemoryConnectorId("Aborted before processing {}: {}");
      MemoryMetadata memoryMetadata0 = new MemoryMetadata(testingNodeManager0, memoryConnectorId0);
      TestingMetadata.TestingTableHandle testingMetadata_TestingTableHandle0 = new TestingMetadata.TestingTableHandle();
      // Undeclared exception!
      try { 
        memoryMetadata0.getTableMetadata((ConnectorSession) null, testingMetadata_TestingTableHandle0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.facebook.presto.testing.TestingMetadata$TestingTableHandle cannot be cast to com.facebook.presto.plugin.memory.MemoryTableHandle
         //
         verifyException("com.facebook.presto.plugin.memory.MemoryMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TestingNodeManager testingNodeManager0 = new TestingNodeManager("Schema [%s] already exists");
      MemoryConnectorId memoryConnectorId0 = new MemoryConnectorId("Schema [%s] already exists");
      MemoryMetadata memoryMetadata0 = new MemoryMetadata(testingNodeManager0, memoryConnectorId0);
      // Undeclared exception!
      try { 
        memoryMetadata0.dropTable((ConnectorSession) null, (ConnectorTableHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.plugin.memory.MemoryMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TestingNodeManager testingNodeManager0 = new TestingNodeManager("");
      MemoryConnectorId memoryConnectorId0 = new MemoryConnectorId("");
      MemoryMetadata memoryMetadata0 = new MemoryMetadata(testingNodeManager0, memoryConnectorId0);
      // Undeclared exception!
      try { 
        memoryMetadata0.createView((ConnectorSession) null, (ConnectorTableMetadata) null, "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.plugin.memory.MemoryMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TestingNodeManager testingNodeManager0 = new TestingNodeManager();
      MemoryConnectorId memoryConnectorId0 = new MemoryConnectorId("VE?kDlO}mRWmg>");
      MemoryMetadata memoryMetadata0 = new MemoryMetadata(testingNodeManager0, memoryConnectorId0);
      SchemaTablePrefix schemaTablePrefix0 = new SchemaTablePrefix("default", "j");
      SchemaTableName schemaTableName0 = schemaTablePrefix0.toSchemaTableName();
      ConnectorTableHandle connectorTableHandle0 = memoryMetadata0.getTableHandle((ConnectorSession) null, schemaTableName0);
      assertNull(connectorTableHandle0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      URI uRI0 = MockURI.aHttpURI;
      NodeVersion nodeVersion0 = new NodeVersion("");
      InternalNode internalNode0 = new InternalNode("DiS:`R'kOw='td7ky5e", uRI0, nodeVersion0, false);
      TestingNodeManager testingNodeManager0 = new TestingNodeManager(internalNode0);
      MemoryConnectorId memoryConnectorId0 = new MemoryConnectorId("SYm$6/vs7");
      MemoryMetadata memoryMetadata0 = new MemoryMetadata(testingNodeManager0, memoryConnectorId0);
      // Undeclared exception!
      try { 
        memoryMetadata0.dropSchema((ConnectorSession) null, "j");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Schema [j] does not exist
         //
         verifyException("com.facebook.presto.plugin.memory.MemoryMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      URI uRI0 = MockURI.URI("0lY9");
      NodeVersion nodeVersion0 = NodeVersion.UNKNOWN;
      InternalNode internalNode0 = new InternalNode("0lY9", uRI0, nodeVersion0, true, false);
      TestingNodeManager testingNodeManager0 = new TestingNodeManager(internalNode0);
      MemoryConnectorId memoryConnectorId0 = new MemoryConnectorId("0lY9");
      MemoryMetadata memoryMetadata0 = new MemoryMetadata(testingNodeManager0, memoryConnectorId0);
      // Undeclared exception!
      try { 
        memoryMetadata0.getColumnHandles((ConnectorSession) null, (ConnectorTableHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.plugin.memory.MemoryMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TestingNodeManager testingNodeManager0 = new TestingNodeManager("");
      MemoryConnectorId memoryConnectorId0 = new MemoryConnectorId(",'i|4eM.~h6l$}knzD");
      MemoryMetadata memoryMetadata0 = new MemoryMetadata(testingNodeManager0, memoryConnectorId0);
      // Undeclared exception!
      try { 
        memoryMetadata0.getTableMetadata((ConnectorSession) null, (ConnectorTableHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.plugin.memory.MemoryMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InMemoryNodeManager inMemoryNodeManager0 = new InMemoryNodeManager();
      InternalNode internalNode0 = inMemoryNodeManager0.getCurrentNode();
      TestingNodeManager testingNodeManager0 = new TestingNodeManager(internalNode0);
      MemoryConnectorId memoryConnectorId0 = new MemoryConnectorId("default");
      MemoryMetadata memoryMetadata0 = new MemoryMetadata(testingNodeManager0, memoryConnectorId0);
      List<SchemaTableName> list0 = memoryMetadata0.listTables((ConnectorSession) null, "default");
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TestingNodeManager testingNodeManager0 = new TestingNodeManager();
      MemoryConnectorId memoryConnectorId0 = new MemoryConnectorId("");
      MemoryMetadata memoryMetadata0 = new MemoryMetadata(testingNodeManager0, memoryConnectorId0);
      TestingHandle testingHandle0 = TestingHandle.INSTANCE;
      Stack<Slice> stack0 = new Stack<Slice>();
      LinkedHashSet<ComputedStatistics> linkedHashSet0 = new LinkedHashSet<ComputedStatistics>();
      // Undeclared exception!
      try { 
        memoryMetadata0.finishCreateTable((ConnectorSession) null, testingHandle0, stack0, linkedHashSet0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.facebook.presto.testing.TestingHandle cannot be cast to com.facebook.presto.plugin.memory.MemoryOutputTableHandle
         //
         verifyException("com.facebook.presto.plugin.memory.MemoryMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TestingNodeManager testingNodeManager0 = new TestingNodeManager();
      MemoryConnectorId memoryConnectorId0 = new MemoryConnectorId("VE?kDlO}mRWmg>");
      MemoryMetadata memoryMetadata0 = new MemoryMetadata(testingNodeManager0, memoryConnectorId0);
      TestingMetadata.TestingColumnHandle testingMetadata_TestingColumnHandle0 = new TestingMetadata.TestingColumnHandle("{]i");
      // Undeclared exception!
      try { 
        memoryMetadata0.getColumnMetadata((ConnectorSession) null, (ConnectorTableHandle) null, testingMetadata_TestingColumnHandle0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.facebook.presto.testing.TestingMetadata$TestingColumnHandle cannot be cast to com.facebook.presto.plugin.memory.MemoryColumnHandle
         //
         verifyException("com.facebook.presto.plugin.memory.MemoryMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TestingNodeManager testingNodeManager0 = new TestingNodeManager("");
      MemoryConnectorId memoryConnectorId0 = new MemoryConnectorId("");
      MemoryMetadata memoryMetadata0 = new MemoryMetadata(testingNodeManager0, memoryConnectorId0);
      List<SchemaTableName> list0 = memoryMetadata0.listViews((ConnectorSession) null, "");
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TestingNodeManager testingNodeManager0 = new TestingNodeManager();
      MemoryConnectorId memoryConnectorId0 = new MemoryConnectorId("c-*puS41Zc");
      MemoryMetadata memoryMetadata0 = new MemoryMetadata(testingNodeManager0, memoryConnectorId0);
      TestingHandle testingHandle0 = TestingHandle.INSTANCE;
      PriorityQueue<Slice> priorityQueue0 = new PriorityQueue<Slice>();
      PriorityQueue<ComputedStatistics> priorityQueue1 = new PriorityQueue<ComputedStatistics>();
      // Undeclared exception!
      try { 
        memoryMetadata0.finishInsert((ConnectorSession) null, testingHandle0, priorityQueue0, priorityQueue1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.facebook.presto.testing.TestingHandle cannot be cast to com.facebook.presto.plugin.memory.MemoryInsertTableHandle
         //
         verifyException("com.facebook.presto.plugin.memory.MemoryMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InMemoryNodeManager inMemoryNodeManager0 = new InMemoryNodeManager();
      InternalNode internalNode0 = inMemoryNodeManager0.getCurrentNode();
      TestingNodeManager testingNodeManager0 = new TestingNodeManager(internalNode0);
      MemoryConnectorId memoryConnectorId0 = new MemoryConnectorId("default");
      MemoryMetadata memoryMetadata0 = new MemoryMetadata(testingNodeManager0, memoryConnectorId0);
      List<String> list0 = memoryMetadata0.listSchemaNames((ConnectorSession) null);
      assertTrue(list0.contains("default"));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MemoryConnectorId memoryConnectorId0 = new MemoryConnectorId("etTZ8NSQgpeOBB<");
      MemoryMetadata memoryMetadata0 = null;
      try {
        memoryMetadata0 = new MemoryMetadata((NodeManager) null, memoryConnectorId0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // nodeManager is null
         //
         verifyException("java.util.Objects", e);
      }
  }
}
