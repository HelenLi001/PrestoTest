/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 03:23:22 GMT 2021
 */

package com.facebook.presto.plugin.memory;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.common.type.TypeManager;
import com.facebook.presto.plugin.memory.MemoryModule;
import com.facebook.presto.plugin.memory.MemoryPageSourceProvider;
import com.facebook.presto.spi.NodeManager;
import com.google.inject.Binder;
import com.google.inject.binder.AnnotatedBindingBuilder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MemoryModule_ESTest extends MemoryModule_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TypeManager typeManager0 = mock(TypeManager.class, new ViolatedAssumptionAnswer());
      NodeManager nodeManager0 = mock(NodeManager.class, new ViolatedAssumptionAnswer());
      MemoryModule memoryModule0 = new MemoryModule("", typeManager0, nodeManager0);
      AnnotatedBindingBuilder<MemoryPageSourceProvider> annotatedBindingBuilder0 = (AnnotatedBindingBuilder<MemoryPageSourceProvider>) mock(AnnotatedBindingBuilder.class, new ViolatedAssumptionAnswer());
      Binder binder0 = mock(Binder.class, new ViolatedAssumptionAnswer());
      doReturn(annotatedBindingBuilder0, (AnnotatedBindingBuilder) null, (AnnotatedBindingBuilder) null, (AnnotatedBindingBuilder) null, (AnnotatedBindingBuilder) null).when(binder0).bind(nullable(java.lang.Class.class));
      doReturn((Binder) null, (Binder) null).when(binder0).skipSources(any(java.lang.Class[].class));
      // Undeclared exception!
      try { 
        memoryModule0.configure(binder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.inject.internal.RealMultibinder", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TypeManager typeManager0 = mock(TypeManager.class, new ViolatedAssumptionAnswer());
      NodeManager nodeManager0 = mock(NodeManager.class, new ViolatedAssumptionAnswer());
      MemoryModule memoryModule0 = new MemoryModule("PRODUCTION", typeManager0, nodeManager0);
      Binder binder0 = mock(Binder.class, new ViolatedAssumptionAnswer());
      Binder binder1 = mock(Binder.class, new ViolatedAssumptionAnswer());
      doReturn((AnnotatedBindingBuilder) null).when(binder1).bind(nullable(java.lang.Class.class));
      // Undeclared exception!
      try { 
        memoryModule0.configure(binder1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.plugin.memory.MemoryModule", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TypeManager typeManager0 = mock(TypeManager.class, new ViolatedAssumptionAnswer());
      MemoryModule memoryModule0 = null;
      try {
        memoryModule0 = new MemoryModule((String) null, typeManager0, (NodeManager) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // connector id is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TypeManager typeManager0 = mock(TypeManager.class, new ViolatedAssumptionAnswer());
      NodeManager nodeManager0 = mock(NodeManager.class, new ViolatedAssumptionAnswer());
      MemoryModule memoryModule0 = new MemoryModule("", typeManager0, nodeManager0);
      Binder binder0 = mock(Binder.class, new ViolatedAssumptionAnswer());
      doReturn((AnnotatedBindingBuilder) null).when(binder0).bind(nullable(java.lang.Class.class));
      // Undeclared exception!
      try { 
        memoryModule0.configure(binder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.plugin.memory.MemoryModule", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TypeManager typeManager0 = mock(TypeManager.class, new ViolatedAssumptionAnswer());
      NodeManager nodeManager0 = mock(NodeManager.class, new ViolatedAssumptionAnswer());
      MemoryModule memoryModule0 = new MemoryModule("gJ5lCxFMMH", typeManager0, nodeManager0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AnnotatedBindingBuilder<Integer> annotatedBindingBuilder0 = (AnnotatedBindingBuilder<Integer>) mock(AnnotatedBindingBuilder.class, new ViolatedAssumptionAnswer());
  }
}
