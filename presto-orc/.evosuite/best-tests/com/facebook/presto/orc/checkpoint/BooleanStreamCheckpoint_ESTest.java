/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 20 19:55:08 GMT 2021
 */

package com.facebook.presto.orc.checkpoint;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.orc.checkpoint.BooleanStreamCheckpoint;
import com.facebook.presto.orc.checkpoint.ByteStreamCheckpoint;
import com.facebook.presto.orc.checkpoint.Checkpoints;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BooleanStreamCheckpoint_ESTest extends BooleanStreamCheckpoint_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Checkpoints.ColumnPositionsList checkpoints_ColumnPositionsList0 = mock(Checkpoints.ColumnPositionsList.class, new ViolatedAssumptionAnswer());
      doReturn((-1), (-379), 1, 1).when(checkpoints_ColumnPositionsList0).nextPosition();
      BooleanStreamCheckpoint booleanStreamCheckpoint0 = new BooleanStreamCheckpoint(true, checkpoints_ColumnPositionsList0);
      List<Integer> list0 = booleanStreamCheckpoint0.toPositionList(true);
      assertEquals(4, list0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Checkpoints.ColumnPositionsList checkpoints_ColumnPositionsList0 = mock(Checkpoints.ColumnPositionsList.class, new ViolatedAssumptionAnswer());
      doReturn((-1), (-379), 1, 1).when(checkpoints_ColumnPositionsList0).nextPosition();
      BooleanStreamCheckpoint booleanStreamCheckpoint0 = new BooleanStreamCheckpoint(true, checkpoints_ColumnPositionsList0);
      int int0 = booleanStreamCheckpoint0.getOffset();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Checkpoints.ColumnPositionsList checkpoints_ColumnPositionsList0 = mock(Checkpoints.ColumnPositionsList.class, new ViolatedAssumptionAnswer());
      doReturn((-1886), (-347), (-347)).when(checkpoints_ColumnPositionsList0).nextPosition();
      BooleanStreamCheckpoint booleanStreamCheckpoint0 = new BooleanStreamCheckpoint(false, checkpoints_ColumnPositionsList0);
      int int0 = booleanStreamCheckpoint0.getOffset();
      assertEquals((-347), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Checkpoints.ColumnPositionsList checkpoints_ColumnPositionsList0 = mock(Checkpoints.ColumnPositionsList.class, new ViolatedAssumptionAnswer());
      doReturn((-1), (-379), 1, 1).when(checkpoints_ColumnPositionsList0).nextPosition();
      BooleanStreamCheckpoint booleanStreamCheckpoint0 = new BooleanStreamCheckpoint(true, checkpoints_ColumnPositionsList0);
      ByteStreamCheckpoint byteStreamCheckpoint0 = booleanStreamCheckpoint0.getByteStreamCheckpoint();
      assertEquals(1, byteStreamCheckpoint0.getOffset());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Checkpoints.ColumnPositionsList checkpoints_ColumnPositionsList0 = mock(Checkpoints.ColumnPositionsList.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0).when(checkpoints_ColumnPositionsList0).nextPosition();
      BooleanStreamCheckpoint booleanStreamCheckpoint0 = new BooleanStreamCheckpoint(true, checkpoints_ColumnPositionsList0);
      ByteStreamCheckpoint byteStreamCheckpoint0 = booleanStreamCheckpoint0.getByteStreamCheckpoint();
      assertEquals(0, byteStreamCheckpoint0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Checkpoints.ColumnPositionsList checkpoints_ColumnPositionsList0 = mock(Checkpoints.ColumnPositionsList.class, new ViolatedAssumptionAnswer());
      doReturn(1983, (-4256), 1983).when(checkpoints_ColumnPositionsList0).nextPosition();
      BooleanStreamCheckpoint booleanStreamCheckpoint0 = new BooleanStreamCheckpoint(false, checkpoints_ColumnPositionsList0);
      ByteStreamCheckpoint byteStreamCheckpoint0 = booleanStreamCheckpoint0.getByteStreamCheckpoint();
      assertEquals(1983L, byteStreamCheckpoint0.getInputStreamCheckpoint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BooleanStreamCheckpoint booleanStreamCheckpoint0 = null;
      try {
        booleanStreamCheckpoint0 = new BooleanStreamCheckpoint(false, (Checkpoints.ColumnPositionsList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.orc.checkpoint.InputStreamCheckpoint", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteStreamCheckpoint byteStreamCheckpoint0 = mock(ByteStreamCheckpoint.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(byteStreamCheckpoint0).toPositionList(anyBoolean());
      BooleanStreamCheckpoint booleanStreamCheckpoint0 = new BooleanStreamCheckpoint(1835, byteStreamCheckpoint0);
      // Undeclared exception!
      try { 
        booleanStreamCheckpoint0.toPositionList(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Checkpoints.ColumnPositionsList checkpoints_ColumnPositionsList0 = mock(Checkpoints.ColumnPositionsList.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(checkpoints_ColumnPositionsList0).nextPosition();
      BooleanStreamCheckpoint booleanStreamCheckpoint0 = new BooleanStreamCheckpoint(false, checkpoints_ColumnPositionsList0);
      int int0 = booleanStreamCheckpoint0.getOffset();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteStreamCheckpoint byteStreamCheckpoint0 = mock(ByteStreamCheckpoint.class, new ViolatedAssumptionAnswer());
      doReturn("O7y`Dx>").when(byteStreamCheckpoint0).toString();
      BooleanStreamCheckpoint booleanStreamCheckpoint0 = new BooleanStreamCheckpoint(0, byteStreamCheckpoint0);
      String string0 = booleanStreamCheckpoint0.toString();
      assertEquals("BooleanStreamCheckpoint{offset=0, byteStreamCheckpoint=O7y`Dx>}", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BooleanStreamCheckpoint booleanStreamCheckpoint0 = null;
      try {
        booleanStreamCheckpoint0 = new BooleanStreamCheckpoint(1919, (ByteStreamCheckpoint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // byteStreamCheckpoint is null
         //
         verifyException("java.util.Objects", e);
      }
  }
}
