/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 20 19:19:11 GMT 2021
 */

package com.facebook.presto.orc.metadata;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.orc.metadata.DwrfStripeCacheMode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DwrfStripeCacheMode_ESTest extends DwrfStripeCacheMode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DwrfStripeCacheMode[] dwrfStripeCacheModeArray0 = DwrfStripeCacheMode.values();
      assertEquals(4, dwrfStripeCacheModeArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DwrfStripeCacheMode dwrfStripeCacheMode0 = DwrfStripeCacheMode.valueOf("FOOTER");
      assertEquals(DwrfStripeCacheMode.FOOTER, dwrfStripeCacheMode0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DwrfStripeCacheMode dwrfStripeCacheMode0 = DwrfStripeCacheMode.FOOTER;
      boolean boolean0 = dwrfStripeCacheMode0.hasIndex();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DwrfStripeCacheMode dwrfStripeCacheMode0 = DwrfStripeCacheMode.valueOf("INDEX");
      boolean boolean0 = dwrfStripeCacheMode0.hasFooter();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DwrfStripeCacheMode dwrfStripeCacheMode0 = DwrfStripeCacheMode.INDEX_AND_FOOTER;
      int int0 = dwrfStripeCacheMode0.getIndexOffsetPosition(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DwrfStripeCacheMode dwrfStripeCacheMode0 = DwrfStripeCacheMode.INDEX_AND_FOOTER;
      int int0 = dwrfStripeCacheMode0.getIndexOffsetPosition(1);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DwrfStripeCacheMode dwrfStripeCacheMode0 = DwrfStripeCacheMode.FOOTER;
      int int0 = dwrfStripeCacheMode0.getFooterOffsetPosition(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DwrfStripeCacheMode dwrfStripeCacheMode0 = DwrfStripeCacheMode.INDEX_AND_FOOTER;
      int int0 = dwrfStripeCacheMode0.getFooterOffsetPosition(1);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DwrfStripeCacheMode dwrfStripeCacheMode0 = DwrfStripeCacheMode.FOOTER;
      int int0 = dwrfStripeCacheMode0.getFooterOffsetPosition((-3710));
      assertEquals((-3710), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DwrfStripeCacheMode dwrfStripeCacheMode0 = DwrfStripeCacheMode.INDEX;
      // Undeclared exception!
      try { 
        dwrfStripeCacheMode0.getFooterOffsetPosition((-19));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // This mode doesn't support footer cache: INDEX
         //
         verifyException("com.facebook.presto.orc.metadata.DwrfStripeCacheMode", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DwrfStripeCacheMode dwrfStripeCacheMode0 = DwrfStripeCacheMode.FOOTER;
      // Undeclared exception!
      try { 
        dwrfStripeCacheMode0.getIndexOffsetPosition(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // This mode doesn't support index cache: FOOTER
         //
         verifyException("com.facebook.presto.orc.metadata.DwrfStripeCacheMode", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DwrfStripeCacheMode dwrfStripeCacheMode0 = DwrfStripeCacheMode.INDEX_AND_FOOTER;
      int int0 = dwrfStripeCacheMode0.getIndexOffsetPosition((-1144));
      assertEquals((-2288), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DwrfStripeCacheMode dwrfStripeCacheMode0 = DwrfStripeCacheMode.INDEX;
      int int0 = dwrfStripeCacheMode0.getIndexOffsetPosition((-19));
      assertEquals((-19), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DwrfStripeCacheMode dwrfStripeCacheMode0 = DwrfStripeCacheMode.INDEX_AND_FOOTER;
      boolean boolean0 = dwrfStripeCacheMode0.hasFooter();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DwrfStripeCacheMode dwrfStripeCacheMode0 = DwrfStripeCacheMode.INDEX;
      boolean boolean0 = dwrfStripeCacheMode0.hasIndex();
      assertTrue(boolean0);
  }
}
