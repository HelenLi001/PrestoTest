/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 20 18:47:25 GMT 2021
 */

package com.facebook.presto.orc.metadata.statistics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.orc.metadata.statistics.ColumnStatistics;
import com.facebook.presto.orc.metadata.statistics.StringStatisticsBuilder;
import io.airlift.slice.Slice;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StringStatisticsBuilder_ESTest extends StringStatisticsBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StringStatisticsBuilder stringStatisticsBuilder0 = new StringStatisticsBuilder(0);
      StringStatisticsBuilder stringStatisticsBuilder1 = stringStatisticsBuilder0.withStringStatisticsLimit(0);
      assertFalse(stringStatisticsBuilder1.equals((Object)stringStatisticsBuilder0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringStatisticsBuilder.mergeStringStatistics((List<ColumnStatistics>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.orc.metadata.statistics.StringStatisticsBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StringStatisticsBuilder stringStatisticsBuilder0 = new StringStatisticsBuilder(4);
      // Undeclared exception!
      try { 
        stringStatisticsBuilder0.addValue((Slice) null, 4, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // value is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StringStatisticsBuilder stringStatisticsBuilder0 = new StringStatisticsBuilder(4);
      stringStatisticsBuilder0.buildColumnStatistics();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StringStatisticsBuilder stringStatisticsBuilder0 = new StringStatisticsBuilder(4);
      StringStatisticsBuilder stringStatisticsBuilder1 = stringStatisticsBuilder0.withStringStatisticsLimit(4);
      assertNotSame(stringStatisticsBuilder0, stringStatisticsBuilder1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StringStatisticsBuilder stringStatisticsBuilder0 = new StringStatisticsBuilder((-2983));
      // Undeclared exception!
      try { 
        stringStatisticsBuilder0.withStringStatisticsLimit((-2983));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // limitInBytes is less than 0
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StringStatisticsBuilder stringStatisticsBuilder0 = new StringStatisticsBuilder(4);
      long long0 = stringStatisticsBuilder0.getNonNullValueCount();
      assertEquals(0L, long0);
  }
}
