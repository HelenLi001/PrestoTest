/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 20 18:44:26 GMT 2021
 */

package com.facebook.presto.orc.stream;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.orc.metadata.OrcType;
import com.facebook.presto.orc.stream.LongDecode;
import com.facebook.presto.orc.stream.OrcInputStream;
import io.airlift.slice.SliceOutput;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LongDecode_ESTest extends LongDecode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SliceOutput sliceOutput0 = mock(SliceOutput.class, new ViolatedAssumptionAnswer());
      LongDecode.writeVLong(sliceOutput0, (-5071L), true);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SliceOutput sliceOutput0 = mock(SliceOutput.class, new ViolatedAssumptionAnswer());
      LongDecode.writeVLong(sliceOutput0, (-924L), false);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OrcType.OrcTypeKind orcType_OrcTypeKind0 = OrcType.OrcTypeKind.STRUCT;
      // Undeclared exception!
      try { 
        LongDecode.readDwrfLong((OrcInputStream) null, orcType_OrcTypeKind0, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.orc.stream.LongDecode", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      long long0 = LongDecode.zigzagDecode(121L);
      assertEquals((-61L), long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      long long0 = LongDecode.zigzagDecode((-1350L));
      assertEquals(9223372036854775133L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = LongDecode.getClosestFixedBits(56);
      assertEquals(56, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = LongDecode.getClosestFixedBits(42);
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = LongDecode.getClosestFixedBits(40);
      assertEquals(40, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = LongDecode.getClosestFixedBits(31);
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = LongDecode.getClosestFixedBits(30);
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = LongDecode.getClosestFixedBits(28);
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = LongDecode.getClosestFixedBits(25);
      assertEquals(26, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = LongDecode.getClosestFixedBits(24);
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = LongDecode.decodeBitWidth(2147417857);
      assertEquals(64, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = LongDecode.decodeBitWidth(23);
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      long long0 = LongDecode.zigzagDecode(0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        LongDecode.writeVLong((SliceOutput) null, 1L, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.orc.stream.LongDecode", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        LongDecode.readVInt(true, (OrcInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.orc.stream.LongDecode", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        LongDecode.readSignedVInt((OrcInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.orc.stream.LongDecode", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OrcType.OrcTypeKind orcType_OrcTypeKind0 = OrcType.OrcTypeKind.LONG;
      // Undeclared exception!
      try { 
        LongDecode.readDwrfLong((OrcInputStream) null, orcType_OrcTypeKind0, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.orc.stream.LongDecode", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OrcType.OrcTypeKind orcType_OrcTypeKind0 = OrcType.OrcTypeKind.INT;
      // Undeclared exception!
      try { 
        LongDecode.readDwrfLong((OrcInputStream) null, orcType_OrcTypeKind0, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.orc.stream.LongDecode", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OrcType.OrcTypeKind orcType_OrcTypeKind0 = OrcType.OrcTypeKind.SHORT;
      // Undeclared exception!
      try { 
        LongDecode.readDwrfLong((OrcInputStream) null, orcType_OrcTypeKind0, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.orc.stream.LongDecode", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OrcType.OrcTypeKind orcType_OrcTypeKind0 = OrcType.OrcTypeKind.MAP;
      // Undeclared exception!
      try { 
        LongDecode.readDwrfLong((OrcInputStream) null, orcType_OrcTypeKind0, true, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // MAP type is not supported
         //
         verifyException("com.facebook.presto.orc.stream.LongDecode", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        LongDecode.readVInt(false, (OrcInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.orc.stream.LongDecode", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = LongDecode.getClosestFixedBits(55);
      assertEquals(56, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = LongDecode.getClosestFixedBits(48);
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = LongDecode.getClosestFixedBits(143);
      assertEquals(64, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = LongDecode.getClosestFixedBits(32);
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = LongDecode.getClosestFixedBits(33);
      assertEquals(40, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = LongDecode.getClosestFixedBits(27);
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = LongDecode.getClosestFixedBits(29);
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = LongDecode.getClosestFixedBits(5);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = LongDecode.getClosestFixedBits((-3776));
      assertEquals(64, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = LongDecode.getClosestFixedBits(0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = LongDecode.getClosestFixedBits(26);
      assertEquals(26, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = LongDecode.decodeBitWidth(30);
      assertEquals(56, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      int int0 = LongDecode.decodeBitWidth(29);
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int int0 = LongDecode.decodeBitWidth(28);
      assertEquals(40, int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int int0 = LongDecode.decodeBitWidth(26);
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = LongDecode.decodeBitWidth(25);
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = LongDecode.decodeBitWidth(24);
      assertEquals(26, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = LongDecode.decodeBitWidth(0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = LongDecode.decodeBitWidth(27);
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = LongDecode.decodeBitWidth((-408));
      assertEquals(64, int0);
  }
}
