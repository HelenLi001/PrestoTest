/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 11:18:14 GMT 2021
 */

package com.facebook.presto.parquet.batchreader.decoders;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.parquet.DataPage;
import com.facebook.presto.parquet.ParquetEncoding;
import com.facebook.presto.parquet.RichColumnDescriptor;
import com.facebook.presto.parquet.batchreader.decoders.Decoders;
import com.facebook.presto.parquet.batchreader.decoders.DefinitionLevelDecoder;
import com.facebook.presto.parquet.batchreader.decoders.RepetitionLevelDecoder;
import com.facebook.presto.parquet.dictionary.Dictionary;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Decoders_ESTest extends Decoders_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ParquetEncoding parquetEncoding0 = ParquetEncoding.PLAIN_DICTIONARY;
      DefinitionLevelDecoder definitionLevelDecoder0 = Decoders.createDefinitionLevelDecoder(parquetEncoding0, 0, 221, (ByteBuffer) null);
      assertNotNull(definitionLevelDecoder0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ParquetEncoding parquetEncoding0 = ParquetEncoding.BIT_PACKED;
      // Undeclared exception!
      try { 
        Decoders.createDefinitionLevelDecoder(parquetEncoding0, (-2710), 0, (ByteBuffer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid definition level encoding: BIT_PACKED
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ParquetEncoding parquetEncoding0 = ParquetEncoding.PLAIN_DICTIONARY;
      RepetitionLevelDecoder repetitionLevelDecoder0 = Decoders.createRepetitionLevelDecoder(parquetEncoding0, 0, 4, (ByteBuffer) null);
      assertNotNull(repetitionLevelDecoder0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ParquetEncoding parquetEncoding0 = ParquetEncoding.PLAIN;
      // Undeclared exception!
      try { 
        Decoders.createRepetitionLevelDecoder(parquetEncoding0, 1, 24, (ByteBuffer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid repetition level encoding: PLAIN
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ParquetEncoding parquetEncoding0 = ParquetEncoding.RLE;
      // Undeclared exception!
      try { 
        Decoders.createDefinitionLevelDecoder(parquetEncoding0, 2314, 2314, (ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.parquet.bytes.SingleBufferInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ParquetEncoding parquetEncoding0 = ParquetEncoding.RLE;
      // Undeclared exception!
      try { 
        Decoders.createRepetitionLevelDecoder(parquetEncoding0, (-3085), (-3085), (ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.parquet.bytes.SingleBufferInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try { 
        Decoders.readFlatPage((DataPage) null, (RichColumnDescriptor) null, (Dictionary) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.parquet.batchreader.decoders.Decoders", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try { 
        Decoders.readNestedPage((DataPage) null, (RichColumnDescriptor) null, (Dictionary) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.parquet.batchreader.decoders.Decoders", e);
      }
  }
}
