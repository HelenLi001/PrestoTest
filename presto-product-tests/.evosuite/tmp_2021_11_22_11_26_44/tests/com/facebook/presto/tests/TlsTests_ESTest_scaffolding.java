/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon Nov 22 19:45:36 GMT 2021
 */

package com.facebook.presto.tests;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class TlsTests_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.facebook.presto.tests.TlsTests"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.dir", "/mnt/c/Users/Helen/Documents/DataScience18668/GroupProject/project/presto/presto-product-tests"); 
    java.lang.System.setProperty("user.home", "/home/helen"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "helen"); 
    java.lang.System.setProperty("user.timezone", "America/Los_Angeles"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(TlsTests_ESTest_scaffolding.class.getClassLoader() ,
      "org.assertj.core.api.AbstractOffsetTimeAssert",
      "org.assertj.core.api.DoubleAssert",
      "org.assertj.core.util.Compatibility$System",
      "org.assertj.core.api.AbstractInputStreamAssert",
      "org.assertj.core.api.AbstractZonedDateTimeAssert",
      "org.assertj.core.api.ByteAssert",
      "org.assertj.core.api.FloatArrayAssert",
      "org.assertj.core.api.AbstractLocalDateTimeAssert",
      "org.assertj.core.api.BigIntegerAssert",
      "org.assertj.core.util.FloatComparator",
      "org.assertj.core.api.AbstractInstantAssert",
      "org.assertj.core.api.AbstractShortAssert",
      "org.assertj.core.api.AbstractArrayAssert",
      "org.assertj.core.description.TextDescription",
      "org.assertj.core.api.ThrowableAssert",
      "org.assertj.core.error.BasicErrorMessageFactory",
      "org.assertj.core.api.AbstractThrowableAssert",
      "org.assertj.core.error.ErrorMessageFactory",
      "org.assertj.core.api.BooleanAssert",
      "org.assertj.core.internal.Objects",
      "org.assertj.core.api.AbstractBigIntegerAssert",
      "org.assertj.core.util.Preconditions",
      "org.assertj.core.api.ClassAssert",
      "org.assertj.core.api.StringAssert",
      "org.assertj.core.api.InputStreamAssert",
      "org.assertj.core.api.AbstractByteAssert",
      "org.assertj.core.util.Lists",
      "org.assertj.core.api.ListAssert",
      "org.assertj.core.data.TemporalUnitOffset",
      "org.assertj.core.api.BigDecimalAssert",
      "org.assertj.core.api.DateAssert",
      "org.assertj.core.api.ShortArrayAssert",
      "org.assertj.core.api.Assert",
      "org.assertj.core.api.ComparableAssert",
      "org.assertj.core.api.AbstractCharSequenceAssert",
      "org.assertj.core.internal.TypeComparators",
      "org.assertj.core.util.introspection.PropertySupport",
      "org.assertj.core.internal.Failures",
      "org.assertj.core.api.AbstractFloatArrayAssert",
      "org.assertj.core.api.FactoryBasedNavigableListAssert",
      "org.assertj.core.api.AbstractByteArrayAssert",
      "org.assertj.core.api.LocalTimeAssert",
      "org.assertj.core.api.ExtensionPoints",
      "org.assertj.core.api.AbstractDateAssert",
      "org.assertj.core.api.AbstractLocalTimeAssert",
      "org.assertj.core.api.ByteArrayAssert",
      "org.assertj.core.api.WritableAssertionInfo",
      "org.assertj.core.api.AbstractBooleanAssert",
      "org.assertj.core.internal.ComparisonStrategy",
      "org.assertj.core.api.AbstractListAssert",
      "org.assertj.core.api.AbstractClassAssert",
      "org.assertj.core.api.AbstractUriAssert",
      "org.assertj.core.error.MessageFormatter",
      "org.assertj.core.api.UrlAssert",
      "org.assertj.core.api.AbstractFileAssert",
      "org.assertj.core.util.Arrays",
      "org.assertj.core.api.ObjectEnumerableAssert",
      "org.assertj.core.util.introspection.FieldSupport",
      "org.assertj.core.api.NumberAssert",
      "org.assertj.core.api.AbstractLongAssert",
      "org.assertj.core.internal.Conditions",
      "org.assertj.core.api.AbstractDoubleArrayAssert",
      "org.assertj.core.api.IndexedObjectEnumerableAssert",
      "org.assertj.core.api.DoubleArrayAssert",
      "org.assertj.core.api.AbstractEnumerableAssert",
      "org.assertj.core.api.AssertionInfo",
      "org.assertj.core.util.introspection.IntrospectionError",
      "org.assertj.core.api.AbstractAssert",
      "org.assertj.core.api.AssertionsForClassTypes",
      "org.assertj.core.api.IntegerAssert",
      "org.assertj.core.util.Throwables",
      "org.assertj.core.api.ObjectArrayAssert",
      "org.assertj.core.api.FloatAssert",
      "org.assertj.core.api.IntArrayAssert",
      "org.assertj.core.presentation.StandardRepresentation",
      "org.assertj.core.api.Descriptable",
      "org.assertj.core.api.AbstractComparableAssert",
      "org.assertj.core.api.AbstractIntArrayAssert",
      "org.assertj.core.internal.StandardComparisonStrategy",
      "org.assertj.core.api.Assertions",
      "org.assertj.core.api.AbstractUrlAssert",
      "org.assertj.core.api.LongArrayAssert",
      "org.assertj.core.api.AbstractLongArrayAssert",
      "org.assertj.core.internal.AbstractComparisonStrategy",
      "org.assertj.core.api.AbstractTemporalAssert",
      "org.assertj.core.data.TemporalUnitLessThanOffset",
      "org.assertj.core.api.InstantAssert",
      "org.assertj.core.api.AbstractObjectArrayAssert",
      "org.assertj.core.api.FutureAssert",
      "org.assertj.core.api.ObjectAssert",
      "org.assertj.core.util.DoubleComparator",
      "org.assertj.core.api.EnumerableAssert",
      "org.assertj.core.api.FileAssert",
      "org.assertj.core.internal.Comparables",
      "org.assertj.core.internal.Numbers",
      "com.facebook.presto.tests.TlsTests",
      "org.assertj.core.api.OffsetDateTimeAssert",
      "org.assertj.core.api.AbstractOffsetDateTimeAssert",
      "org.assertj.core.api.AbstractFutureAssert",
      "org.assertj.core.api.AbstractIntegerAssert",
      "org.assertj.core.api.CharacterAssert",
      "org.assertj.core.error.DescriptionFormatter",
      "org.assertj.core.api.OffsetTimeAssert",
      "org.assertj.core.api.AbstractBooleanArrayAssert",
      "org.assertj.core.presentation.Representation",
      "org.assertj.core.api.AbstractFloatAssert",
      "org.assertj.core.api.BooleanArrayAssert",
      "org.assertj.core.description.Description",
      "org.assertj.core.api.AbstractIterableAssert",
      "org.assertj.core.api.ArraySortedAssert",
      "org.assertj.core.api.LocalDateTimeAssert",
      "org.assertj.core.api.ShortAssert",
      "org.assertj.core.api.LongAssert",
      "org.assertj.core.api.FloatingPointNumberAssert",
      "org.assertj.core.api.AbstractObjectAssert",
      "org.assertj.core.api.AbstractDoubleAssert",
      "org.assertj.core.internal.Integers",
      "org.assertj.core.api.AbstractLocalDateAssert",
      "org.assertj.core.api.AbstractCharacterAssert",
      "org.assertj.core.data.TemporalUnitWithinOffset",
      "org.assertj.core.api.LocalDateAssert",
      "org.assertj.core.api.AbstractCharArrayAssert",
      "org.assertj.core.api.UriAssert",
      "org.assertj.core.api.CharArrayAssert",
      "org.assertj.core.api.ZonedDateTimeAssert",
      "org.assertj.core.data.TemporalOffset",
      "org.assertj.core.util.Strings",
      "org.assertj.core.api.AbstractShortArrayAssert",
      "org.assertj.core.api.AbstractBigDecimalAssert",
      "org.assertj.core.error.ShouldNotBeNull"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(TlsTests_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.facebook.presto.tests.TlsTests",
      "org.assertj.core.util.Compatibility$System",
      "org.assertj.core.internal.Failures",
      "io.prestodb.tempto.context.ThreadLocalTestContextHolder$1",
      "io.prestodb.tempto.context.ThreadLocalTestContextHolder",
      "org.assertj.core.api.Assertions",
      "org.assertj.core.api.AssertionsForClassTypes",
      "org.assertj.core.api.AbstractAssert",
      "org.assertj.core.api.AbstractObjectAssert",
      "org.assertj.core.api.AbstractComparableAssert",
      "org.assertj.core.api.AbstractIntegerAssert",
      "org.assertj.core.api.IntegerAssert",
      "org.assertj.core.internal.AbstractComparisonStrategy",
      "org.assertj.core.internal.StandardComparisonStrategy",
      "org.assertj.core.util.introspection.PropertySupport",
      "org.assertj.core.util.introspection.FieldSupport",
      "org.assertj.core.internal.Objects",
      "org.assertj.core.internal.Conditions",
      "org.assertj.core.api.WritableAssertionInfo",
      "org.assertj.core.presentation.StandardRepresentation",
      "org.assertj.core.util.Preconditions",
      "org.assertj.core.internal.TypeComparators",
      "org.assertj.core.util.DoubleComparator",
      "org.assertj.core.util.FloatComparator",
      "org.assertj.core.internal.Comparables",
      "org.assertj.core.internal.Numbers",
      "org.assertj.core.internal.Integers",
      "org.assertj.core.error.BasicErrorMessageFactory",
      "org.assertj.core.error.DescriptionFormatter",
      "org.assertj.core.error.MessageFormatter",
      "org.assertj.core.error.ShouldNotBeNull",
      "org.assertj.core.util.Strings",
      "org.assertj.core.util.Arrays",
      "org.assertj.core.util.Throwables",
      "org.assertj.core.util.Lists"
    );
  }
}
