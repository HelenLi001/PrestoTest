/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 19:42:42 GMT 2021
 */

package com.facebook.presto.tests.hive;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.tests.hive.TestHiveCoercion;
import io.prestodb.tempto.configuration.Configuration;
import io.prestodb.tempto.fulfillment.table.MutableTableRequirement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TestHiveCoercion_ESTest extends TestHiveCoercion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TestHiveCoercion.TextRequirements testHiveCoercion_TextRequirements0 = new TestHiveCoercion.TextRequirements();
      Configuration configuration0 = mock(Configuration.class, new ViolatedAssumptionAnswer());
      MutableTableRequirement mutableTableRequirement0 = (MutableTableRequirement)testHiveCoercion_TextRequirements0.getRequirements(configuration0);
      assertEquals(MutableTableRequirement.State.CREATED, mutableTableRequirement0.getState());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TestHiveCoercion testHiveCoercion0 = new TestHiveCoercion();
      // Undeclared exception!
      try { 
        testHiveCoercion0.testHiveCoercionRcText();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // test context not set for current thread
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TestHiveCoercion testHiveCoercion0 = new TestHiveCoercion();
      // Undeclared exception!
      try { 
        testHiveCoercion0.testHiveCoercionParquet();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // test context not set for current thread
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TestHiveCoercion testHiveCoercion0 = new TestHiveCoercion();
      // Undeclared exception!
      try { 
        testHiveCoercion0.testHiveCoercionOrc();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // test context not set for current thread
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TestHiveCoercion testHiveCoercion0 = new TestHiveCoercion();
      // Undeclared exception!
      try { 
        testHiveCoercion0.testHiveCoercionAvro();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // test context not set for current thread
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TestHiveCoercion testHiveCoercion0 = new TestHiveCoercion();
      // Undeclared exception!
      try { 
        testHiveCoercion0.testHiveCoercionRcBinary();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // test context not set for current thread
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TestHiveCoercion testHiveCoercion0 = new TestHiveCoercion();
      // Undeclared exception!
      try { 
        testHiveCoercion0.testHiveCoercionTextFile();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // test context not set for current thread
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TestHiveCoercion.AvroRequirements testHiveCoercion_AvroRequirements0 = new TestHiveCoercion.AvroRequirements();
      Configuration configuration0 = mock(Configuration.class, new ViolatedAssumptionAnswer());
      MutableTableRequirement mutableTableRequirement0 = (MutableTableRequirement)testHiveCoercion_AvroRequirements0.getRequirements(configuration0);
      assertEquals(MutableTableRequirement.State.CREATED, mutableTableRequirement0.getState());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TestHiveCoercion.RcBinaryRequirements testHiveCoercion_RcBinaryRequirements0 = new TestHiveCoercion.RcBinaryRequirements();
      Configuration configuration0 = mock(Configuration.class, new ViolatedAssumptionAnswer());
      MutableTableRequirement mutableTableRequirement0 = (MutableTableRequirement)testHiveCoercion_RcBinaryRequirements0.getRequirements(configuration0);
      assertEquals(MutableTableRequirement.State.CREATED, mutableTableRequirement0.getState());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TestHiveCoercion.OrcRequirements testHiveCoercion_OrcRequirements0 = new TestHiveCoercion.OrcRequirements();
      Configuration configuration0 = mock(Configuration.class, new ViolatedAssumptionAnswer());
      MutableTableRequirement mutableTableRequirement0 = (MutableTableRequirement)testHiveCoercion_OrcRequirements0.getRequirements(configuration0);
      assertEquals(MutableTableRequirement.State.CREATED, mutableTableRequirement0.getState());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TestHiveCoercion.ParquetRequirements testHiveCoercion_ParquetRequirements0 = new TestHiveCoercion.ParquetRequirements();
      Configuration configuration0 = mock(Configuration.class, new ViolatedAssumptionAnswer());
      MutableTableRequirement mutableTableRequirement0 = (MutableTableRequirement)testHiveCoercion_ParquetRequirements0.getRequirements(configuration0);
      assertEquals(MutableTableRequirement.State.CREATED, mutableTableRequirement0.getState());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TestHiveCoercion.RcTextRequirements testHiveCoercion_RcTextRequirements0 = new TestHiveCoercion.RcTextRequirements();
      Configuration configuration0 = mock(Configuration.class, new ViolatedAssumptionAnswer());
      MutableTableRequirement mutableTableRequirement0 = (MutableTableRequirement)testHiveCoercion_RcTextRequirements0.getRequirements(configuration0);
      assertEquals(MutableTableRequirement.State.CREATED, mutableTableRequirement0.getState());
  }
}
