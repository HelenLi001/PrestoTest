/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 21 13:41:40 GMT 2021
 */

package com.facebook.presto.raptor.metadata;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.raptor.metadata.DatabaseShardManager;
import com.facebook.presto.spi.PrestoException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DatabaseShardManager_ESTest extends DatabaseShardManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String string0 = DatabaseShardManager.maxColumn(1L);
      assertEquals("c1_max", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String string0 = DatabaseShardManager.minColumn(10000L);
      assertEquals("c10000_min", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = DatabaseShardManager.maxColumn(0L);
      assertEquals("c0_max", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        DatabaseShardManager.maxColumn((-2909L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid columnId -2909
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String string0 = DatabaseShardManager.minColumn(0L);
      assertEquals("c0_min", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        DatabaseShardManager.minColumn((-2860L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid columnId -2860
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PrestoException prestoException0 = DatabaseShardManager.transactionConflict();
      assertNotNull(prestoException0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String string0 = DatabaseShardManager.shardIndexTable((-2234L));
      assertEquals("x_shards_t-2234", string0);
  }
}
