/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 20 17:58:42 GMT 2021
 */

package com.facebook.presto.decoder.avro;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.common.type.DateType;
import com.facebook.presto.common.type.JsonType;
import com.facebook.presto.common.type.Type;
import com.facebook.presto.common.type.VarcharType;
import com.facebook.presto.decoder.DecoderColumnHandle;
import com.facebook.presto.decoder.avro.AvroColumnDecoder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AvroColumnDecoder_ESTest extends AvroColumnDecoder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AvroColumnDecoder avroColumnDecoder0 = null;
      try {
        avroColumnDecoder0 = new AvroColumnDecoder((DecoderColumnHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // columnHandle is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      VarcharType varcharType0 = VarcharType.createUnboundedVarcharType();
      System.setCurrentTimeMillis(2147483646);
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(decoderColumnHandle0).getDataFormat();
      doReturn((String) null, (String) null).when(decoderColumnHandle0).getFormatHint();
      doReturn("array", (String) null).when(decoderColumnHandle0).getMapping();
      doReturn("array").when(decoderColumnHandle0).getName();
      doReturn(varcharType0).when(decoderColumnHandle0).getType();
      doReturn(false).when(decoderColumnHandle0).isInternal();
      AvroColumnDecoder avroColumnDecoder0 = null;
      try {
        avroColumnDecoder0 = new AvroColumnDecoder(decoderColumnHandle0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // mapping not defined for column 'array'
         //
         verifyException("com.facebook.presto.decoder.avro.AvroColumnDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JsonType jsonType0 = JsonType.JSON;
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(decoderColumnHandle0).getDataFormat();
      doReturn((String) null, (String) null).when(decoderColumnHandle0).getFormatHint();
      doReturn((String) null, "").when(decoderColumnHandle0).getMapping();
      doReturn("").when(decoderColumnHandle0).getName();
      doReturn(jsonType0).when(decoderColumnHandle0).getType();
      doReturn(false).when(decoderColumnHandle0).isInternal();
      AvroColumnDecoder avroColumnDecoder0 = null;
      try {
        avroColumnDecoder0 = new AvroColumnDecoder(decoderColumnHandle0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unsupported column type 'json' for column ''
         //
         verifyException("com.facebook.presto.decoder.avro.AvroColumnDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(decoderColumnHandle0).getDataFormat();
      doReturn((String) null, (String) null).when(decoderColumnHandle0).getFormatHint();
      doReturn((String) null, (String) null).when(decoderColumnHandle0).getMapping();
      doReturn((String) null).when(decoderColumnHandle0).getName();
      doReturn((Type) null).when(decoderColumnHandle0).getType();
      doReturn(false).when(decoderColumnHandle0).isInternal();
      AvroColumnDecoder avroColumnDecoder0 = null;
      try {
        avroColumnDecoder0 = new AvroColumnDecoder(decoderColumnHandle0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // mapping not defined for column 'null'
         //
         verifyException("com.facebook.presto.decoder.avro.AvroColumnDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DateType dateType0 = DateType.DATE;
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(decoderColumnHandle0).getDataFormat();
      doReturn((String) null, (String) null).when(decoderColumnHandle0).getFormatHint();
      doReturn("UokVpo8i(q966Z", (String) null).when(decoderColumnHandle0).getMapping();
      doReturn("boolean").when(decoderColumnHandle0).getName();
      doReturn(dateType0).when(decoderColumnHandle0).getType();
      doReturn(false).when(decoderColumnHandle0).isInternal();
      AvroColumnDecoder avroColumnDecoder0 = null;
      try {
        avroColumnDecoder0 = new AvroColumnDecoder(decoderColumnHandle0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // mapping not defined for column 'boolean'
         //
         verifyException("com.facebook.presto.decoder.avro.AvroColumnDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      doReturn(" ]gm~I|k%9TP$=prk").when(decoderColumnHandle0).getMapping();
      doReturn("org.glassfish.jersey.logging.ServerLoggingFilter").when(decoderColumnHandle0).getName();
      doReturn((Type) null).when(decoderColumnHandle0).getType();
      doReturn(true).when(decoderColumnHandle0).isInternal();
      AvroColumnDecoder avroColumnDecoder0 = null;
      try {
        avroColumnDecoder0 = new AvroColumnDecoder(decoderColumnHandle0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unexpected internal column 'org.glassfish.jersey.logging.ServerLoggingFilter'
         //
         verifyException("com.facebook.presto.decoder.avro.AvroColumnDecoder", e);
      }
  }
}
