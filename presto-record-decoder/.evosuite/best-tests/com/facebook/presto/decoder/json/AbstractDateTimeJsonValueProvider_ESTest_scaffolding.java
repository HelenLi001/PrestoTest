/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sat Nov 20 18:00:15 GMT 2021
 */

package com.facebook.presto.decoder.json;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class AbstractDateTimeJsonValueProvider_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.facebook.presto.decoder.json.AbstractDateTimeJsonValueProvider"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.dir", "/mnt/c/Users/Helen/Documents/DataScience18668/GroupProject/project/presto/presto-record-decoder"); 
    java.lang.System.setProperty("user.home", "/home/helen"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "helen"); 
    java.lang.System.setProperty("user.timezone", "America/Los_Angeles"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractDateTimeJsonValueProvider_ESTest_scaffolding.class.getClassLoader() ,
      "com.facebook.presto.decoder.json.SecondsSinceEpochJsonFieldDecoder$SecondsSinceEpochJsonValueProvider",
      "com.facebook.presto.common.type.AbstractType",
      "com.fasterxml.jackson.core.JsonParser$NumberType",
      "org.joda.time.DateTimeZone",
      "org.joda.time.format.DateTimeParser",
      "com.fasterxml.jackson.databind.JsonSerializable$Base",
      "com.fasterxml.jackson.core.Versioned",
      "com.facebook.presto.spi.ErrorType",
      "com.facebook.presto.common.type.TypeSignature",
      "com.fasterxml.jackson.databind.jsontype.TypeSerializer",
      "com.fasterxml.jackson.annotation.JacksonAnnotation",
      "com.facebook.presto.decoder.json.SecondsSinceEpochJsonFieldDecoder",
      "com.fasterxml.jackson.annotation.JsonValue",
      "com.fasterxml.jackson.databind.node.BaseJsonNode",
      "com.facebook.presto.common.type.TypeSignatureBase",
      "com.fasterxml.jackson.databind.JsonSerializable",
      "com.facebook.presto.common.type.TimeWithTimeZoneType",
      "com.fasterxml.jackson.databind.JsonNode",
      "com.facebook.presto.common.block.BlockBuilder",
      "com.facebook.presto.decoder.FieldValueProvider",
      "com.facebook.presto.common.block.UncheckedBlock",
      "com.facebook.presto.common.type.TimeZoneKey$1",
      "com.facebook.presto.common.function.SqlFunctionProperties",
      "com.facebook.presto.decoder.json.MillisecondsSinceEpochJsonFieldDecoder",
      "org.joda.time.ReadableInstant",
      "com.fasterxml.jackson.databind.node.ValueNode",
      "com.facebook.presto.common.type.TimestampWithTimeZoneType",
      "org.joda.time.base.AbstractDateTime",
      "com.facebook.presto.common.type.AbstractIntType",
      "org.joda.time.format.DateTimePrinter",
      "org.joda.time.base.BaseLocal",
      "org.joda.time.ReadWritableInstant",
      "com.facebook.presto.spi.ErrorCodeSupplier",
      "com.facebook.presto.decoder.DecoderColumnHandle",
      "com.facebook.presto.common.type.AbstractLongType",
      "com.facebook.presto.common.type.TimestampType",
      "com.facebook.presto.decoder.json.MillisecondsSinceEpochJsonFieldDecoder$MillisecondsSinceEpochJsonValueProvider",
      "io.airlift.slice.Slice",
      "org.joda.time.base.AbstractPartial",
      "org.joda.time.base.BaseDateTime",
      "com.facebook.presto.common.type.TypeSignatureParameter",
      "com.fasterxml.jackson.core.JsonGenerator",
      "com.facebook.presto.spi.ErrorCode",
      "org.joda.time.LocalTime",
      "com.facebook.presto.decoder.json.AbstractDateTimeJsonValueProvider",
      "com.fasterxml.jackson.core.ObjectCodec",
      "com.facebook.presto.spi.PrestoException",
      "com.facebook.presto.decoder.json.CustomDateTimeJsonFieldDecoder$CustomDateTimeJsonValueProvider",
      "com.fasterxml.jackson.databind.DatabindContext",
      "com.facebook.presto.common.type.DateTimeEncoding",
      "org.joda.time.format.InternalPrinter",
      "com.fasterxml.jackson.core.JsonPointer",
      "com.fasterxml.jackson.core.JsonParser$Feature",
      "com.facebook.presto.common.type.TimeZoneNotSupportedException",
      "com.facebook.presto.common.Subfield",
      "org.joda.time.base.AbstractInstant",
      "com.fasterxml.jackson.databind.SerializerProvider",
      "com.fasterxml.jackson.core.JsonToken",
      "com.facebook.presto.common.block.BlockBuilderStatus",
      "com.facebook.presto.common.type.Type",
      "com.fasterxml.jackson.databind.node.JsonNodeType",
      "com.facebook.presto.decoder.json.CustomDateTimeJsonFieldDecoder",
      "com.fasterxml.jackson.core.TreeNode",
      "com.facebook.presto.decoder.DecoderErrorCode",
      "com.fasterxml.jackson.core.TreeCodec",
      "com.fasterxml.jackson.core.JsonParser",
      "com.facebook.presto.common.InvalidFunctionArgumentException",
      "org.joda.time.format.DateTimeFormatter",
      "org.joda.time.Chronology",
      "org.joda.time.DateTime",
      "org.joda.time.LocalDateTime",
      "org.joda.time.MutableDateTime",
      "com.facebook.presto.decoder.json.JsonFieldDecoder",
      "org.joda.time.LocalDate",
      "com.facebook.presto.common.type.TimeType",
      "org.joda.time.ReadableDateTime",
      "com.facebook.presto.common.type.TimeZoneKey",
      "org.joda.time.ReadWritableDateTime",
      "com.facebook.presto.common.type.FixedWidthType",
      "com.facebook.presto.spi.ColumnHandle",
      "org.joda.time.format.InternalParser",
      "org.joda.time.ReadablePartial",
      "com.fasterxml.jackson.databind.node.MissingNode",
      "com.facebook.presto.common.block.Block",
      "com.facebook.presto.common.type.DateType"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("com.facebook.presto.common.type.Type", false, AbstractDateTimeJsonValueProvider_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("com.facebook.presto.decoder.DecoderColumnHandle", false, AbstractDateTimeJsonValueProvider_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("com.fasterxml.jackson.databind.JsonNode", false, AbstractDateTimeJsonValueProvider_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.joda.time.format.DateTimeFormatter", false, AbstractDateTimeJsonValueProvider_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractDateTimeJsonValueProvider_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.facebook.presto.decoder.FieldValueProvider",
      "com.facebook.presto.decoder.json.AbstractDateTimeJsonValueProvider",
      "com.facebook.presto.common.type.AbstractType",
      "com.facebook.presto.common.type.AbstractLongType",
      "com.facebook.presto.common.type.TypeSignature",
      "com.facebook.presto.common.type.TypeSignatureBase",
      "com.facebook.presto.common.type.TimeType",
      "com.facebook.presto.common.type.TimeWithTimeZoneType",
      "com.facebook.presto.spi.ErrorType",
      "com.facebook.presto.spi.ErrorCode",
      "com.facebook.presto.decoder.DecoderErrorCode",
      "com.facebook.presto.common.type.AbstractIntType",
      "com.facebook.presto.common.type.DateType",
      "com.facebook.presto.common.type.TimestampType",
      "com.facebook.presto.common.type.TimestampWithTimeZoneType",
      "com.facebook.presto.common.type.TimeZoneKey$1",
      "com.facebook.presto.common.type.TimeZoneKey",
      "com.fasterxml.jackson.databind.JsonSerializable$Base",
      "com.fasterxml.jackson.databind.JsonNode",
      "com.facebook.presto.decoder.json.CustomDateTimeJsonFieldDecoder$CustomDateTimeJsonValueProvider",
      "com.facebook.presto.spi.PrestoException",
      "com.facebook.presto.decoder.json.SecondsSinceEpochJsonFieldDecoder$SecondsSinceEpochJsonValueProvider",
      "org.joda.time.format.DateTimeFormatter",
      "com.facebook.presto.decoder.json.MillisecondsSinceEpochJsonFieldDecoder$MillisecondsSinceEpochJsonValueProvider",
      "com.facebook.presto.decoder.json.RFC2822JsonFieldDecoder$RFC2822JsonValueProvider",
      "com.google.common.collect.ImmutableCollection",
      "com.google.common.collect.ImmutableSet",
      "com.google.common.collect.ImmutableSet$SetBuilderImpl",
      "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
      "com.google.common.math.IntMath",
      "com.google.common.math.MathPreconditions",
      "com.google.common.math.IntMath$1",
      "com.google.common.base.Preconditions",
      "com.google.common.collect.Hashing",
      "com.google.common.collect.ImmutableCollection$Builder",
      "com.google.common.collect.RegularImmutableSet",
      "org.joda.time.format.DateTimeFormat",
      "org.joda.time.format.DateTimeFormatterBuilder",
      "org.joda.time.DateTimeFieldType$StandardDateTimeFieldType",
      "org.joda.time.DurationFieldType$StandardDurationFieldType",
      "org.joda.time.DurationFieldType",
      "org.joda.time.DateTimeFieldType",
      "org.joda.time.format.DateTimeFormatterBuilder$TextField",
      "org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral",
      "org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter",
      "org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber",
      "org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset",
      "org.joda.time.format.DateTimeFormatterBuilder$Composite",
      "org.joda.time.UTCDateTimeZone",
      "org.joda.time.DateTimeZone",
      "com.facebook.presto.decoder.json.RFC2822JsonFieldDecoder",
      "org.joda.time.DateTimeUtils$SystemMillisProvider",
      "org.joda.time.DateTimeUtils",
      "org.joda.time.Chronology",
      "org.joda.time.chrono.BaseChronology",
      "org.joda.time.chrono.AssembledChronology",
      "org.joda.time.DurationField",
      "org.joda.time.field.MillisDurationField",
      "org.joda.time.field.BaseDurationField",
      "org.joda.time.field.PreciseDurationField",
      "org.joda.time.DateTimeField",
      "org.joda.time.field.BaseDateTimeField",
      "org.joda.time.field.PreciseDurationDateTimeField",
      "org.joda.time.field.PreciseDateTimeField",
      "org.joda.time.field.DecoratedDateTimeField",
      "org.joda.time.field.ZeroIsMaxDateTimeField",
      "org.joda.time.chrono.BasicChronology$HalfdayField",
      "org.joda.time.chrono.BasicChronology",
      "org.joda.time.chrono.BasicGJChronology",
      "org.joda.time.chrono.AssembledChronology$Fields",
      "org.joda.time.field.ImpreciseDateTimeField",
      "org.joda.time.chrono.BasicYearDateTimeField",
      "org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField",
      "org.joda.time.chrono.GJYearOfEraDateTimeField",
      "org.joda.time.field.OffsetDateTimeField",
      "org.joda.time.field.DividedDateTimeField",
      "org.joda.time.field.DecoratedDurationField",
      "org.joda.time.field.ScaledDurationField",
      "org.joda.time.field.RemainderDateTimeField",
      "org.joda.time.chrono.GJEraDateTimeField",
      "org.joda.time.chrono.GJDayOfWeekDateTimeField",
      "org.joda.time.chrono.BasicDayOfMonthDateTimeField",
      "org.joda.time.chrono.BasicDayOfYearDateTimeField",
      "org.joda.time.chrono.BasicMonthOfYearDateTimeField",
      "org.joda.time.chrono.GJMonthOfYearDateTimeField",
      "org.joda.time.chrono.BasicWeekyearDateTimeField",
      "org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField",
      "org.joda.time.field.UnsupportedDurationField",
      "org.joda.time.chrono.GregorianChronology",
      "org.joda.time.chrono.ISOYearOfEraDateTimeField",
      "org.joda.time.chrono.ISOChronology",
      "org.joda.time.tz.ZoneInfoProvider",
      "org.joda.time.tz.ZoneInfoProvider$1",
      "org.joda.time.tz.DateTimeZoneBuilder",
      "org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone",
      "org.joda.time.tz.DateTimeZoneBuilder$DSTZone",
      "org.joda.time.tz.DateTimeZoneBuilder$Recurrence",
      "org.joda.time.tz.DateTimeZoneBuilder$OfYear",
      "org.joda.time.tz.CachedDateTimeZone",
      "org.joda.time.chrono.ZonedChronology",
      "org.joda.time.chrono.ZonedChronology$ZonedDurationField",
      "org.joda.time.chrono.ZonedChronology$ZonedDateTimeField",
      "org.joda.time.format.DateTimeParserBucket",
      "org.joda.time.base.AbstractInstant",
      "org.joda.time.base.AbstractDateTime",
      "org.joda.time.base.BaseDateTime",
      "org.joda.time.MutableDateTime",
      "org.joda.time.field.AbstractReadableInstantFieldProperty",
      "org.joda.time.MutableDateTime$Property",
      "org.joda.time.chrono.GJLocaleSymbols",
      "org.joda.time.field.FieldUtils",
      "org.joda.time.format.FormatUtils",
      "com.facebook.presto.common.type.DateTimeEncoding"
    );
  }
}
