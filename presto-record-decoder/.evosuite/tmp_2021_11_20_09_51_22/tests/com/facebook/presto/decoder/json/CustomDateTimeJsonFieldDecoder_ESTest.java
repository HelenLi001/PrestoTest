/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 20 18:03:26 GMT 2021
 */

package com.facebook.presto.decoder.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.common.type.Type;
import com.facebook.presto.decoder.DecoderColumnHandle;
import com.facebook.presto.decoder.json.CustomDateTimeJsonFieldDecoder;
import com.fasterxml.jackson.databind.JsonNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.format.DateTimeFormatter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CustomDateTimeJsonFieldDecoder_ESTest extends CustomDateTimeJsonFieldDecoder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(decoderColumnHandle0).getDataFormat();
      doReturn((Type) null, (Type) null).when(decoderColumnHandle0).getType();
      CustomDateTimeJsonFieldDecoder customDateTimeJsonFieldDecoder0 = null;
      try {
        customDateTimeJsonFieldDecoder0 = new CustomDateTimeJsonFieldDecoder(decoderColumnHandle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.decoder.json.JsonRowDecoderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JsonNode jsonNode0 = mock(JsonNode.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonNode0).isValueNode();
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(decoderColumnHandle0).getName();
      doReturn((Type) null).when(decoderColumnHandle0).getType();
      DateTimeFormatter dateTimeFormatter0 = mock(DateTimeFormatter.class, new ViolatedAssumptionAnswer());
      CustomDateTimeJsonFieldDecoder.CustomDateTimeJsonValueProvider customDateTimeJsonFieldDecoder_CustomDateTimeJsonValueProvider0 = new CustomDateTimeJsonFieldDecoder.CustomDateTimeJsonValueProvider(jsonNode0, decoderColumnHandle0, dateTimeFormatter0);
      // Undeclared exception!
      try { 
        customDateTimeJsonFieldDecoder_CustomDateTimeJsonValueProvider0.getMillis();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // could not parse non-value node as 'null' for column 'null'
         //
         verifyException("com.facebook.presto.decoder.json.CustomDateTimeJsonFieldDecoder$CustomDateTimeJsonValueProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JsonNode jsonNode0 = mock(JsonNode.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(jsonNode0).asText();
      doReturn(true).when(jsonNode0).isValueNode();
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      DateTimeFormatter dateTimeFormatter0 = mock(DateTimeFormatter.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(dateTimeFormatter0).parseMillis(anyString());
      CustomDateTimeJsonFieldDecoder.CustomDateTimeJsonValueProvider customDateTimeJsonFieldDecoder_CustomDateTimeJsonValueProvider0 = new CustomDateTimeJsonFieldDecoder.CustomDateTimeJsonValueProvider(jsonNode0, decoderColumnHandle0, dateTimeFormatter0);
      long long0 = customDateTimeJsonFieldDecoder_CustomDateTimeJsonValueProvider0.getMillis();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(decoderColumnHandle0).getDataFormat();
      doReturn(type0, (Type) null).when(decoderColumnHandle0).getType();
      CustomDateTimeJsonFieldDecoder customDateTimeJsonFieldDecoder0 = null;
      try {
        customDateTimeJsonFieldDecoder0 = new CustomDateTimeJsonFieldDecoder(decoderColumnHandle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.decoder.json.JsonRowDecoderFactory", e);
      }
  }
}
