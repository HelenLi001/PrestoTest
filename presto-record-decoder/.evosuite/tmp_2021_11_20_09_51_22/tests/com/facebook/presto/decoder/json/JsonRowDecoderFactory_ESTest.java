/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 20 17:58:07 GMT 2021
 */

package com.facebook.presto.decoder.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.common.type.P4HyperLogLogType;
import com.facebook.presto.common.type.Type;
import com.facebook.presto.decoder.DecoderColumnHandle;
import com.facebook.presto.decoder.json.JsonRowDecoderFactory;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.util.IdentityHashMap;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JsonRowDecoderFactory_ESTest extends JsonRowDecoderFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      P4HyperLogLogType p4HyperLogLogType0 = P4HyperLogLogType.P4_HYPER_LOG_LOG;
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(decoderColumnHandle0).getDataFormat();
      doReturn((String) null).when(decoderColumnHandle0).getName();
      doReturn(p4HyperLogLogType0).when(decoderColumnHandle0).getType();
      // Undeclared exception!
      try { 
        JsonRowDecoderFactory.throwUnsupportedColumnType(decoderColumnHandle0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unsupported column type 'P4HyperLogLog' for column 'null'
         //
         verifyException("com.facebook.presto.decoder.json.JsonRowDecoderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JsonRowDecoderFactory jsonRowDecoderFactory0 = null;
      try {
        jsonRowDecoderFactory0 = new JsonRowDecoderFactory((ObjectMapper) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // objectMapper is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(decoderColumnHandle0).getDataFormat();
      doReturn((Type) null).when(decoderColumnHandle0).getType();
      // Undeclared exception!
      try { 
        JsonRowDecoderFactory.throwUnsupportedColumnType(decoderColumnHandle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.decoder.json.JsonRowDecoderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      doReturn("b1", "b1").when(decoderColumnHandle0).getDataFormat();
      doReturn("b1").when(decoderColumnHandle0).getName();
      doReturn((Type) null).when(decoderColumnHandle0).getType();
      // Undeclared exception!
      try { 
        JsonRowDecoderFactory.throwUnsupportedColumnType(decoderColumnHandle0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unsupported column type 'null' for column 'b1' with data format 'b1'
         //
         verifyException("com.facebook.presto.decoder.json.JsonRowDecoderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper();
      JsonRowDecoderFactory jsonRowDecoderFactory0 = new JsonRowDecoderFactory(objectMapper0);
      IdentityHashMap<String, String> identityHashMap0 = new IdentityHashMap<String, String>();
      // Undeclared exception!
      try { 
        jsonRowDecoderFactory0.create(identityHashMap0, (Set<DecoderColumnHandle>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // columnHandles is null
         //
         verifyException("java.util.Objects", e);
      }
  }
}
