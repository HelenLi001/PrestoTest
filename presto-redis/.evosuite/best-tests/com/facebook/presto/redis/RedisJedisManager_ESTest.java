/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 08:58:36 GMT 2021
 */

package com.facebook.presto.redis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.redis.RedisConnectorConfig;
import com.facebook.presto.redis.RedisJedisManager;
import com.facebook.presto.spi.HostAddress;
import com.facebook.presto.spi.NodeManager;
import io.airlift.units.Duration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RedisJedisManager_ESTest extends RedisJedisManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Duration duration0 = mock(Duration.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(duration0).toMillis();
      RedisConnectorConfig redisConnectorConfig0 = mock(RedisConnectorConfig.class, new ViolatedAssumptionAnswer());
      doReturn(duration0, (Duration) null).when(redisConnectorConfig0).getRedisConnectTimeout();
      doReturn(0).when(redisConnectorConfig0).getRedisDataBaseIndex();
      doReturn((String) null).when(redisConnectorConfig0).getRedisPassword();
      NodeManager nodeManager0 = mock(NodeManager.class, new ViolatedAssumptionAnswer());
      RedisJedisManager redisJedisManager0 = new RedisJedisManager(redisConnectorConfig0, nodeManager0);
      HostAddress hostAddress0 = mock(HostAddress.class, new ViolatedAssumptionAnswer());
      doReturn("{L7JI6six").when(hostAddress0).getHostText();
      doReturn((-506)).when(hostAddress0).getPort();
      doReturn((String) null).when(hostAddress0).toString();
      redisJedisManager0.getJedisPool(hostAddress0);
      HostAddress hostAddress1 = mock(HostAddress.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(hostAddress1).getHostText();
      doReturn(0).when(hostAddress1).getPort();
      doReturn((String) null).when(hostAddress1).toString();
      // Undeclared exception!
      try { 
        redisJedisManager0.getJedisPool(hostAddress1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("com.google.common.cache.LocalCache$Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RedisConnectorConfig redisConnectorConfig0 = mock(RedisConnectorConfig.class, new ViolatedAssumptionAnswer());
      NodeManager nodeManager0 = mock(NodeManager.class, new ViolatedAssumptionAnswer());
      RedisJedisManager redisJedisManager0 = new RedisJedisManager(redisConnectorConfig0, nodeManager0);
      // Undeclared exception!
      try { 
        redisJedisManager0.getJedisPool((HostAddress) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // host is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NodeManager nodeManager0 = mock(NodeManager.class, new ViolatedAssumptionAnswer());
      RedisJedisManager redisJedisManager0 = null;
      try {
        redisJedisManager0 = new RedisJedisManager((RedisConnectorConfig) null, nodeManager0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // redisConfig is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RedisConnectorConfig redisConnectorConfig0 = mock(RedisConnectorConfig.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(redisConnectorConfig0).toString();
      NodeManager nodeManager0 = mock(NodeManager.class, new ViolatedAssumptionAnswer());
      RedisJedisManager redisJedisManager0 = new RedisJedisManager(redisConnectorConfig0, nodeManager0);
      RedisConnectorConfig redisConnectorConfig1 = redisJedisManager0.getRedisConnectorConfig();
      assertNull(redisConnectorConfig1.getRedisPassword());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Duration duration0 = mock(Duration.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(duration0).toMillis();
      RedisConnectorConfig redisConnectorConfig0 = mock(RedisConnectorConfig.class, new ViolatedAssumptionAnswer());
      doReturn(duration0).when(redisConnectorConfig0).getRedisConnectTimeout();
      doReturn(0).when(redisConnectorConfig0).getRedisDataBaseIndex();
      doReturn((String) null).when(redisConnectorConfig0).getRedisPassword();
      NodeManager nodeManager0 = mock(NodeManager.class, new ViolatedAssumptionAnswer());
      RedisJedisManager redisJedisManager0 = new RedisJedisManager(redisConnectorConfig0, nodeManager0);
      HostAddress hostAddress0 = mock(HostAddress.class, new ViolatedAssumptionAnswer());
      doReturn("{L7JI6six").when(hostAddress0).getHostText();
      doReturn((-506)).when(hostAddress0).getPort();
      doReturn("{L7JI6six").when(hostAddress0).toString();
      redisJedisManager0.getJedisPool(hostAddress0);
      redisJedisManager0.tearDown();
  }
}
