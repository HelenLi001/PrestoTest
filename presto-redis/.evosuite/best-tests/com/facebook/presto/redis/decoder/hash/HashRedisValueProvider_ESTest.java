/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 08:56:21 GMT 2021
 */

package com.facebook.presto.redis.decoder.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.decoder.DecoderColumnHandle;
import com.facebook.presto.redis.decoder.hash.HashRedisValueProvider;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HashRedisValueProvider_ESTest extends HashRedisValueProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      HashRedisValueProvider hashRedisValueProvider0 = new HashRedisValueProvider(decoderColumnHandle0, "0");
      assertFalse(hashRedisValueProvider0.isNull());
      assertNotNull(hashRedisValueProvider0);
      
      long long0 = hashRedisValueProvider0.getLong();
      assertEquals(0L, long0);
      assertFalse(hashRedisValueProvider0.isNull());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      HashRedisValueProvider hashRedisValueProvider0 = new HashRedisValueProvider(decoderColumnHandle0, "9");
      assertFalse(hashRedisValueProvider0.isNull());
      assertNotNull(hashRedisValueProvider0);
      
      long long0 = hashRedisValueProvider0.getLong();
      assertEquals(9L, long0);
      assertFalse(hashRedisValueProvider0.isNull());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      HashRedisValueProvider hashRedisValueProvider0 = new HashRedisValueProvider(decoderColumnHandle0, "9");
      assertFalse(hashRedisValueProvider0.isNull());
      assertNotNull(hashRedisValueProvider0);
      
      double double0 = hashRedisValueProvider0.getDouble();
      assertEquals(9.0, double0, 0.01);
      assertFalse(hashRedisValueProvider0.isNull());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashRedisValueProvider hashRedisValueProvider0 = new HashRedisValueProvider((DecoderColumnHandle) null, "");
      assertTrue(hashRedisValueProvider0.isNull());
      assertNotNull(hashRedisValueProvider0);
      
      // Undeclared exception!
      try { 
        hashRedisValueProvider0.getLong();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      HashRedisValueProvider hashRedisValueProvider0 = new HashRedisValueProvider(decoderColumnHandle0, "");
      assertTrue(hashRedisValueProvider0.isNull());
      assertNotNull(hashRedisValueProvider0);
      
      // Undeclared exception!
      try { 
        hashRedisValueProvider0.getDouble();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      HashRedisValueProvider hashRedisValueProvider0 = new HashRedisValueProvider(decoderColumnHandle0, (String) null);
      assertTrue(hashRedisValueProvider0.isNull());
      assertNotNull(hashRedisValueProvider0);
      
      // Undeclared exception!
      try { 
        hashRedisValueProvider0.getDouble();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.redis.decoder.hash.HashRedisValueProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashRedisValueProvider hashRedisValueProvider0 = new HashRedisValueProvider((DecoderColumnHandle) null, "4gX0nRj>:T|,@,iN");
      assertFalse(hashRedisValueProvider0.isNull());
      assertNotNull(hashRedisValueProvider0);
      
      boolean boolean0 = hashRedisValueProvider0.isNull();
      assertFalse(boolean0);
      assertFalse(hashRedisValueProvider0.isNull());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      HashRedisValueProvider hashRedisValueProvider0 = new HashRedisValueProvider(decoderColumnHandle0, (String) null);
      assertTrue(hashRedisValueProvider0.isNull());
      assertNotNull(hashRedisValueProvider0);
      
      boolean boolean0 = hashRedisValueProvider0.isNull();
      assertTrue(boolean0);
      assertTrue(hashRedisValueProvider0.isNull());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      HashRedisValueProvider hashRedisValueProvider0 = new HashRedisValueProvider(decoderColumnHandle0, "");
      assertTrue(hashRedisValueProvider0.isNull());
      assertNotNull(hashRedisValueProvider0);
      
      boolean boolean0 = hashRedisValueProvider0.isNull();
      assertTrue(boolean0);
      assertTrue(hashRedisValueProvider0.isNull());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      HashRedisValueProvider hashRedisValueProvider0 = new HashRedisValueProvider(decoderColumnHandle0, "9");
      assertFalse(hashRedisValueProvider0.isNull());
      assertNotNull(hashRedisValueProvider0);
      
      boolean boolean0 = hashRedisValueProvider0.getBoolean();
      assertFalse(boolean0);
      assertFalse(hashRedisValueProvider0.isNull());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      HashRedisValueProvider hashRedisValueProvider0 = new HashRedisValueProvider(decoderColumnHandle0, "");
      assertTrue(hashRedisValueProvider0.isNull());
      assertNotNull(hashRedisValueProvider0);
      
      boolean boolean0 = hashRedisValueProvider0.getBoolean();
      assertFalse(boolean0);
      assertTrue(hashRedisValueProvider0.isNull());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      HashRedisValueProvider hashRedisValueProvider0 = new HashRedisValueProvider(decoderColumnHandle0, "0");
      assertFalse(hashRedisValueProvider0.isNull());
      assertNotNull(hashRedisValueProvider0);
      
      double double0 = hashRedisValueProvider0.getDouble();
      assertEquals(0.0, double0, 0.01);
      assertFalse(hashRedisValueProvider0.isNull());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      HashRedisValueProvider hashRedisValueProvider0 = new HashRedisValueProvider(decoderColumnHandle0, "0");
      // Undeclared exception!
      try { 
        hashRedisValueProvider0.getSlice();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.airlift.slice.Slices
         //
         verifyException("com.facebook.presto.redis.decoder.hash.HashRedisValueProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DecoderColumnHandle decoderColumnHandle0 = mock(DecoderColumnHandle.class, new ViolatedAssumptionAnswer());
      HashRedisValueProvider hashRedisValueProvider0 = new HashRedisValueProvider(decoderColumnHandle0, (String) null);
      // Undeclared exception!
      try { 
        hashRedisValueProvider0.getLong();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.redis.decoder.hash.HashRedisValueProvider", e);
      }
  }
}
