/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 08:59:20 GMT 2021
 */

package com.facebook.presto.redis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.redis.RedisTableDescription;
import com.facebook.presto.redis.RedisTableFieldGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RedisTableDescription_ESTest extends RedisTableDescription_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RedisTableDescription redisTableDescription0 = new RedisTableDescription("c6ybs", (String) null, (RedisTableFieldGroup) null, (RedisTableFieldGroup) null);
      String string0 = redisTableDescription0.getSchemaName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RedisTableDescription redisTableDescription0 = new RedisTableDescription("Gx38ia;xPku7L", "", (RedisTableFieldGroup) null, (RedisTableFieldGroup) null);
      String string0 = redisTableDescription0.getSchemaName();
      assertEquals("", string0);
      assertEquals("Gx38ia;xPku7L", redisTableDescription0.getTableName());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RedisTableDescription redisTableDescription0 = null;
      try {
        redisTableDescription0 = new RedisTableDescription((String) null, (String) null, (RedisTableFieldGroup) null, (RedisTableFieldGroup) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // tableName is null or is empty
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RedisTableDescription redisTableDescription0 = new RedisTableDescription("=c_?|`qk),jN2!E<", "=c_?|`qk),jN2!E<", (RedisTableFieldGroup) null, (RedisTableFieldGroup) null);
      String string0 = redisTableDescription0.getSchemaName();
      assertEquals("=c_?|`qk),jN2!E<", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RedisTableDescription redisTableDescription0 = new RedisTableDescription("=c_?|`qk),jN2!E<", "=c_?|`qk),jN2!E<", (RedisTableFieldGroup) null, (RedisTableFieldGroup) null);
      String string0 = redisTableDescription0.toString();
      assertEquals("RedisTableDescription{tableName==c_?|`qk),jN2!E<, schemaName==c_?|`qk),jN2!E<, key=null, value=null}", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RedisTableDescription redisTableDescription0 = new RedisTableDescription("=c_?|`qk),jN2!E<", "=c_?|`qk),jN2!E<", (RedisTableFieldGroup) null, (RedisTableFieldGroup) null);
      RedisTableFieldGroup redisTableFieldGroup0 = redisTableDescription0.getValue();
      assertNull(redisTableFieldGroup0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RedisTableDescription redisTableDescription0 = new RedisTableDescription("=c_?|`qk),jN2!E<", "=c_?|`qk),jN2!E<", (RedisTableFieldGroup) null, (RedisTableFieldGroup) null);
      RedisTableFieldGroup redisTableFieldGroup0 = redisTableDescription0.getKey();
      assertNull(redisTableFieldGroup0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      RedisTableDescription redisTableDescription0 = new RedisTableDescription("=c_?|`qk),jN2!E<", "=c_?|`qk),jN2!E<", (RedisTableFieldGroup) null, (RedisTableFieldGroup) null);
      String string0 = redisTableDescription0.getTableName();
      assertEquals("=c_?|`qk),jN2!E<", string0);
  }
}
