/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 20 17:38:25 GMT 2021
 */

package com.facebook.presto.resourceGroups;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.resourceGroups.ResourceGroupNameTemplate;
import com.facebook.presto.resourceGroups.VariableMap;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResourceGroupNameTemplate_ESTest extends ResourceGroupNameTemplate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResourceGroupNameTemplate resourceGroupNameTemplate0 = null;
      try {
        resourceGroupNameTemplate0 = new ResourceGroupNameTemplate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResourceGroupNameTemplate resourceGroupNameTemplate0 = new ResourceGroupNameTemplate("");
      ResourceGroupNameTemplate resourceGroupNameTemplate1 = new ResourceGroupNameTemplate(":[Z@ \"8");
      boolean boolean0 = resourceGroupNameTemplate0.equals(resourceGroupNameTemplate1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResourceGroupNameTemplate resourceGroupNameTemplate0 = new ResourceGroupNameTemplate("V\"qn9G R:");
      boolean boolean0 = resourceGroupNameTemplate0.equals("V\"qn9G R:");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResourceGroupNameTemplate resourceGroupNameTemplate0 = new ResourceGroupNameTemplate("V\"qn9G R:");
      ResourceGroupNameTemplate resourceGroupNameTemplate1 = new ResourceGroupNameTemplate("V\"qn9G R:");
      boolean boolean0 = resourceGroupNameTemplate0.equals(resourceGroupNameTemplate1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResourceGroupNameTemplate resourceGroupNameTemplate0 = new ResourceGroupNameTemplate("V\"qn9G R:");
      boolean boolean0 = resourceGroupNameTemplate0.equals(resourceGroupNameTemplate0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResourceGroupNameTemplate resourceGroupNameTemplate0 = new ResourceGroupNameTemplate("V\"qn9G R:");
      boolean boolean0 = resourceGroupNameTemplate0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResourceGroupNameTemplate resourceGroupNameTemplate0 = null;
      try {
        resourceGroupNameTemplate0 = new ResourceGroupNameTemplate("$5R");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid resource group name. '$5R' contains extraneous '$', '{', or '}
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResourceGroupNameTemplate resourceGroupNameTemplate0 = null;
      try {
        resourceGroupNameTemplate0 = new ResourceGroupNameTemplate("z}vM,#w+");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid resource group name. 'z}vM,#w+' contains extraneous '$', '{', or '}
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResourceGroupNameTemplate resourceGroupNameTemplate0 = null;
      try {
        resourceGroupNameTemplate0 = new ResourceGroupNameTemplate("{");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid resource group name. '{' contains extraneous '$', '{', or '}
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResourceGroupNameTemplate resourceGroupNameTemplate0 = null;
      try {
        resourceGroupNameTemplate0 = new ResourceGroupNameTemplate("omn.oogle.common.colzect.CollectCollectors");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid resource group name. 'omn.oogle.common.colzect.CollectCollectors' contains a '.'
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResourceGroupNameTemplate resourceGroupNameTemplate0 = null;
      try {
        resourceGroupNameTemplate0 = new ResourceGroupNameTemplate("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Resource group name is empty
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResourceGroupNameTemplate resourceGroupNameTemplate0 = new ResourceGroupNameTemplate("");
      resourceGroupNameTemplate0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResourceGroupNameTemplate resourceGroupNameTemplate0 = new ResourceGroupNameTemplate("V\"qn9G R:");
      boolean boolean0 = resourceGroupNameTemplate0.hasVariables();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResourceGroupNameTemplate resourceGroupNameTemplate0 = new ResourceGroupNameTemplate("r");
      Set<String> set0 = resourceGroupNameTemplate0.getVariableNames();
      assertEquals(0, set0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResourceGroupNameTemplate resourceGroupNameTemplate0 = new ResourceGroupNameTemplate("V\"qn9G R:");
      String string0 = resourceGroupNameTemplate0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResourceGroupNameTemplate resourceGroupNameTemplate0 = new ResourceGroupNameTemplate("V\"qn9G R:");
      String string0 = resourceGroupNameTemplate0.expandTemplate((VariableMap) null);
      assertEquals("V\"qn9G R:", string0);
  }
}
