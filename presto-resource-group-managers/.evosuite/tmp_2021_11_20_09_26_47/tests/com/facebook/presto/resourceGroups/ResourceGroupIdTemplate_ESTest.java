/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 20 17:41:45 GMT 2021
 */

package com.facebook.presto.resourceGroups;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.resourceGroups.ResourceGroupIdTemplate;
import com.facebook.presto.resourceGroups.ResourceGroupNameTemplate;
import com.facebook.presto.resourceGroups.VariableMap;
import com.facebook.presto.spi.resourceGroups.ResourceGroupId;
import java.util.List;
import java.util.OptionalInt;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResourceGroupIdTemplate_ESTest extends ResourceGroupIdTemplate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResourceGroupIdTemplate resourceGroupIdTemplate0 = new ResourceGroupIdTemplate("LV\rM1g2>");
      ResourceGroupIdTemplate resourceGroupIdTemplate1 = ResourceGroupIdTemplate.forSubGroupNamed(resourceGroupIdTemplate0, "Av.%y(cr");
      ResourceGroupIdTemplate resourceGroupIdTemplate2 = ResourceGroupIdTemplate.forSubGroupNamed(resourceGroupIdTemplate1, "LV\rM1g2>");
      String string0 = resourceGroupIdTemplate2.toString();
      ResourceGroupIdTemplate resourceGroupIdTemplate3 = new ResourceGroupIdTemplate(string0);
      List<ResourceGroupNameTemplate> list0 = resourceGroupIdTemplate3.getSegments();
      // Undeclared exception!
      ResourceGroupIdTemplate.fromSegments(list0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourceGroupIdTemplate.fromSegments((List<ResourceGroupNameTemplate>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.resourceGroups.ResourceGroupIdTemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResourceGroupIdTemplate resourceGroupIdTemplate0 = new ResourceGroupIdTemplate("LV\rM1g2>");
      ResourceGroupIdTemplate resourceGroupIdTemplate1 = ResourceGroupIdTemplate.forSubGroupNamed(resourceGroupIdTemplate0, "Av.%y(cr");
      ResourceGroupIdTemplate resourceGroupIdTemplate2 = ResourceGroupIdTemplate.forSubGroupNamed(resourceGroupIdTemplate1, "r-nf1|5|h-m=|#");
      String string0 = resourceGroupIdTemplate2.toString();
      ResourceGroupIdTemplate resourceGroupIdTemplate3 = ResourceGroupIdTemplate.forSubGroupNamed(resourceGroupIdTemplate1, string0);
      // Undeclared exception!
      ResourceGroupIdTemplate.forSubGroupNamed(resourceGroupIdTemplate3, string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourceGroupIdTemplate.forSubGroupNamed((ResourceGroupIdTemplate) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // parent is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResourceGroupIdTemplate resourceGroupIdTemplate0 = new ResourceGroupIdTemplate("8=z");
      // Undeclared exception!
      try { 
        ResourceGroupIdTemplate.forSubGroupNamed(resourceGroupIdTemplate0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Resource group name is empty
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResourceGroupIdTemplate resourceGroupIdTemplate0 = new ResourceGroupIdTemplate("LV\rM1g2>");
      ResourceGroupIdTemplate resourceGroupIdTemplate1 = ResourceGroupIdTemplate.forSubGroupNamed(resourceGroupIdTemplate0, "Av.%y(Wr");
      ResourceGroupIdTemplate resourceGroupIdTemplate2 = ResourceGroupIdTemplate.forSubGroupNamed(resourceGroupIdTemplate1, "LV\rM1g2>");
      String string0 = resourceGroupIdTemplate2.toString();
      ResourceGroupIdTemplate resourceGroupIdTemplate3 = ResourceGroupIdTemplate.forSubGroupNamed(resourceGroupIdTemplate1, string0);
      // Undeclared exception!
      resourceGroupIdTemplate3.expandTemplate((VariableMap) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResourceGroupIdTemplate resourceGroupIdTemplate0 = null;
      try {
        resourceGroupIdTemplate0 = new ResourceGroupIdTemplate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // fullId is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResourceGroupIdTemplate resourceGroupIdTemplate0 = null;
      try {
        resourceGroupIdTemplate0 = new ResourceGroupIdTemplate("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Resource group name is empty
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResourceGroupIdTemplate resourceGroupIdTemplate0 = new ResourceGroupIdTemplate("#&@W=|43&");
      boolean boolean0 = resourceGroupIdTemplate0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResourceGroupIdTemplate resourceGroupIdTemplate0 = new ResourceGroupIdTemplate("19^%v+g4Q5");
      boolean boolean0 = resourceGroupIdTemplate0.equals(resourceGroupIdTemplate0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResourceGroupIdTemplate resourceGroupIdTemplate0 = new ResourceGroupIdTemplate("#&@W=|43&");
      ResourceGroupIdTemplate resourceGroupIdTemplate1 = ResourceGroupIdTemplate.forSubGroupNamed(resourceGroupIdTemplate0, "#&@W=|43&");
      boolean boolean0 = resourceGroupIdTemplate1.equals(resourceGroupIdTemplate0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResourceGroupIdTemplate resourceGroupIdTemplate0 = new ResourceGroupIdTemplate("#&@W=|43&");
      ResourceGroupId resourceGroupId0 = resourceGroupIdTemplate0.expandTemplate((VariableMap) null);
      assertEquals("#&@W=|43&", resourceGroupId0.getLastSegment());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResourceGroupIdTemplate resourceGroupIdTemplate0 = new ResourceGroupIdTemplate("#&@W=|43&");
      List<ResourceGroupNameTemplate> list0 = resourceGroupIdTemplate0.getSegments();
      // Undeclared exception!
      try { 
        ResourceGroupIdTemplate.fromSegments(list0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid resource group name. 'ResourceGroupNameTemplate$NameFragment@0000000006' contains extraneous '$', '{', or '}
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResourceGroupIdTemplate resourceGroupIdTemplate0 = new ResourceGroupIdTemplate("#&@W=|43&");
      OptionalInt optionalInt0 = resourceGroupIdTemplate0.getFirstDynamicSegment();
      boolean boolean0 = resourceGroupIdTemplate0.equals(optionalInt0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResourceGroupIdTemplate resourceGroupIdTemplate0 = new ResourceGroupIdTemplate("#&@W=|43&");
      Set<String> set0 = resourceGroupIdTemplate0.getVariableNames();
      assertEquals(0, set0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResourceGroupIdTemplate resourceGroupIdTemplate0 = new ResourceGroupIdTemplate("#&@W=|43&");
      resourceGroupIdTemplate0.hashCode();
  }
}
