/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 18 22:31:48 GMT 2021
 */

package com.facebook.presto.spark.classloader_interface;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.spark.classloader_interface.PrestoSparkMaterializedRow;
import com.facebook.presto.spark.classloader_interface.PrestoSparkMutableRow;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PrestoSparkMaterializedRow_ESTest extends PrestoSparkMaterializedRow_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      PrestoSparkMaterializedRow prestoSparkMaterializedRow0 = new PrestoSparkMaterializedRow(byteArray0);
      byte[] byteArray1 = prestoSparkMaterializedRow0.getData();
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PrestoSparkMaterializedRow prestoSparkMaterializedRow0 = null;
      try {
        prestoSparkMaterializedRow0 = new PrestoSparkMaterializedRow((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // data is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      PrestoSparkMaterializedRow prestoSparkMaterializedRow0 = new PrestoSparkMaterializedRow(byteArray0);
      PrestoSparkMutableRow prestoSparkMutableRow0 = prestoSparkMaterializedRow0.toPrestoSparkMutableRow();
      assertEquals(0, prestoSparkMutableRow0.getOffset());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      PrestoSparkMaterializedRow prestoSparkMaterializedRow0 = new PrestoSparkMaterializedRow(byteArray0);
      byte[] byteArray1 = prestoSparkMaterializedRow0.getData();
      assertSame(byteArray0, byteArray1);
  }
}
