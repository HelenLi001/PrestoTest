/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 18 22:27:49 GMT 2021
 */

package com.facebook.presto.spark.classloader_interface;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.esotericsoftware.kryo.Kryo;
import com.esotericsoftware.kryo.io.Input;
import com.esotericsoftware.kryo.io.Output;
import com.facebook.presto.spark.classloader_interface.PrestoSparkMutableRow;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PrestoSparkMutableRow_ESTest extends PrestoSparkMutableRow_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      prestoSparkMutableRow0.setPositionCount(512);
      prestoSparkMutableRow0.setOffset(0);
      assertEquals(512L, prestoSparkMutableRow0.getPositionCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      prestoSparkMutableRow0.setPositionCount((-1304));
      prestoSparkMutableRow0.setOffset((byte)120);
      assertEquals((-1304L), prestoSparkMutableRow0.getPositionCount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      prestoSparkMutableRow0.setLength(1481);
      prestoSparkMutableRow0.setOffset(0);
      assertEquals(1481, prestoSparkMutableRow0.getLength());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      prestoSparkMutableRow0.setLength((-1304));
      prestoSparkMutableRow0.setOffset((byte)120);
      assertEquals((-1304), prestoSparkMutableRow0.getLength());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      prestoSparkMutableRow0.setPositionCount(726);
      prestoSparkMutableRow0.setLength(0);
      assertEquals(726L, prestoSparkMutableRow0.getPositionCount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      prestoSparkMutableRow0.setPositionCount((-380));
      prestoSparkMutableRow0.setLength((-1403));
      assertEquals((-380L), prestoSparkMutableRow0.getPositionCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      PrestoSparkMutableRow prestoSparkMutableRow1 = prestoSparkMutableRow0.setOffset(1833);
      prestoSparkMutableRow1.setLength((-1403));
      assertEquals((-1403), prestoSparkMutableRow1.getLength());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      PrestoSparkMutableRow prestoSparkMutableRow1 = prestoSparkMutableRow0.setOffset((-1584));
      prestoSparkMutableRow1.setLength((-1));
      assertEquals((-1584), prestoSparkMutableRow0.getOffset());
      assertEquals((-1), prestoSparkMutableRow0.getLength());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      prestoSparkMutableRow0.setPositionCount(726);
      byte[] byteArray0 = new byte[2];
      PrestoSparkMutableRow prestoSparkMutableRow1 = prestoSparkMutableRow0.setArray(byteArray0);
      assertEquals(726L, prestoSparkMutableRow1.getPositionCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      prestoSparkMutableRow0.setPositionCount((-1304));
      byte[] byteArray0 = new byte[1];
      PrestoSparkMutableRow prestoSparkMutableRow1 = prestoSparkMutableRow0.setArray(byteArray0);
      assertEquals((-1304L), prestoSparkMutableRow1.getPositionCount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      PrestoSparkMutableRow prestoSparkMutableRow1 = prestoSparkMutableRow0.setOffset(1833);
      PrestoSparkMutableRow prestoSparkMutableRow2 = prestoSparkMutableRow1.setArray((byte[]) null);
      assertEquals(1833, prestoSparkMutableRow2.getOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      PrestoSparkMutableRow prestoSparkMutableRow1 = prestoSparkMutableRow0.setOffset((-870));
      byte[] byteArray0 = new byte[5];
      PrestoSparkMutableRow prestoSparkMutableRow2 = prestoSparkMutableRow1.setArray(byteArray0);
      assertEquals((-870), prestoSparkMutableRow2.getOffset());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      byte[] byteArray0 = new byte[3];
      prestoSparkMutableRow0.setLength(1481);
      PrestoSparkMutableRow prestoSparkMutableRow1 = prestoSparkMutableRow0.setArray(byteArray0);
      assertEquals(1481, prestoSparkMutableRow1.getLength());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      PrestoSparkMutableRow prestoSparkMutableRow1 = prestoSparkMutableRow0.setLength((-1304));
      byte[] byteArray0 = new byte[1];
      PrestoSparkMutableRow prestoSparkMutableRow2 = prestoSparkMutableRow1.setArray(byteArray0);
      assertEquals((-1304), prestoSparkMutableRow2.getLength());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      prestoSparkMutableRow0.setPositionCount((byte)120);
      long long0 = prestoSparkMutableRow0.getPositionCount();
      assertEquals(120L, long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      prestoSparkMutableRow0.setPositionCount((-380));
      long long0 = prestoSparkMutableRow0.getPositionCount();
      assertEquals((-380L), long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      prestoSparkMutableRow0.setOffset((byte)120);
      int int0 = prestoSparkMutableRow0.getOffset();
      assertEquals(120, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      prestoSparkMutableRow0.setOffset((-1313));
      int int0 = prestoSparkMutableRow0.getOffset();
      assertEquals((-1313), int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      PrestoSparkMutableRow prestoSparkMutableRow1 = prestoSparkMutableRow0.setLength(2299);
      int int0 = prestoSparkMutableRow1.getLength();
      assertEquals(2299, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      prestoSparkMutableRow0.setLength((-870));
      int int0 = prestoSparkMutableRow0.getLength();
      assertEquals((-870), int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      byte[] byteArray0 = new byte[1];
      prestoSparkMutableRow0.setArray(byteArray0);
      byte[] byteArray1 = prestoSparkMutableRow0.getArray();
      assertArrayEquals(new byte[] {(byte)0}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      prestoSparkMutableRow0.setArray(byteArray0);
      byte[] byteArray1 = prestoSparkMutableRow0.getArray();
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      // Undeclared exception!
      try { 
        prestoSparkMutableRow0.getSize();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // buffer is expected to be not null
         //
         verifyException("com.facebook.presto.spark.classloader_interface.PrestoSparkMutableRow", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      int int0 = prestoSparkMutableRow0.getLength();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      int int0 = prestoSparkMutableRow0.getOffset();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      byte[] byteArray0 = prestoSparkMutableRow0.getArray();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      // Undeclared exception!
      try { 
        prestoSparkMutableRow0.write((Kryo) null, (Output) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PrestoSparkMutableRow is not expected to be serialized with Kryo or standard Java serialization
         //
         verifyException("com.facebook.presto.spark.classloader_interface.PrestoSparkMutableRow", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      ByteBuffer byteBuffer0 = prestoSparkMutableRow0.getBuffer();
      assertNull(byteBuffer0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      // Undeclared exception!
      try { 
        prestoSparkMutableRow0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PrestoSparkMutableRow is not expected to be serialized with Kryo or standard Java serialization
         //
         verifyException("com.facebook.presto.spark.classloader_interface.PrestoSparkMutableRow", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      prestoSparkMutableRow0.setBuffer((ByteBuffer) null);
      assertEquals(0, prestoSparkMutableRow0.getLength());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      // Undeclared exception!
      try { 
        prestoSparkMutableRow0.readExternal((ObjectInput) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PrestoSparkMutableRow is not expected to be serialized with Kryo or standard Java serialization
         //
         verifyException("com.facebook.presto.spark.classloader_interface.PrestoSparkMutableRow", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      long long0 = prestoSparkMutableRow0.getPositionCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PrestoSparkMutableRow prestoSparkMutableRow0 = new PrestoSparkMutableRow();
      // Undeclared exception!
      try { 
        prestoSparkMutableRow0.read((Kryo) null, (Input) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PrestoSparkMutableRow is not expected to be serialized with Kryo or standard Java serialization
         //
         verifyException("com.facebook.presto.spark.classloader_interface.PrestoSparkMutableRow", e);
      }
  }
}
