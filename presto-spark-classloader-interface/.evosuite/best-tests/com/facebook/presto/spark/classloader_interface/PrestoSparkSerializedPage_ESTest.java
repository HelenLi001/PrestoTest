/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 13 21:45:19 GMT 2021
 */

package com.facebook.presto.spark.classloader_interface;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.spark.classloader_interface.PrestoSparkSerializedPage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PrestoSparkSerializedPage_ESTest extends PrestoSparkSerializedPage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      PrestoSparkSerializedPage prestoSparkSerializedPage0 = new PrestoSparkSerializedPage(byteArray0, 2370, 2370, (byte)1, (byte)1);
      int int0 = prestoSparkSerializedPage0.getUncompressedSizeInBytes();
      assertEquals(2370, int0);
      assertEquals((byte)1, prestoSparkSerializedPage0.getPageCodecMarkers());
      assertEquals(1L, prestoSparkSerializedPage0.getChecksum());
      assertEquals(2370L, prestoSparkSerializedPage0.getPositionCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      PrestoSparkSerializedPage prestoSparkSerializedPage0 = new PrestoSparkSerializedPage(byteArray0, (-1266), (-1266), (byte) (-1), (-1266));
      int int0 = prestoSparkSerializedPage0.getUncompressedSizeInBytes();
      assertEquals((byte) (-1), prestoSparkSerializedPage0.getPageCodecMarkers());
      assertEquals((-1266), int0);
      assertEquals((-1266L), prestoSparkSerializedPage0.getChecksum());
      assertEquals((-1266L), prestoSparkSerializedPage0.getPositionCount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      PrestoSparkSerializedPage prestoSparkSerializedPage0 = new PrestoSparkSerializedPage(byteArray0, (-1266), (-1266), (byte) (-1), (-1266));
      prestoSparkSerializedPage0.getSize();
      assertEquals((-1266), prestoSparkSerializedPage0.getUncompressedSizeInBytes());
      assertEquals((-1266L), prestoSparkSerializedPage0.getChecksum());
      assertEquals((byte) (-1), prestoSparkSerializedPage0.getPageCodecMarkers());
      assertEquals((-1266L), prestoSparkSerializedPage0.getPositionCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      PrestoSparkSerializedPage prestoSparkSerializedPage0 = new PrestoSparkSerializedPage(byteArray0, 0, 0, (byte)0, (byte)0);
      long long0 = prestoSparkSerializedPage0.getPositionCount();
      assertEquals(0, prestoSparkSerializedPage0.getUncompressedSizeInBytes());
      assertEquals((byte)0, prestoSparkSerializedPage0.getPageCodecMarkers());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      PrestoSparkSerializedPage prestoSparkSerializedPage0 = new PrestoSparkSerializedPage(byteArray0, (-1266), (-1266), (byte) (-1), (-1266));
      long long0 = prestoSparkSerializedPage0.getPositionCount();
      assertEquals((-1266), prestoSparkSerializedPage0.getUncompressedSizeInBytes());
      assertEquals((-1266L), long0);
      assertEquals((-1266L), prestoSparkSerializedPage0.getChecksum());
      assertEquals((byte) (-1), prestoSparkSerializedPage0.getPageCodecMarkers());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      PrestoSparkSerializedPage prestoSparkSerializedPage0 = new PrestoSparkSerializedPage(byteArray0, 1418, 1418, (byte)0, 1418);
      byte byte0 = prestoSparkSerializedPage0.getPageCodecMarkers();
      assertEquals(1418L, prestoSparkSerializedPage0.getChecksum());
      assertEquals(1418L, prestoSparkSerializedPage0.getPositionCount());
      assertEquals(1418, prestoSparkSerializedPage0.getUncompressedSizeInBytes());
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      PrestoSparkSerializedPage prestoSparkSerializedPage0 = new PrestoSparkSerializedPage(byteArray0, (-1266), (-1266), (byte) (-1), (-1266));
      byte byte0 = prestoSparkSerializedPage0.getPageCodecMarkers();
      assertEquals((byte) (-1), byte0);
      assertEquals((-1266L), prestoSparkSerializedPage0.getChecksum());
      assertEquals((-1266L), prestoSparkSerializedPage0.getPositionCount());
      assertEquals((-1266), prestoSparkSerializedPage0.getUncompressedSizeInBytes());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      PrestoSparkSerializedPage prestoSparkSerializedPage0 = new PrestoSparkSerializedPage(byteArray0, 267, 267, (byte)119, 0L);
      prestoSparkSerializedPage0.getChecksum();
      assertEquals((byte)119, prestoSparkSerializedPage0.getPageCodecMarkers());
      assertEquals(267, prestoSparkSerializedPage0.getUncompressedSizeInBytes());
      assertEquals(267L, prestoSparkSerializedPage0.getPositionCount());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      PrestoSparkSerializedPage prestoSparkSerializedPage0 = new PrestoSparkSerializedPage(byteArray0, (-1266), (-1266), (byte) (-1), (-1266));
      long long0 = prestoSparkSerializedPage0.getChecksum();
      assertEquals((-1266), prestoSparkSerializedPage0.getUncompressedSizeInBytes());
      assertEquals((-1266L), long0);
      assertEquals((-1266L), prestoSparkSerializedPage0.getPositionCount());
      assertEquals((byte) (-1), prestoSparkSerializedPage0.getPageCodecMarkers());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      PrestoSparkSerializedPage prestoSparkSerializedPage0 = new PrestoSparkSerializedPage(byteArray0, 0, 0, (byte)0, (byte)0);
      prestoSparkSerializedPage0.getBytes();
      assertEquals(0L, prestoSparkSerializedPage0.getPositionCount());
      assertEquals((byte)0, prestoSparkSerializedPage0.getPageCodecMarkers());
      assertEquals(0, prestoSparkSerializedPage0.getUncompressedSizeInBytes());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PrestoSparkSerializedPage prestoSparkSerializedPage0 = null;
      try {
        prestoSparkSerializedPage0 = new PrestoSparkSerializedPage((byte[]) null, 1686, 1686, (byte) (-119), 0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[45];
      PrestoSparkSerializedPage prestoSparkSerializedPage0 = new PrestoSparkSerializedPage(byteArray0, (byte)10, (byte)0, (byte)10, (byte)10);
      byte byte0 = prestoSparkSerializedPage0.getPageCodecMarkers();
      assertEquals(10L, prestoSparkSerializedPage0.getPositionCount());
      assertEquals(10L, prestoSparkSerializedPage0.getChecksum());
      assertEquals(0, prestoSparkSerializedPage0.getUncompressedSizeInBytes());
      assertEquals((byte)10, byte0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[45];
      PrestoSparkSerializedPage prestoSparkSerializedPage0 = new PrestoSparkSerializedPage(byteArray0, (byte)10, (byte)0, (byte)10, (byte)10);
      prestoSparkSerializedPage0.getBytes();
      assertEquals(0, prestoSparkSerializedPage0.getUncompressedSizeInBytes());
      assertEquals(10L, prestoSparkSerializedPage0.getChecksum());
      assertEquals((byte)10, prestoSparkSerializedPage0.getPageCodecMarkers());
      assertEquals(10L, prestoSparkSerializedPage0.getPositionCount());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[45];
      PrestoSparkSerializedPage prestoSparkSerializedPage0 = new PrestoSparkSerializedPage(byteArray0, (byte)10, (byte)0, (byte)10, (byte)10);
      prestoSparkSerializedPage0.getSize();
      assertEquals((byte)10, prestoSparkSerializedPage0.getPageCodecMarkers());
      assertEquals(10L, prestoSparkSerializedPage0.getChecksum());
      assertEquals(10L, prestoSparkSerializedPage0.getPositionCount());
      assertEquals(0, prestoSparkSerializedPage0.getUncompressedSizeInBytes());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[45];
      PrestoSparkSerializedPage prestoSparkSerializedPage0 = new PrestoSparkSerializedPage(byteArray0, (byte)10, (byte)0, (byte)10, (byte)10);
      long long0 = prestoSparkSerializedPage0.getChecksum();
      assertEquals(10L, prestoSparkSerializedPage0.getPositionCount());
      assertEquals(10L, long0);
      assertEquals(0, prestoSparkSerializedPage0.getUncompressedSizeInBytes());
      assertEquals((byte)10, prestoSparkSerializedPage0.getPageCodecMarkers());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[45];
      PrestoSparkSerializedPage prestoSparkSerializedPage0 = new PrestoSparkSerializedPage(byteArray0, (byte)10, (byte)0, (byte)10, (byte)10);
      int int0 = prestoSparkSerializedPage0.getUncompressedSizeInBytes();
      assertEquals(10L, prestoSparkSerializedPage0.getPositionCount());
      assertEquals(10L, prestoSparkSerializedPage0.getChecksum());
      assertEquals(0, int0);
      assertEquals((byte)10, prestoSparkSerializedPage0.getPageCodecMarkers());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[45];
      PrestoSparkSerializedPage prestoSparkSerializedPage0 = new PrestoSparkSerializedPage(byteArray0, (byte)10, (byte)0, (byte)10, (byte)10);
      long long0 = prestoSparkSerializedPage0.getPositionCount();
      assertEquals((byte)10, prestoSparkSerializedPage0.getPageCodecMarkers());
      assertEquals(10L, prestoSparkSerializedPage0.getChecksum());
      assertEquals(10L, long0);
      assertEquals(0, prestoSparkSerializedPage0.getUncompressedSizeInBytes());
  }
}
