/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 20 22:49:56 GMT 2021
 */

package com.facebook.presto.server.testing;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.server.testing.TestingPrestoServerLauncherOptions;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TestingPrestoServerLauncherOptions_ESTest extends TestingPrestoServerLauncherOptions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TestingPrestoServerLauncherOptions.Catalog testingPrestoServerLauncherOptions_Catalog0 = new TestingPrestoServerLauncherOptions.Catalog("catalogName is null", "");
      assertEquals("catalogName is null", testingPrestoServerLauncherOptions_Catalog0.getCatalogName());
      assertEquals("", testingPrestoServerLauncherOptions_Catalog0.getConnectorName());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TestingPrestoServerLauncherOptions testingPrestoServerLauncherOptions0 = new TestingPrestoServerLauncherOptions();
      // Undeclared exception!
      try { 
        testingPrestoServerLauncherOptions0.validate();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // some plugins must be defined
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TestingPrestoServerLauncherOptions.Catalog testingPrestoServerLauncherOptions_Catalog0 = new TestingPrestoServerLauncherOptions.Catalog("Ojgk<?E)o1a(ndym", "Ojgk<?E)o1a(ndym");
      String string0 = testingPrestoServerLauncherOptions_Catalog0.getCatalogName();
      assertEquals("Ojgk<?E)o1a(ndym", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TestingPrestoServerLauncherOptions.Catalog testingPrestoServerLauncherOptions_Catalog0 = new TestingPrestoServerLauncherOptions.Catalog("com.google.common.base.CharMatcher$BitSetMatcher", "com.google.common.base.CharMatcher$BitSetMatcher");
      String string0 = testingPrestoServerLauncherOptions_Catalog0.getConnectorName();
      assertEquals("com.google.common.base.CharMatcher$BitSetMatcher", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TestingPrestoServerLauncherOptions testingPrestoServerLauncherOptions0 = new TestingPrestoServerLauncherOptions();
      List<TestingPrestoServerLauncherOptions.Catalog> list0 = testingPrestoServerLauncherOptions0.getCatalogs();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TestingPrestoServerLauncherOptions testingPrestoServerLauncherOptions0 = new TestingPrestoServerLauncherOptions();
      List<String> list0 = testingPrestoServerLauncherOptions0.getPluginClassNames();
      assertTrue(list0.isEmpty());
  }
}
