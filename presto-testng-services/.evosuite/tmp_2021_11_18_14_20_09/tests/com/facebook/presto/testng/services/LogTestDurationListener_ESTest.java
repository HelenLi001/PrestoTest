/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 18 22:22:57 GMT 2021
 */

package com.facebook.presto.testng.services;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.testng.services.LogTestDurationListener;
import java.lang.annotation.Annotation;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.net.Proxy;
import java.sql.ClientInfoStatus;
import java.sql.SQLClientInfoException;
import java.sql.SQLException;
import java.sql.SQLSyntaxErrorException;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.Description;
import org.junit.runner.RunWith;
import org.testng.IClassListener;
import org.testng.IInvokedMethod;
import org.testng.IInvokedMethodListener;
import org.testng.ITestClass;
import org.testng.ITestNGMethod;
import org.testng.ITestResult;
import org.testng.ITestRunnerFactory;
import org.testng.SuiteRunner;
import org.testng.TestRunner;
import org.testng.internal.BaseTestMethod;
import org.testng.internal.ClonedMethod;
import org.testng.internal.Configuration;
import org.testng.internal.ConfigurationMethod;
import org.testng.internal.ConstructorOrMethod;
import org.testng.internal.FactoryMethod;
import org.testng.internal.InvokedMethod;
import org.testng.internal.NoOpTestClass;
import org.testng.internal.ObjectFactoryImpl;
import org.testng.internal.TestNGMethod;
import org.testng.internal.TestResult;
import org.testng.internal.annotations.DefaultAnnotationTransformer;
import org.testng.internal.annotations.IAnnotationFinder;
import org.testng.internal.annotations.JDK15AnnotationFinder;
import org.testng.internal.annotations.TestAnnotation;
import org.testng.junit.JUnit3TestClass;
import org.testng.junit.JUnit4TestClass;
import org.testng.xml.XmlSuite;
import org.testng.xml.XmlTest;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LogTestDurationListener_ESTest extends LogTestDurationListener_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LogTestDurationListener logTestDurationListener0 = new LogTestDurationListener();
      TestAnnotation testAnnotation0 = new TestAnnotation();
      testAnnotation0.getMethod();
      ClonedMethod clonedMethod0 = new ClonedMethod((ITestNGMethod) null, (Method) null);
      TestResult testResult0 = new TestResult();
      InvokedMethod invokedMethod0 = new InvokedMethod(logTestDurationListener0, clonedMethod0, 5091L, testResult0);
      // Undeclared exception!
      try { 
        logTestDurationListener0.beforeInvocation(invokedMethod0, testResult0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.testng.internal.ClonedMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LogTestDurationListener logTestDurationListener0 = new LogTestDurationListener();
      ITestClass iTestClass0 = null;
      // Undeclared exception!
      try { 
        logTestDurationListener0.onBeforeClass((ITestClass) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.testng.services.LogTestDurationListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LogTestDurationListener logTestDurationListener0 = new LogTestDurationListener();
      logTestDurationListener0.onExecutionStart();
      Description description0 = Description.TEST_MECHANISM;
      JUnit4TestClass jUnit4TestClass0 = new JUnit4TestClass(description0);
      // Undeclared exception!
      try { 
        logTestDurationListener0.onBeforeClass(jUnit4TestClass0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.testng.junit.JUnitTestClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LogTestDurationListener logTestDurationListener0 = new LogTestDurationListener();
      Class<Proxy.Type> class0 = Proxy.Type.class;
      Description description0 = Description.createTestDescription(class0, "PnuyJuQ/y-w$]Lhue", (Annotation[]) null);
      JUnit4TestClass jUnit4TestClass0 = new JUnit4TestClass(description0);
      jUnit4TestClass0.getAfterClassMethods();
      Description.createTestDescription("", "c$mJ;qB", (Annotation[]) null);
      // Undeclared exception!
      try { 
        logTestDurationListener0.onAfterClass(jUnit4TestClass0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // There is no start record for test: java.net.Proxy$Type
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LogTestDurationListener logTestDurationListener0 = new LogTestDurationListener();
      logTestDurationListener0.onExecutionFinish();
      IInvokedMethod iInvokedMethod0 = null;
      TestResult testResult0 = new TestResult();
      // Undeclared exception!
      try { 
        logTestDurationListener0.afterInvocation((IInvokedMethod) null, testResult0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.testng.services.LogTestDurationListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LogTestDurationListener logTestDurationListener0 = new LogTestDurationListener();
      TestResult testResult0 = new TestResult();
      SQLClientInfoException sQLClientInfoException0 = new SQLClientInfoException("", "", 1964, (Map<String, ClientInfoStatus>) null);
      testResult0.setThrowable(sQLClientInfoException0);
      // Undeclared exception!
      try { 
        logTestDurationListener0.afterInvocation((IInvokedMethod) null, testResult0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.testng.services.LogTestDurationListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LogTestDurationListener logTestDurationListener0 = new LogTestDurationListener();
      ITestClass iTestClass0 = null;
      // Undeclared exception!
      try { 
        logTestDurationListener0.onAfterClass((ITestClass) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.testng.services.LogTestDurationListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LogTestDurationListener logTestDurationListener0 = new LogTestDurationListener();
      logTestDurationListener0.onExecutionFinish();
      logTestDurationListener0.onExecutionStart();
      logTestDurationListener0.onExecutionStart();
      logTestDurationListener0.onExecutionStart();
      Description description0 = Description.TEST_MECHANISM;
      JUnit4TestClass jUnit4TestClass0 = new JUnit4TestClass(description0);
      // Undeclared exception!
      try { 
        logTestDurationListener0.onAfterClass(jUnit4TestClass0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.testng.junit.JUnitTestClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LogTestDurationListener logTestDurationListener0 = new LogTestDurationListener();
      TestAnnotation testAnnotation0 = new TestAnnotation();
      testAnnotation0.getMethod();
      ConstructorOrMethod constructorOrMethod0 = new ConstructorOrMethod((Method) null);
      DefaultAnnotationTransformer defaultAnnotationTransformer0 = new DefaultAnnotationTransformer();
      JDK15AnnotationFinder jDK15AnnotationFinder0 = new JDK15AnnotationFinder(defaultAnnotationTransformer0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "E";
      stringArray0[1] = "";
      stringArray0[2] = "T(yr~bemJ3\"{=i2&";
      stringArray0[3] = "[MU tP";
      stringArray0[4] = "";
      String[] stringArray1 = new String[5];
      stringArray1[0] = "[MU tP";
      stringArray1[1] = "gJ[";
      stringArray1[2] = "";
      stringArray1[3] = "T(yr~bemJ3\"{=i2&";
      stringArray1[4] = "T(yr~bemJ3\"{=i2&";
      TestAnnotation testAnnotation1 = new TestAnnotation();
      ConfigurationMethod configurationMethod0 = null;
      try {
        configurationMethod0 = new ConfigurationMethod(constructorOrMethod0, jDK15AnnotationFinder0, true, true, false, true, true, true, true, true, stringArray0, stringArray1, testAnnotation1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.testng.internal.ConstructorOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      LogTestDurationListener logTestDurationListener0 = new LogTestDurationListener();
      Integer integer0 = XmlSuite.DEFAULT_VERBOSE;
      TestAnnotation testAnnotation0 = new TestAnnotation();
      testAnnotation0.getMethod();
      ConstructorOrMethod constructorOrMethod0 = new ConstructorOrMethod((Method) null);
      DefaultAnnotationTransformer defaultAnnotationTransformer0 = new DefaultAnnotationTransformer();
      JDK15AnnotationFinder jDK15AnnotationFinder0 = new JDK15AnnotationFinder(defaultAnnotationTransformer0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Language:";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "There already is a start record for test: %s";
      stringArray0[4] = "There is no start record for test: %s";
      stringArray0[5] = "Functions.identity()";
      ConfigurationMethod configurationMethod0 = null;
      try {
        configurationMethod0 = new ConfigurationMethod(constructorOrMethod0, jDK15AnnotationFinder0, false, false, false, false, false, false, false, true, stringArray0, stringArray0, "Language:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.testng.internal.ConstructorOrMethod", e);
      }
  }
}
