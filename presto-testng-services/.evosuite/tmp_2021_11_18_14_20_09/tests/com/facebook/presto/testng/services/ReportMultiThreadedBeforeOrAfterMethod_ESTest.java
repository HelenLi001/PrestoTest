/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 18 22:21:51 GMT 2021
 */

package com.facebook.presto.testng.services;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.testng.services.ReportMultiThreadedBeforeOrAfterMethod;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.Description;
import org.junit.runner.RunWith;
import org.testng.internal.NoOpTestClass;
import org.testng.junit.JUnit4TestClass;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReportMultiThreadedBeforeOrAfterMethod_ESTest extends ReportMultiThreadedBeforeOrAfterMethod_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReportMultiThreadedBeforeOrAfterMethod.reportMultiThreadedBeforeOrAfterMethod((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.testng.services.ReportMultiThreadedBeforeOrAfterMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ReportMultiThreadedBeforeOrAfterMethod reportMultiThreadedBeforeOrAfterMethod0 = new ReportMultiThreadedBeforeOrAfterMethod();
      Description description0 = Description.EMPTY;
      JUnit4TestClass jUnit4TestClass0 = new JUnit4TestClass(description0);
      // Undeclared exception!
      try { 
        reportMultiThreadedBeforeOrAfterMethod0.onBeforeClass(jUnit4TestClass0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      ReportMultiThreadedBeforeOrAfterMethod.reportMultiThreadedBeforeOrAfterMethod(class0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ReportMultiThreadedBeforeOrAfterMethod reportMultiThreadedBeforeOrAfterMethod0 = new ReportMultiThreadedBeforeOrAfterMethod();
      Description description0 = Description.EMPTY;
      JUnit4TestClass jUnit4TestClass0 = new JUnit4TestClass(description0);
      NoOpTestClass noOpTestClass0 = new NoOpTestClass(jUnit4TestClass0);
      reportMultiThreadedBeforeOrAfterMethod0.onAfterClass(noOpTestClass0);
      assertNull(noOpTestClass0.getTestName());
  }
}
