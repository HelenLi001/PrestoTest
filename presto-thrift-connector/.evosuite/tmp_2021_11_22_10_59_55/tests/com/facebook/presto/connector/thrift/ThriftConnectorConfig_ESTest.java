/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 19:20:16 GMT 2021
 */

package com.facebook.presto.connector.thrift;

import org.junit.Test;
import static org.junit.Assert.*;
import com.facebook.presto.connector.thrift.ThriftConnectorConfig;
import io.airlift.units.DataSize;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ThriftConnectorConfig_ESTest extends ThriftConnectorConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      assertEquals(1, thriftConnectorConfig0.getMetadataRefreshThreads());
      
      thriftConnectorConfig0.setMetadataRefreshThreads(0);
      thriftConnectorConfig0.setUseIdentityThriftHeader(false);
      assertEquals(0, thriftConnectorConfig0.getMetadataRefreshThreads());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      ThriftConnectorConfig thriftConnectorConfig1 = thriftConnectorConfig0.setMetadataRefreshThreads((-3244));
      thriftConnectorConfig1.setUseIdentityThriftHeader(true);
      assertTrue(thriftConnectorConfig1.getUseIdentityThriftHeader());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      assertEquals(1, thriftConnectorConfig0.getLookupRequestsConcurrency());
      
      ThriftConnectorConfig thriftConnectorConfig1 = thriftConnectorConfig0.setLookupRequestsConcurrency(0);
      thriftConnectorConfig1.setUseIdentityThriftHeader(false);
      assertEquals(0, thriftConnectorConfig0.getLookupRequestsConcurrency());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      thriftConnectorConfig0.setLookupRequestsConcurrency((-203));
      thriftConnectorConfig0.setUseIdentityThriftHeader(true);
      assertEquals((-203), thriftConnectorConfig0.getLookupRequestsConcurrency());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      ThriftConnectorConfig thriftConnectorConfig1 = thriftConnectorConfig0.setUseIdentityThriftHeader(true);
      thriftConnectorConfig1.setMetadataRefreshThreads(0);
      assertTrue(thriftConnectorConfig0.getUseIdentityThriftHeader());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      thriftConnectorConfig0.setLookupRequestsConcurrency(0);
      thriftConnectorConfig0.setMetadataRefreshThreads(0);
      assertEquals(0, thriftConnectorConfig0.getMetadataRefreshThreads());
      assertEquals(0, thriftConnectorConfig0.getLookupRequestsConcurrency());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      ThriftConnectorConfig thriftConnectorConfig1 = thriftConnectorConfig0.setLookupRequestsConcurrency((-3244));
      thriftConnectorConfig1.setMetadataRefreshThreads(1);
      assertEquals((-3244), thriftConnectorConfig0.getLookupRequestsConcurrency());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      thriftConnectorConfig0.setUseIdentityThriftHeader(true);
      DataSize dataSize0 = thriftConnectorConfig0.getMaxResponseSize();
      thriftConnectorConfig0.setMaxResponseSize(dataSize0);
      assertTrue(thriftConnectorConfig0.getUseIdentityThriftHeader());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      assertEquals(1, thriftConnectorConfig0.getMetadataRefreshThreads());
      
      thriftConnectorConfig0.setMetadataRefreshThreads(0);
      DataSize dataSize0 = thriftConnectorConfig0.getMaxResponseSize();
      thriftConnectorConfig0.setMaxResponseSize(dataSize0);
      assertEquals(0, thriftConnectorConfig0.getMetadataRefreshThreads());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      thriftConnectorConfig0.setMetadataRefreshThreads((-533));
      thriftConnectorConfig0.setMaxResponseSize((DataSize) null);
      assertEquals((-533), thriftConnectorConfig0.getMetadataRefreshThreads());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      assertEquals(1, thriftConnectorConfig0.getLookupRequestsConcurrency());
      
      ThriftConnectorConfig thriftConnectorConfig1 = thriftConnectorConfig0.setLookupRequestsConcurrency(0);
      DataSize dataSize0 = thriftConnectorConfig1.getMaxResponseSize();
      thriftConnectorConfig0.setMaxResponseSize(dataSize0);
      assertEquals(0, thriftConnectorConfig0.getLookupRequestsConcurrency());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      thriftConnectorConfig0.setLookupRequestsConcurrency((-3244));
      DataSize dataSize0 = thriftConnectorConfig0.getMaxResponseSize();
      thriftConnectorConfig0.setMaxResponseSize(dataSize0);
      assertEquals((-3244), thriftConnectorConfig0.getLookupRequestsConcurrency());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      ThriftConnectorConfig thriftConnectorConfig1 = thriftConnectorConfig0.setUseIdentityThriftHeader(true);
      thriftConnectorConfig1.setLookupRequestsConcurrency((-203));
      assertTrue(thriftConnectorConfig0.getUseIdentityThriftHeader());
      assertEquals((-203), thriftConnectorConfig0.getLookupRequestsConcurrency());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      assertEquals(1, thriftConnectorConfig0.getMetadataRefreshThreads());
      
      thriftConnectorConfig0.setMetadataRefreshThreads(0);
      thriftConnectorConfig0.setLookupRequestsConcurrency(1);
      assertEquals(0, thriftConnectorConfig0.getMetadataRefreshThreads());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      thriftConnectorConfig0.setMetadataRefreshThreads((-3244));
      thriftConnectorConfig0.setLookupRequestsConcurrency((-3244));
      assertEquals((-3244), thriftConnectorConfig0.getLookupRequestsConcurrency());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      ThriftConnectorConfig thriftConnectorConfig1 = thriftConnectorConfig0.setUseIdentityThriftHeader(true);
      boolean boolean0 = thriftConnectorConfig1.getUseIdentityThriftHeader();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      thriftConnectorConfig0.setMetadataRefreshThreads((-533));
      int int0 = thriftConnectorConfig0.getMetadataRefreshThreads();
      assertEquals((-533), int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      thriftConnectorConfig0.setMaxResponseSize((DataSize) null);
      thriftConnectorConfig0.getMaxResponseSize();
      assertEquals(1, thriftConnectorConfig0.getMetadataRefreshThreads());
      assertEquals(1, thriftConnectorConfig0.getLookupRequestsConcurrency());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      ThriftConnectorConfig thriftConnectorConfig1 = thriftConnectorConfig0.setLookupRequestsConcurrency((-287));
      int int0 = thriftConnectorConfig1.getLookupRequestsConcurrency();
      assertEquals((-287), int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      assertEquals(1, thriftConnectorConfig0.getMetadataRefreshThreads());
      
      ThriftConnectorConfig thriftConnectorConfig1 = thriftConnectorConfig0.setMetadataRefreshThreads(0);
      int int0 = thriftConnectorConfig1.getMetadataRefreshThreads();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      thriftConnectorConfig0.getUseIdentityThriftHeader();
      assertEquals(1, thriftConnectorConfig0.getLookupRequestsConcurrency());
      assertEquals(1, thriftConnectorConfig0.getMetadataRefreshThreads());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      int int0 = thriftConnectorConfig0.getLookupRequestsConcurrency();
      assertEquals(1, thriftConnectorConfig0.getMetadataRefreshThreads());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      assertEquals(1, thriftConnectorConfig0.getLookupRequestsConcurrency());
      
      thriftConnectorConfig0.setLookupRequestsConcurrency(0);
      int int0 = thriftConnectorConfig0.getLookupRequestsConcurrency();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ThriftConnectorConfig thriftConnectorConfig0 = new ThriftConnectorConfig();
      int int0 = thriftConnectorConfig0.getMetadataRefreshThreads();
      assertEquals(1, thriftConnectorConfig0.getLookupRequestsConcurrency());
      assertEquals(1, int0);
  }
}
