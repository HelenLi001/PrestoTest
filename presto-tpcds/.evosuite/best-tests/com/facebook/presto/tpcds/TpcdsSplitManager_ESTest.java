/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 09:22:41 GMT 2021
 */

package com.facebook.presto.tpcds;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.spi.ConnectorSession;
import com.facebook.presto.spi.ConnectorTableLayoutHandle;
import com.facebook.presto.spi.NodeManager;
import com.facebook.presto.spi.connector.ConnectorSplitManager;
import com.facebook.presto.spi.connector.ConnectorTransactionHandle;
import com.facebook.presto.tpcds.TpcdsSplitManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TpcdsSplitManager_ESTest extends TpcdsSplitManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NodeManager nodeManager0 = mock(NodeManager.class, new ViolatedAssumptionAnswer());
      ConnectorTransactionHandle connectorTransactionHandle0 = mock(ConnectorTransactionHandle.class, new ViolatedAssumptionAnswer());
      TpcdsSplitManager tpcdsSplitManager0 = new TpcdsSplitManager(nodeManager0, 2458, false);
      ConnectorTableLayoutHandle connectorTableLayoutHandle0 = mock(ConnectorTableLayoutHandle.class, new ViolatedAssumptionAnswer());
      ConnectorSession connectorSession0 = mock(ConnectorSession.class, new ViolatedAssumptionAnswer());
      ConnectorSplitManager.SplitSchedulingContext connectorSplitManager_SplitSchedulingContext0 = mock(ConnectorSplitManager.SplitSchedulingContext.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        tpcdsSplitManager0.getSplits(connectorTransactionHandle0, connectorSession0, connectorTableLayoutHandle0, connectorSplitManager_SplitSchedulingContext0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.facebook.presto.spi.ConnectorTableLayoutHandle$MockitoMock$818369421 cannot be cast to com.facebook.presto.tpcds.TpcdsTableLayoutHandle
         //
         verifyException("com.facebook.presto.tpcds.TpcdsSplitManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TpcdsSplitManager tpcdsSplitManager0 = null;
      try {
        tpcdsSplitManager0 = new TpcdsSplitManager((NodeManager) null, (-1), true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NodeManager nodeManager0 = mock(NodeManager.class, new ViolatedAssumptionAnswer());
      TpcdsSplitManager tpcdsSplitManager0 = new TpcdsSplitManager(nodeManager0, 1, true);
      ConnectorSession connectorSession0 = mock(ConnectorSession.class, new ViolatedAssumptionAnswer());
      ConnectorSplitManager.SplitSchedulingContext connectorSplitManager_SplitSchedulingContext0 = mock(ConnectorSplitManager.SplitSchedulingContext.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        tpcdsSplitManager0.getSplits((ConnectorTransactionHandle) null, connectorSession0, (ConnectorTableLayoutHandle) null, connectorSplitManager_SplitSchedulingContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.tpcds.TpcdsSplitManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NodeManager nodeManager0 = mock(NodeManager.class, new ViolatedAssumptionAnswer());
      TpcdsSplitManager tpcdsSplitManager0 = null;
      try {
        tpcdsSplitManager0 = new TpcdsSplitManager(nodeManager0, (-1985), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // splitsPerNode must be at least 1
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }
}
