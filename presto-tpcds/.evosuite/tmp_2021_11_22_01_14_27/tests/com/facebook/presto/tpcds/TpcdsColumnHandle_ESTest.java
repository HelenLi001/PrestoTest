/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 09:23:58 GMT 2021
 */

package com.facebook.presto.tpcds;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.common.type.Type;
import com.facebook.presto.tpcds.TpcdsColumnHandle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TpcdsColumnHandle_ESTest extends TpcdsColumnHandle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      TpcdsColumnHandle tpcdsColumnHandle0 = new TpcdsColumnHandle("", type0);
      String string0 = tpcdsColumnHandle0.getColumnName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TpcdsColumnHandle tpcdsColumnHandle0 = null;
      try {
        tpcdsColumnHandle0 = new TpcdsColumnHandle("row", (Type) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // type is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      TpcdsColumnHandle tpcdsColumnHandle0 = new TpcdsColumnHandle("?IZ;", type0);
      boolean boolean0 = tpcdsColumnHandle0.equals("?IZ;");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      TpcdsColumnHandle tpcdsColumnHandle0 = new TpcdsColumnHandle("?IZ;", type0);
      boolean boolean0 = tpcdsColumnHandle0.equals(tpcdsColumnHandle0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      TpcdsColumnHandle tpcdsColumnHandle0 = new TpcdsColumnHandle("?IZ;", type0);
      boolean boolean0 = tpcdsColumnHandle0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      TpcdsColumnHandle tpcdsColumnHandle0 = new TpcdsColumnHandle("?IZ;", type0);
      String string0 = tpcdsColumnHandle0.toString();
      assertEquals("tpcds:?IZ;", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      doReturn("?IZ;").when(type0).toString();
      TpcdsColumnHandle tpcdsColumnHandle0 = new TpcdsColumnHandle("?IZ;", type0);
      Type type1 = tpcdsColumnHandle0.getType();
      TpcdsColumnHandle tpcdsColumnHandle1 = new TpcdsColumnHandle("?IZ;", type1);
      boolean boolean0 = tpcdsColumnHandle0.equals(tpcdsColumnHandle1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      TpcdsColumnHandle tpcdsColumnHandle0 = new TpcdsColumnHandle("?IZ;", type0);
      tpcdsColumnHandle0.hashCode();
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      TpcdsColumnHandle tpcdsColumnHandle0 = new TpcdsColumnHandle("?IZ;", type0);
      String string0 = tpcdsColumnHandle0.getColumnName();
      assertEquals("?IZ;", string0);
  }
}
