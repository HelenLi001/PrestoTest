/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 09:19:35 GMT 2021
 */

package com.facebook.presto.tpcds;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.common.predicate.NullableValue;
import com.facebook.presto.common.predicate.TupleDomain;
import com.facebook.presto.common.type.IntegerType;
import com.facebook.presto.common.type.TimeType;
import com.facebook.presto.common.type.Type;
import com.facebook.presto.spi.ColumnHandle;
import com.facebook.presto.spi.ColumnMetadata;
import com.facebook.presto.spi.ConnectorSession;
import com.facebook.presto.spi.ConnectorTableHandle;
import com.facebook.presto.spi.ConnectorTableLayout;
import com.facebook.presto.spi.ConnectorTableLayoutHandle;
import com.facebook.presto.spi.Constraint;
import com.facebook.presto.spi.SchemaTableName;
import com.facebook.presto.spi.SchemaTablePrefix;
import com.facebook.presto.testing.TestingHandle;
import com.facebook.presto.tpcds.TpcdsMetadata;
import com.facebook.presto.tpcds.TpcdsTableHandle;
import com.facebook.presto.tpcds.TpcdsTableLayoutHandle;
import com.facebook.presto.tpch.TpchTableHandle;
import com.teradata.tpcds.column.ColumnType;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import java.util.Set;
import java.util.TreeSet;
import org.eclipse.jetty.util.IncludeExcludeSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TpcdsMetadata_ESTest extends TpcdsMetadata_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TpcdsMetadata tpcdsMetadata0 = new TpcdsMetadata();
      SchemaTablePrefix schemaTablePrefix0 = new SchemaTablePrefix("sfZC");
      Map<SchemaTableName, List<ColumnMetadata>> map0 = tpcdsMetadata0.listTableColumns((ConnectorSession) null, schemaTablePrefix0);
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TpcdsMetadata tpcdsMetadata0 = new TpcdsMetadata();
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle(")B{' lPCq:Gw2", 0.01);
      TpcdsTableLayoutHandle tpcdsTableLayoutHandle0 = new TpcdsTableLayoutHandle(tpcdsTableHandle0);
      ConnectorTableLayout connectorTableLayout0 = tpcdsMetadata0.getTableLayout((ConnectorSession) null, tpcdsTableLayoutHandle0);
      assertNotNull(connectorTableLayout0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        TpcdsMetadata.schemaNameToScaleFactor((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TpcdsMetadata tpcdsMetadata0 = new TpcdsMetadata();
      // Undeclared exception!
      try { 
        tpcdsMetadata0.listTables((ConnectorSession) null, (Optional<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.tpcds.TpcdsMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TpcdsMetadata tpcdsMetadata0 = new TpcdsMetadata();
      // Undeclared exception!
      try { 
        tpcdsMetadata0.listTableColumns((ConnectorSession) null, (SchemaTablePrefix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.tpcds.TpcdsMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TpcdsMetadata tpcdsMetadata0 = new TpcdsMetadata();
      // Undeclared exception!
      try { 
        tpcdsMetadata0.getTableMetadata((ConnectorSession) null, (ConnectorTableHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.tpcds.TpcdsMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TpcdsMetadata tpcdsMetadata0 = new TpcdsMetadata();
      TpchTableHandle tpchTableHandle0 = new TpchTableHandle("tiny", 0.01);
      // Undeclared exception!
      try { 
        tpcdsMetadata0.getTableMetadata((ConnectorSession) null, tpchTableHandle0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.facebook.presto.tpch.TpchTableHandle cannot be cast to com.facebook.presto.tpcds.TpcdsTableHandle
         //
         verifyException("com.facebook.presto.tpcds.TpcdsMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TpcdsMetadata tpcdsMetadata0 = new TpcdsMetadata();
      // Undeclared exception!
      try { 
        tpcdsMetadata0.getTableLayout((ConnectorSession) null, (ConnectorTableLayoutHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.tpcds.TpcdsMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TpcdsMetadata tpcdsMetadata0 = new TpcdsMetadata();
      // Undeclared exception!
      try { 
        tpcdsMetadata0.getTableHandle((ConnectorSession) null, (SchemaTableName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // tableName is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ColumnType.Base columnType_Base0 = ColumnType.Base.VARCHAR;
      Integer integer0 = new Integer((-1105075535));
      Optional<Integer> optional0 = Optional.ofNullable(integer0);
      ColumnType columnType0 = mock(ColumnType.class, new ViolatedAssumptionAnswer());
      doReturn(columnType_Base0).when(columnType0).getBase();
      doReturn(optional0).when(columnType0).getPrecision();
      // Undeclared exception!
      try { 
        TpcdsMetadata.getPrestoType(columnType0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid VARCHAR length -1105075535
         //
         verifyException("com.facebook.presto.common.type.VarcharType", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TpcdsMetadata tpcdsMetadata0 = new TpcdsMetadata();
      // Undeclared exception!
      try { 
        tpcdsMetadata0.getColumnMetadata((ConnectorSession) null, (ConnectorTableHandle) null, (ColumnHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.tpcds.TpcdsMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TpcdsMetadata tpcdsMetadata0 = new TpcdsMetadata();
      // Undeclared exception!
      try { 
        tpcdsMetadata0.getColumnHandles((ConnectorSession) null, (ConnectorTableHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.tpcds.TpcdsMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TpcdsMetadata tpcdsMetadata0 = new TpcdsMetadata();
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle("vXn}h.Ol[6}", 1835.2402502);
      // Undeclared exception!
      try { 
        tpcdsMetadata0.getColumnHandles((ConnectorSession) null, tpcdsTableHandle0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TpcdsMetadata tpcdsMetadata0 = new TpcdsMetadata();
      TpchTableHandle tpchTableHandle0 = new TpchTableHandle("vnd.oasis.opendocument.spreadsheet", 0.01);
      // Undeclared exception!
      try { 
        tpcdsMetadata0.getColumnHandles((ConnectorSession) null, tpchTableHandle0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.facebook.presto.tpch.TpchTableHandle cannot be cast to com.facebook.presto.tpcds.TpcdsTableHandle
         //
         verifyException("com.facebook.presto.tpcds.TpcdsMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ColumnType.Base columnType_Base0 = ColumnType.Base.INTEGER;
      ColumnType columnType0 = mock(ColumnType.class, new ViolatedAssumptionAnswer());
      doReturn(columnType_Base0).when(columnType0).getBase();
      IntegerType integerType0 = (IntegerType)TpcdsMetadata.getPrestoType(columnType0);
      assertEquals(4, integerType0.getFixedSize());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ColumnType.Base columnType_Base0 = ColumnType.Base.DATE;
      ColumnType columnType0 = mock(ColumnType.class, new ViolatedAssumptionAnswer());
      doReturn(columnType_Base0).when(columnType0).getBase();
      Type type0 = TpcdsMetadata.getPrestoType(columnType0);
      assertTrue(type0.isComparable());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ColumnType.Base columnType_Base0 = ColumnType.Base.IDENTIFIER;
      ColumnType columnType0 = mock(ColumnType.class, new ViolatedAssumptionAnswer());
      doReturn(columnType_Base0).when(columnType0).getBase();
      Type type0 = TpcdsMetadata.getPrestoType(columnType0);
      assertTrue(type0.isComparable());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ColumnType.Base columnType_Base0 = ColumnType.Base.DECIMAL;
      ColumnType columnType0 = mock(ColumnType.class, new ViolatedAssumptionAnswer());
      doReturn(columnType_Base0).when(columnType0).getBase();
      doReturn((Optional) null).when(columnType0).getPrecision();
      // Undeclared exception!
      try { 
        TpcdsMetadata.getPrestoType(columnType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ColumnType.Base columnType_Base0 = ColumnType.Base.TIME;
      ColumnType columnType0 = mock(ColumnType.class, new ViolatedAssumptionAnswer());
      doReturn(columnType_Base0).when(columnType0).getBase();
      TimeType timeType0 = (TimeType)TpcdsMetadata.getPrestoType(columnType0);
      assertEquals(8, timeType0.getFixedSize());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ColumnType.Base columnType_Base0 = ColumnType.Base.CHAR;
      ColumnType columnType0 = mock(ColumnType.class, new ViolatedAssumptionAnswer());
      doReturn(columnType_Base0).when(columnType0).getBase();
      doReturn((Optional) null).when(columnType0).getPrecision();
      // Undeclared exception!
      try { 
        TpcdsMetadata.getPrestoType(columnType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double double0 = TpcdsMetadata.schemaNameToScaleFactor("%=eg|]h");
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double double0 = TpcdsMetadata.schemaNameToScaleFactor("tiny");
      assertEquals(0.01, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double double0 = TpcdsMetadata.schemaNameToScaleFactor("sf1");
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TpcdsMetadata tpcdsMetadata0 = new TpcdsMetadata();
      Optional<String> optional0 = Optional.ofNullable("tiny");
      List<SchemaTableName> list0 = tpcdsMetadata0.listTables((ConnectorSession) null, optional0);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TpcdsMetadata tpcdsMetadata0 = new TpcdsMetadata();
      SchemaTablePrefix schemaTablePrefix0 = new SchemaTablePrefix("tiny", "tiny");
      Map<SchemaTableName, List<ColumnMetadata>> map0 = (Map<SchemaTableName, List<ColumnMetadata>>)tpcdsMetadata0.listTableColumns((ConnectorSession) null, schemaTablePrefix0);
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TpcdsMetadata tpcdsMetadata0 = new TpcdsMetadata();
      SchemaTablePrefix schemaTablePrefix0 = new SchemaTablePrefix();
      Map<SchemaTableName, List<ColumnMetadata>> map0 = tpcdsMetadata0.listTableColumns((ConnectorSession) null, schemaTablePrefix0);
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TpcdsMetadata tpcdsMetadata0 = new TpcdsMetadata();
      SchemaTablePrefix schemaTablePrefix0 = new SchemaTablePrefix("tiny", "tiny");
      SchemaTableName schemaTableName0 = schemaTablePrefix0.toSchemaTableName();
      ConnectorTableHandle connectorTableHandle0 = tpcdsMetadata0.getTableHandle((ConnectorSession) null, schemaTableName0);
      assertNull(connectorTableHandle0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TpcdsMetadata tpcdsMetadata0 = new TpcdsMetadata();
      TpchTableHandle tpchTableHandle0 = new TpchTableHandle("A'", 0.01);
      TupleDomain<ColumnHandle> tupleDomain0 = TupleDomain.all();
      IncludeExcludeSet<ColumnMetadata, Map<ColumnHandle, NullableValue>> includeExcludeSet0 = new IncludeExcludeSet<ColumnMetadata, Map<ColumnHandle, NullableValue>>();
      Constraint<ColumnHandle> constraint0 = new Constraint<ColumnHandle>(tupleDomain0, includeExcludeSet0);
      TreeSet<ColumnHandle> treeSet0 = new TreeSet<ColumnHandle>();
      Optional<Set<ColumnHandle>> optional0 = Optional.ofNullable((Set<ColumnHandle>) treeSet0);
      // Undeclared exception!
      try { 
        tpcdsMetadata0.getTableLayouts((ConnectorSession) null, tpchTableHandle0, constraint0, optional0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.facebook.presto.tpch.TpchTableHandle cannot be cast to com.facebook.presto.tpcds.TpcdsTableHandle
         //
         verifyException("com.facebook.presto.tpcds.TpcdsMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TpcdsMetadata tpcdsMetadata0 = new TpcdsMetadata();
      List<String> list0 = tpcdsMetadata0.listSchemaNames((ConnectorSession) null);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TpcdsMetadata tpcdsMetadata0 = new TpcdsMetadata();
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle("tiny", 0.01);
      // Undeclared exception!
      try { 
        tpcdsMetadata0.getTableMetadata((ConnectorSession) null, tpcdsTableHandle0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TpcdsMetadata tpcdsMetadata0 = new TpcdsMetadata();
      TestingHandle testingHandle0 = TestingHandle.INSTANCE;
      Optional<ConnectorTableLayoutHandle> optional0 = Optional.ofNullable((ConnectorTableLayoutHandle) testingHandle0);
      ArrayList<ColumnHandle> arrayList0 = new ArrayList<ColumnHandle>();
      Constraint<ColumnHandle> constraint0 = Constraint.alwaysTrue();
      // Undeclared exception!
      try { 
        tpcdsMetadata0.getTableStatistics((ConnectorSession) null, (ConnectorTableHandle) null, optional0, arrayList0, constraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.tpcds.TpcdsMetadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TpcdsMetadata tpcdsMetadata0 = new TpcdsMetadata();
      TestingHandle testingHandle0 = TestingHandle.INSTANCE;
      // Undeclared exception!
      try { 
        tpcdsMetadata0.getTableLayout((ConnectorSession) null, testingHandle0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.facebook.presto.testing.TestingHandle cannot be cast to com.facebook.presto.tpcds.TpcdsTableLayoutHandle
         //
         verifyException("com.facebook.presto.tpcds.TpcdsMetadata", e);
      }
  }
}
