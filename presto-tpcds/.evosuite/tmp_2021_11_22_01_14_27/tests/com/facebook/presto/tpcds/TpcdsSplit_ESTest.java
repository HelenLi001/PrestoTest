/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 09:19:31 GMT 2021
 */

package com.facebook.presto.tpcds;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.spi.HostAddress;
import com.facebook.presto.tpcds.TpcdsSplit;
import com.facebook.presto.tpcds.TpcdsTableHandle;
import java.util.ArrayList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TpcdsSplit_ESTest extends TpcdsSplit_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle("Q:", 1281.58006109);
      Stack<HostAddress> stack0 = new Stack<HostAddress>();
      TpcdsSplit tpcdsSplit0 = new TpcdsSplit(tpcdsTableHandle0, 0, 457, stack0, false);
      boolean boolean0 = tpcdsSplit0.isNoSexism();
      assertEquals(457, tpcdsSplit0.getTotalParts());
      assertEquals(0, tpcdsSplit0.getPartNumber());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle("{%6", 113.14);
      ArrayList<HostAddress> arrayList0 = new ArrayList<HostAddress>();
      TpcdsSplit tpcdsSplit0 = new TpcdsSplit(tpcdsTableHandle0, 0, 3, arrayList0, true);
      int int0 = tpcdsSplit0.getPartNumber();
      assertEquals(3, tpcdsSplit0.getTotalParts());
      assertEquals(0, int0);
      assertTrue(tpcdsSplit0.isNoSexism());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TpcdsSplit tpcdsSplit0 = null;
      try {
        tpcdsSplit0 = new TpcdsSplit((TpcdsTableHandle) null, 0, 950, (List<HostAddress>) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // tableHandle is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle(";@uewM]0", 672.8562324);
      Vector<HostAddress> vector0 = new Vector<HostAddress>();
      vector0.setSize(124);
      TpcdsSplit tpcdsSplit0 = null;
      try {
        tpcdsSplit0 = new TpcdsSplit(tpcdsTableHandle0, 10, 124, vector0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle("Z\"-bh74W]F+APG1!", 643.58);
      ArrayList<HostAddress> arrayList0 = new ArrayList<HostAddress>();
      TpcdsSplit tpcdsSplit0 = new TpcdsSplit(tpcdsTableHandle0, 4, 178, arrayList0, false);
      TpcdsSplit tpcdsSplit1 = new TpcdsSplit(tpcdsTableHandle0, 4, 178, arrayList0, false);
      boolean boolean0 = tpcdsSplit0.equals(tpcdsSplit1);
      assertEquals(4, tpcdsSplit1.getPartNumber());
      assertFalse(tpcdsSplit1.isNoSexism());
      assertEquals(178, tpcdsSplit1.getTotalParts());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle("Z\"-bh74W]F+APG1!", 643.58);
      ArrayList<HostAddress> arrayList0 = new ArrayList<HostAddress>();
      TpcdsSplit tpcdsSplit0 = new TpcdsSplit(tpcdsTableHandle0, 4, 178, arrayList0, false);
      TpcdsSplit tpcdsSplit1 = new TpcdsSplit(tpcdsTableHandle0, 58, 178, arrayList0, false);
      boolean boolean0 = tpcdsSplit0.equals(tpcdsSplit1);
      assertFalse(tpcdsSplit1.isNoSexism());
      assertEquals(58, tpcdsSplit1.getPartNumber());
      assertFalse(boolean0);
      assertEquals(178, tpcdsSplit1.getTotalParts());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle("Z\"-bh74W]F+APG1!", 643.58);
      ArrayList<HostAddress> arrayList0 = new ArrayList<HostAddress>();
      TpcdsSplit tpcdsSplit0 = new TpcdsSplit(tpcdsTableHandle0, 4, 178, arrayList0, false);
      TpcdsTableHandle tpcdsTableHandle1 = new TpcdsTableHandle("Z\"-bh74W]F+APG1!", 178);
      TpcdsSplit tpcdsSplit1 = new TpcdsSplit(tpcdsTableHandle1, 60, 1778, arrayList0, true);
      boolean boolean0 = tpcdsSplit0.equals(tpcdsSplit1);
      assertFalse(boolean0);
      assertEquals(60, tpcdsSplit1.getPartNumber());
      assertTrue(tpcdsSplit1.isNoSexism());
      assertEquals(1778, tpcdsSplit1.getTotalParts());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle("-(EwUD1Wc-zY", Double.POSITIVE_INFINITY);
      Stack<HostAddress> stack0 = new Stack<HostAddress>();
      HostAddress hostAddress0 = HostAddress.fromParts("-(EwUD1Wc-zY", 0);
      TpcdsSplit tpcdsSplit0 = new TpcdsSplit(tpcdsTableHandle0, 0, 2, stack0, true);
      boolean boolean0 = tpcdsSplit0.equals(hostAddress0);
      assertEquals(0, tpcdsSplit0.getPartNumber());
      assertFalse(boolean0);
      assertEquals(2, tpcdsSplit0.getTotalParts());
      assertTrue(tpcdsSplit0.isNoSexism());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle("Q:", 1281.58006109);
      Stack<HostAddress> stack0 = new Stack<HostAddress>();
      TpcdsSplit tpcdsSplit0 = new TpcdsSplit(tpcdsTableHandle0, 0, 457, stack0, false);
      boolean boolean0 = tpcdsSplit0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(457, tpcdsSplit0.getTotalParts());
      assertEquals(0, tpcdsSplit0.getPartNumber());
      assertFalse(tpcdsSplit0.isNoSexism());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle("Z\"-bh74W]F+APG1!", 643.58);
      ArrayList<HostAddress> arrayList0 = new ArrayList<HostAddress>();
      TpcdsSplit tpcdsSplit0 = new TpcdsSplit(tpcdsTableHandle0, 4, 178, arrayList0, false);
      boolean boolean0 = tpcdsSplit0.equals(tpcdsSplit0);
      assertEquals(178, tpcdsSplit0.getTotalParts());
      assertFalse(tpcdsSplit0.isNoSexism());
      assertEquals(4, tpcdsSplit0.getPartNumber());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle("Z\"-bh74W]F+APG1!", 643.58);
      ArrayList<HostAddress> arrayList0 = new ArrayList<HostAddress>();
      TpcdsSplit tpcdsSplit0 = new TpcdsSplit(tpcdsTableHandle0, 4, 178, arrayList0, false);
      TpcdsSplit tpcdsSplit1 = new TpcdsSplit(tpcdsTableHandle0, 58, 60, arrayList0, false);
      boolean boolean0 = tpcdsSplit1.equals(tpcdsSplit0);
      assertEquals(60, tpcdsSplit1.getTotalParts());
      assertFalse(boolean0);
      assertFalse(tpcdsSplit1.isNoSexism());
      assertEquals(58, tpcdsSplit1.getPartNumber());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle("Z\"-bh74W]F+APG1!", 643.58);
      ArrayList<HostAddress> arrayList0 = new ArrayList<HostAddress>();
      TpcdsSplit tpcdsSplit0 = null;
      try {
        tpcdsSplit0 = new TpcdsSplit(tpcdsTableHandle0, 178, 4, arrayList0, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // totalParts must be > partNumber
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TpcdsTableHandle tpcdsTableHandle0 = mock(TpcdsTableHandle.class, new ViolatedAssumptionAnswer());
      TpcdsSplit tpcdsSplit0 = null;
      try {
        tpcdsSplit0 = new TpcdsSplit(tpcdsTableHandle0, 0, 0, (List<HostAddress>) null, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // totalParts must be >= 1
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TpcdsSplit tpcdsSplit0 = null;
      try {
        tpcdsSplit0 = new TpcdsSplit((TpcdsTableHandle) null, (-1), (-1), (List<HostAddress>) null, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // partNumber must be >= 0
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle("Z\"-bh74W]F+APG1!", 643.58);
      ArrayList<HostAddress> arrayList0 = new ArrayList<HostAddress>();
      TpcdsSplit tpcdsSplit0 = new TpcdsSplit(tpcdsTableHandle0, 4, 178, arrayList0, false);
      TpcdsSplit tpcdsSplit1 = (TpcdsSplit)tpcdsSplit0.getInfo();
      assertEquals(4, tpcdsSplit1.getPartNumber());
      assertFalse(tpcdsSplit1.isNoSexism());
      assertEquals(178, tpcdsSplit1.getTotalParts());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle("Z\"-bh74W]F+APG1!", 643.58);
      ArrayList<HostAddress> arrayList0 = new ArrayList<HostAddress>();
      TpcdsSplit tpcdsSplit0 = new TpcdsSplit(tpcdsTableHandle0, 4, 178, arrayList0, false);
      String string0 = tpcdsSplit0.toString();
      assertEquals("TpcdsSplit{tableHandle=tpcds:Z\"-bh74W]F+APG1!:sf643.58, partNumber=4, totalParts=178, noSexism=false}", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle("-(EwUD1Wc-zY", Double.POSITIVE_INFINITY);
      Stack<HostAddress> stack0 = new Stack<HostAddress>();
      TpcdsSplit tpcdsSplit0 = new TpcdsSplit(tpcdsTableHandle0, 0, 2, stack0, true);
      tpcdsSplit0.hashCode();
      assertTrue(tpcdsSplit0.isNoSexism());
      assertEquals(0, tpcdsSplit0.getPartNumber());
      assertEquals(2, tpcdsSplit0.getTotalParts());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle("Z\"-bh74W]F+APG1!", 643.58);
      ArrayList<HostAddress> arrayList0 = new ArrayList<HostAddress>();
      TpcdsSplit tpcdsSplit0 = new TpcdsSplit(tpcdsTableHandle0, 4, 178, arrayList0, false);
      int int0 = tpcdsSplit0.getTotalParts();
      assertEquals(4, tpcdsSplit0.getPartNumber());
      assertEquals(178, int0);
      assertFalse(tpcdsSplit0.isNoSexism());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle("Z\"-bh74W]F+APG1!", 643.58);
      ArrayList<HostAddress> arrayList0 = new ArrayList<HostAddress>();
      TpcdsSplit tpcdsSplit0 = new TpcdsSplit(tpcdsTableHandle0, 4, 178, arrayList0, false);
      tpcdsSplit0.getAddresses();
      assertEquals(178, tpcdsSplit0.getTotalParts());
      assertFalse(tpcdsSplit0.isNoSexism());
      assertEquals(4, tpcdsSplit0.getPartNumber());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle("-(EwUD1Wc-zY", Double.POSITIVE_INFINITY);
      Stack<HostAddress> stack0 = new Stack<HostAddress>();
      TpcdsSplit tpcdsSplit0 = new TpcdsSplit(tpcdsTableHandle0, 0, 2, stack0, true);
      tpcdsSplit0.getNodeSelectionStrategy();
      assertEquals(2, tpcdsSplit0.getTotalParts());
      assertEquals(0, tpcdsSplit0.getPartNumber());
      assertTrue(tpcdsSplit0.isNoSexism());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle("-(EwUD1Wc-zY", Double.POSITIVE_INFINITY);
      Stack<HostAddress> stack0 = new Stack<HostAddress>();
      TpcdsSplit tpcdsSplit0 = new TpcdsSplit(tpcdsTableHandle0, 0, 2, stack0, true);
      tpcdsSplit0.getTableHandle();
      assertTrue(tpcdsSplit0.isNoSexism());
      assertEquals(2, tpcdsSplit0.getTotalParts());
      assertEquals(0, tpcdsSplit0.getPartNumber());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle("-(EwUD1Wc-zY", Double.POSITIVE_INFINITY);
      Stack<HostAddress> stack0 = new Stack<HostAddress>();
      TpcdsSplit tpcdsSplit0 = new TpcdsSplit(tpcdsTableHandle0, 0, 2, stack0, true);
      boolean boolean0 = tpcdsSplit0.isNoSexism();
      assertEquals(2, tpcdsSplit0.getTotalParts());
      assertTrue(boolean0);
      assertEquals(0, tpcdsSplit0.getPartNumber());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle("-(EwUD1Wc-zY", Double.POSITIVE_INFINITY);
      Stack<HostAddress> stack0 = new Stack<HostAddress>();
      TpcdsSplit tpcdsSplit0 = new TpcdsSplit(tpcdsTableHandle0, 0, 2, stack0, true);
      tpcdsSplit0.getPreferredNodes(stack0);
      assertTrue(tpcdsSplit0.isNoSexism());
      assertEquals(2, tpcdsSplit0.getTotalParts());
      assertEquals(0, tpcdsSplit0.getPartNumber());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TpcdsTableHandle tpcdsTableHandle0 = new TpcdsTableHandle("Z\"-bh74W]F+APG1!", 643.58);
      ArrayList<HostAddress> arrayList0 = new ArrayList<HostAddress>();
      TpcdsSplit tpcdsSplit0 = new TpcdsSplit(tpcdsTableHandle0, 4, 178, arrayList0, false);
      int int0 = tpcdsSplit0.getPartNumber();
      assertEquals(178, tpcdsSplit0.getTotalParts());
      assertEquals(4, int0);
      assertFalse(tpcdsSplit0.isNoSexism());
  }
}
