/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 21:15:24 GMT 2021
 */

package com.facebook.presto.verifier.framework;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.verifier.framework.ClusterType;
import com.facebook.presto.verifier.framework.QueryStage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class QueryStage_ESTest extends QueryStage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QueryStage[] queryStageArray0 = QueryStage.values();
      assertEquals(14, queryStageArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QueryStage queryStage0 = QueryStage.valueOf("CONTROL_TEARDOWN");
      assertEquals(QueryStage.CONTROL_TEARDOWN, queryStage0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QueryStage queryStage0 = QueryStage.valueOf("CONTROL_MAIN");
      assertFalse(queryStage0.isTeardown());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QueryStage queryStage0 = QueryStage.valueOf("TEST_SETUP");
      assertTrue(queryStage0.isSetup());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        QueryStage.forTeardown((ClusterType) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Invalid cluster: null
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        QueryStage.forMain((ClusterType) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Invalid cluster: null
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        QueryStage.forSetup((ClusterType) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Invalid cluster: null
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClusterType clusterType0 = ClusterType.TEST;
      QueryStage queryStage0 = QueryStage.forTeardown(clusterType0);
      assertEquals(QueryStage.TEST_TEARDOWN, queryStage0);
      
      boolean boolean0 = queryStage0.isTeardown();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClusterType clusterType0 = ClusterType.TEST;
      QueryStage queryStage0 = QueryStage.forSetup(clusterType0);
      assertEquals(QueryStage.TEST_SETUP, queryStage0);
      
      boolean boolean0 = queryStage0.isTeardown();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClusterType clusterType0 = ClusterType.CONTROL;
      QueryStage queryStage0 = QueryStage.forTeardown(clusterType0);
      assertEquals(QueryStage.CONTROL_TEARDOWN, queryStage0);
      
      boolean boolean0 = queryStage0.isTeardown();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClusterType clusterType0 = ClusterType.TEST;
      QueryStage queryStage0 = QueryStage.forMain(clusterType0);
      assertEquals(QueryStage.TEST_MAIN, queryStage0);
      
      boolean boolean0 = queryStage0.isMain();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClusterType clusterType0 = ClusterType.TEST;
      QueryStage queryStage0 = QueryStage.forSetup(clusterType0);
      assertEquals(QueryStage.TEST_SETUP, queryStage0);
      
      boolean boolean0 = queryStage0.isMain();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClusterType clusterType0 = ClusterType.CONTROL;
      QueryStage queryStage0 = QueryStage.forMain(clusterType0);
      assertEquals(QueryStage.CONTROL_MAIN, queryStage0);
      
      boolean boolean0 = queryStage0.isMain();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClusterType clusterType0 = ClusterType.TEST;
      QueryStage queryStage0 = QueryStage.forSetup(clusterType0);
      assertEquals(QueryStage.TEST_SETUP, queryStage0);
      
      boolean boolean0 = queryStage0.isSetup();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QueryStage queryStage0 = QueryStage.TEST_TEARDOWN;
      boolean boolean0 = queryStage0.isSetup();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClusterType clusterType0 = ClusterType.CONTROL;
      QueryStage queryStage0 = QueryStage.forSetup(clusterType0);
      assertEquals(QueryStage.CONTROL_SETUP, queryStage0);
      
      boolean boolean0 = queryStage0.isSetup();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClusterType clusterType0 = ClusterType.CONTROL;
      QueryStage queryStage0 = QueryStage.forMain(clusterType0);
      assertEquals(QueryStage.CONTROL_MAIN, queryStage0);
      
      ClusterType clusterType1 = queryStage0.getTargetCluster();
      assertEquals(ClusterType.CONTROL, clusterType1);
  }
}
