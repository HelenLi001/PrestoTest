/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon Nov 22 21:07:43 GMT 2021
 */

package com.facebook.presto.verifier.framework;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class DeterminismAnalyzer_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.facebook.presto.verifier.framework.DeterminismAnalyzer"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.dir", "/mnt/c/Users/Helen/Documents/DataScience18668/GroupProject/project/presto/presto-verifier"); 
    java.lang.System.setProperty("user.home", "/home/helen"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "helen"); 
    java.lang.System.setProperty("user.timezone", "America/Los_Angeles"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DeterminismAnalyzer_ESTest_scaffolding.class.getClassLoader() ,
      "com.facebook.presto.verifier.framework.QueryConfiguration",
      "com.google.common.collect.ImmutableSet$SetBuilderImpl",
      "com.facebook.presto.verifier.framework.DeterminismAnalyzerConfig",
      "com.facebook.presto.verifier.framework.DeterminismAnalyzer",
      "org.jdbi.v3.core.mapper.Nested",
      "com.google.common.collect.ImmutableCollection",
      "com.facebook.presto.verifier.event.DeterminismAnalysisDetails$Builder",
      "com.facebook.presto.verifier.framework.MatchResult",
      "com.facebook.presto.common.type.TypeSignature",
      "com.facebook.presto.verifier.checksum.ColumnMatchResult",
      "com.google.inject.BindingAnnotation",
      "com.facebook.presto.verifier.framework.QueryResult",
      "com.facebook.presto.verifier.framework.DataMatchResult",
      "com.facebook.presto.verifier.framework.QueryObjectBundle",
      "com.facebook.presto.verifier.framework.Column$Category",
      "com.facebook.presto.verifier.framework.SourceQuery",
      "com.facebook.presto.sql.tree.CreateTable",
      "com.facebook.presto.verifier.checksum.ColumnValidator",
      "com.facebook.airlift.configuration.ConfigDescription",
      "com.facebook.presto.sql.tree.FunctionCall",
      "com.google.common.collect.ImmutableSet",
      "com.facebook.presto.sql.tree.Query",
      "com.facebook.presto.sql.tree.QueryBody",
      "com.facebook.presto.sql.tree.QuerySpecification",
      "com.facebook.presto.sql.tree.Node",
      "com.facebook.presto.verifier.framework.ClusterType",
      "com.facebook.presto.sql.parser.SqlParser",
      "com.facebook.airlift.configuration.LegacyConfig",
      "com.google.common.collect.RegularImmutableSet",
      "com.facebook.presto.verifier.checksum.ChecksumResult",
      "com.facebook.presto.verifier.prestoaction.PrestoAction$ResultSetConverter",
      "com.facebook.presto.sql.tree.CreateView",
      "com.facebook.airlift.configuration.Config",
      "com.facebook.presto.sql.tree.QualifiedName",
      "com.facebook.presto.sql.tree.Table",
      "com.facebook.presto.common.type.TypeSignatureParameter",
      "com.google.common.collect.ImmutableAsList",
      "com.google.common.collect.RegularImmutableAsList",
      "com.google.common.collect.SingletonImmutableSet",
      "com.facebook.presto.verifier.framework.QueryBundle",
      "com.facebook.presto.sql.tree.Identifier",
      "com.facebook.presto.verifier.framework.DeterminismAnalysis",
      "org.jdbi.v3.core.mapper.reflect.ColumnName",
      "com.google.common.collect.ImmutableList",
      "com.facebook.presto.common.type.TypeManager",
      "com.facebook.presto.sql.tree.Cast",
      "com.facebook.presto.verifier.rewrite.QueryRewriter",
      "com.facebook.presto.common.type.Type",
      "com.facebook.presto.sql.tree.CreateTableAsSelect",
      "com.facebook.presto.sql.tree.Property",
      "com.facebook.presto.verifier.prestoaction.QueryAction",
      "org.jdbi.v3.core.mapper.reflect.JdbiConstructor",
      "com.facebook.presto.sql.tree.Relation",
      "com.facebook.presto.verifier.prestoaction.QueryActionStats",
      "com.facebook.presto.verifier.framework.Column",
      "com.facebook.presto.sql.tree.NodeLocation",
      "com.facebook.presto.sql.tree.AstVisitor",
      "com.facebook.presto.sql.tree.Insert",
      "com.facebook.presto.verifier.framework.QueryException",
      "com.facebook.presto.verifier.event.DeterminismAnalysisDetails",
      "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
      "com.facebook.presto.sql.tree.Expression",
      "com.facebook.presto.verifier.checksum.ChecksumValidator",
      "com.facebook.presto.verifier.event.DeterminismAnalysisRun$Builder",
      "com.facebook.presto.sql.tree.ShowCreate",
      "com.facebook.presto.verifier.prestoaction.PrestoAction",
      "com.facebook.presto.sql.tree.Statement",
      "com.facebook.presto.verifier.framework.QueryStage"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("com.facebook.presto.common.type.TypeManager", false, DeterminismAnalyzer_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("com.facebook.presto.sql.tree.QualifiedName", false, DeterminismAnalyzer_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("com.facebook.presto.sql.tree.Statement", false, DeterminismAnalyzer_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("com.facebook.presto.verifier.checksum.ChecksumResult", false, DeterminismAnalyzer_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("com.facebook.presto.verifier.checksum.ChecksumValidator", false, DeterminismAnalyzer_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("com.facebook.presto.verifier.framework.DeterminismAnalyzerConfig", false, DeterminismAnalyzer_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("com.facebook.presto.verifier.framework.QueryObjectBundle", false, DeterminismAnalyzer_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("com.facebook.presto.verifier.framework.QueryResult", false, DeterminismAnalyzer_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("com.facebook.presto.verifier.framework.SourceQuery", false, DeterminismAnalyzer_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("com.facebook.presto.verifier.prestoaction.PrestoAction", false, DeterminismAnalyzer_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("com.facebook.presto.verifier.rewrite.QueryRewriter", false, DeterminismAnalyzer_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DeterminismAnalyzer_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.facebook.presto.verifier.framework.DeterminismAnalyzer",
      "com.facebook.presto.sql.tree.AstVisitor",
      "com.facebook.presto.verifier.framework.DeterminismAnalyzer$NonDeterministicCatalogVisitor",
      "com.google.common.collect.ImmutableCollection",
      "com.google.common.collect.ImmutableSet",
      "com.google.common.collect.RegularImmutableSet",
      "com.facebook.presto.verifier.framework.DeterminismAnalysis$Category",
      "com.facebook.presto.verifier.framework.DeterminismAnalysis",
      "com.facebook.presto.verifier.framework.DataMatchResult$MatchType",
      "com.facebook.presto.verifier.framework.LimitQueryDeterminismAnalysis",
      "com.facebook.presto.verifier.framework.DeterminismAnalyzer$1",
      "com.facebook.presto.verifier.framework.ClusterType",
      "com.facebook.presto.verifier.framework.QueryStage",
      "com.facebook.presto.sql.parser.ParsingOptions$DecimalLiteralTreatment",
      "com.google.common.base.Functions$IdentityFunction",
      "com.google.common.collect.ImmutableList",
      "com.google.common.collect.RegularImmutableList",
      "com.facebook.airlift.log.Logger",
      "com.facebook.presto.verifier.framework.DataVerificationUtil",
      "com.facebook.presto.verifier.framework.SourceQuery",
      "com.facebook.presto.verifier.rewrite.QueryRewriter",
      "com.facebook.presto.verifier.checksum.ChecksumValidator",
      "com.facebook.presto.verifier.framework.DeterminismAnalyzerConfig",
      "com.facebook.presto.verifier.framework.QueryBundle",
      "com.facebook.presto.verifier.framework.QueryObjectBundle",
      "com.facebook.presto.verifier.checksum.ChecksumResult",
      "com.facebook.presto.sql.tree.Node",
      "com.facebook.presto.sql.tree.Statement",
      "com.facebook.presto.verifier.event.DeterminismAnalysisDetails",
      "com.facebook.presto.verifier.event.DeterminismAnalysisDetails$Builder",
      "com.facebook.presto.verifier.framework.LimitQueryDeterminismAnalyzer",
      "com.google.common.base.Preconditions",
      "com.facebook.presto.sql.tree.ShowColumns",
      "com.facebook.presto.sql.tree.QualifiedName",
      "com.facebook.presto.verifier.framework.QueryResult",
      "com.google.common.base.Strings",
      "com.google.common.collect.CollectCollectors",
      "com.google.common.collect.ImmutableCollection$Builder",
      "com.google.common.collect.ImmutableList$Builder"
    );
  }
}
