/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 21:11:12 GMT 2021
 */

package com.facebook.presto.verifier.prestoaction;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.facebook.presto.verifier.framework.QueryConfiguration;
import com.facebook.presto.verifier.framework.VerificationContext;
import com.facebook.presto.verifier.framework.VerifierConfig;
import com.facebook.presto.verifier.prestoaction.JdbcPrestoAction;
import com.facebook.presto.verifier.prestoaction.PrestoActionConfig;
import com.facebook.presto.verifier.prestoaction.SqlExceptionClassifier;
import com.facebook.presto.verifier.retry.RetryConfig;
import io.airlift.units.Duration;
import java.util.Iterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JdbcPrestoAction_ESTest extends JdbcPrestoAction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SqlExceptionClassifier sqlExceptionClassifier0 = mock(SqlExceptionClassifier.class, new ViolatedAssumptionAnswer());
      QueryConfiguration queryConfiguration0 = mock(QueryConfiguration.class, new ViolatedAssumptionAnswer());
      VerificationContext verificationContext0 = mock(VerificationContext.class, new ViolatedAssumptionAnswer());
      Iterator<String> iterator0 = (Iterator<String>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      Duration duration0 = mock(Duration.class, new ViolatedAssumptionAnswer());
      PrestoActionConfig prestoActionConfig0 = mock(PrestoActionConfig.class, new ViolatedAssumptionAnswer());
      doReturn("com.facebook.presto.sql.tree.RefreshMaterializedView").when(prestoActionConfig0).getApplicationName();
      doReturn(duration0).when(prestoActionConfig0).getQueryTimeout();
      doReturn(false).when(prestoActionConfig0).isRemoveMemoryRelatedSessionProperties();
      Duration duration1 = mock(Duration.class, new ViolatedAssumptionAnswer());
      RetryConfig retryConfig0 = mock(RetryConfig.class, new ViolatedAssumptionAnswer());
      JdbcPrestoAction jdbcPrestoAction0 = null;
      try {
        jdbcPrestoAction0 = new JdbcPrestoAction(sqlExceptionClassifier0, queryConfiguration0, verificationContext0, iterator0, prestoActionConfig0, duration1, duration1, retryConfig0, (RetryConfig) null, (VerifierConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.facebook.presto.verifier.prestoaction.JdbcPrestoAction", e);
      }
  }
}
